institution,elective,overview,title,summary,content,ilo
Durham_England,COMP3421,"<h2>title</h2>COMP3421: 
COMPUTER SCIENCE INTO SCHOOLS<h2>summary</h2>
			<li>To develop a range of key skills in the student and to offer an early taste of teaching to those interested in pursuing it as a career or for other career pathways where public understanding of science is required.</li>
			<li>To help students gain confidence in communicating Computer Science, develop strong organisational and interpersonal skills, and understand how to address the needs of individuals.</li>
			<li>To learn to devise and develop Computer Science projects and teaching methods appropriate to engage the relevant age group they are working with.</li>
			<li>To help inspire a new generation of Computer Scientists as prospective undergraduates by providing role models for school pupils.</li>
			<li>To help teachers convey the excitement of their subject to pupils by showing them the long-term applications of school studies, especially the cross disciplinary relationships of Computer Science.</li>
			<li>To help teachers by providing an assistant who can work with and support pupils at any point on the ability spectrum.</li>
		<h2>content</h2>
			<li>A competitive interview system will be used to match students with appropriate schools and a specific teacher in the local area, and each student selected will be given a chance to visit the school they will be working in before commencement of the placement.  </li>
			<li>One day training course on working in schools and with pupils.  </li>
			<li>Series of lectures on key transferable skills.  </li>
			<li>The student will be required to spend half a day (approx 4hrs) a week in the school every week for at least 10 weeks.  </li>
			<li>Tutorials which will provide an opportunity for students to share their experiences.  </li>
			<li>The students will be involved in the following activities in support of their learning and teaching:  </li>
			<li>Classroom observation and assistance: Initial contact with the teacher and pupils will be as a classroom assistant, watching how the teacher handles the class, observing the level being taught and the structure of the lesson, and offering practical support to the teacher.  </li>
			<li>Teaching assistance: The teacher will assign the student with actual teaching tasks, which will vary dependent on specific needs and the student's own ability as it develops over the term. This could include for example offering problem-solving coaching to a smaller group of higher ability pupils, or taking the last ten minutes of the lesson for the whole class. The student will have to demonstrate an understanding of how the level of the knowledge of the pupils they are teaching fits in to their overall learning context in other subjects.  </li>
			<li>Whole class teaching: Students will typically be offered, in collaboration with their teachers, at least one opportunity to undertake whole class teaching, albeit that it may be only for a small part of the lesson.  </li>
			<li>University awareness: Students will represent and promote their academic discipline as a potential university choice to pupils across the social and academic range represented at their partner schools.  </li>
			<li>Special projects: The student will devise a special Computer Science project on the basis of discussion with the teacher and module co-ordinator and their own assessment of what will interest the particular pupils they are working with. The student will implement the special project and evaluate it. The student will be required to show that they can analyse a specific teaching problem and devise and prepare appropriately targeted teaching materials, practical demonstrations and basis 'tests' where appropriate.  </li>
			<li>Extra-curricular projects: The student may be supervised by the teacher in helping to run an out-of-timetable activity, such as a lunchtime club or special coaching periods for higher ability pupils. The student will have to demonstrate an ability to think laterally in order to formulate interesting ways to illustrate more difficult scientific concepts.  </li>
			<li>Written reports: The student will keep a journal of their own progress in working in the classroom environment, and they will be asked to prepare a written report on the special project.  </li>
			<li>The teachers will act as the main source of guidance in the schools but, in addition, the students will also be able to discuss progress with the module co-ordinator or a member of the Science Outreach and Engagement Team whenever necessary.</li>
			<li>Solutional methods for computational problems.</li>
		<h2>ilo</h2>
				<li>On successful completion of this module students: </li>
				<li>Will be able to assess and devise appropriate ways to communicate a difficult principle or concept.</li>
				<li>Will have gained a broad understanding of many of the key aspects of teaching in schools.</li>
				<li>Will have an advanced understanding of Computer Science through having to explain to others.</li>
				<li>Will have an advanced understanding of the problems of public perception of science.  </li>
			","COMP3421: 
COMPUTER SCIENCE INTO SCHOOLS","
			<li>To develop a range of key skills in the student and to offer an early taste of teaching to those interested in pursuing it as a career or for other career pathways where public understanding of science is required.</li>
			<li>To help students gain confidence in communicating Computer Science, develop strong organisational and interpersonal skills, and understand how to address the needs of individuals.</li>
			<li>To learn to devise and develop Computer Science projects and teaching methods appropriate to engage the relevant age group they are working with.</li>
			<li>To help inspire a new generation of Computer Scientists as prospective undergraduates by providing role models for school pupils.</li>
			<li>To help teachers convey the excitement of their subject to pupils by showing them the long-term applications of school studies, especially the cross disciplinary relationships of Computer Science.</li>
			<li>To help teachers by providing an assistant who can work with and support pupils at any point on the ability spectrum.</li>
		","
			<li>A competitive interview system will be used to match students with appropriate schools and a specific teacher in the local area, and each student selected will be given a chance to visit the school they will be working in before commencement of the placement.  </li>
			<li>One day training course on working in schools and with pupils.  </li>
			<li>Series of lectures on key transferable skills.  </li>
			<li>The student will be required to spend half a day (approx 4hrs) a week in the school every week for at least 10 weeks.  </li>
			<li>Tutorials which will provide an opportunity for students to share their experiences.  </li>
			<li>The students will be involved in the following activities in support of their learning and teaching:  </li>
			<li>Classroom observation and assistance: Initial contact with the teacher and pupils will be as a classroom assistant, watching how the teacher handles the class, observing the level being taught and the structure of the lesson, and offering practical support to the teacher.  </li>
			<li>Teaching assistance: The teacher will assign the student with actual teaching tasks, which will vary dependent on specific needs and the student's own ability as it develops over the term. This could include for example offering problem-solving coaching to a smaller group of higher ability pupils, or taking the last ten minutes of the lesson for the whole class. The student will have to demonstrate an understanding of how the level of the knowledge of the pupils they are teaching fits in to their overall learning context in other subjects.  </li>
			<li>Whole class teaching: Students will typically be offered, in collaboration with their teachers, at least one opportunity to undertake whole class teaching, albeit that it may be only for a small part of the lesson.  </li>
			<li>University awareness: Students will represent and promote their academic discipline as a potential university choice to pupils across the social and academic range represented at their partner schools.  </li>
			<li>Special projects: The student will devise a special Computer Science project on the basis of discussion with the teacher and module co-ordinator and their own assessment of what will interest the particular pupils they are working with. The student will implement the special project and evaluate it. The student will be required to show that they can analyse a specific teaching problem and devise and prepare appropriately targeted teaching materials, practical demonstrations and basis 'tests' where appropriate.  </li>
			<li>Extra-curricular projects: The student may be supervised by the teacher in helping to run an out-of-timetable activity, such as a lunchtime club or special coaching periods for higher ability pupils. The student will have to demonstrate an ability to think laterally in order to formulate interesting ways to illustrate more difficult scientific concepts.  </li>
			<li>Written reports: The student will keep a journal of their own progress in working in the classroom environment, and they will be asked to prepare a written report on the special project.  </li>
			<li>The teachers will act as the main source of guidance in the schools but, in addition, the students will also be able to discuss progress with the module co-ordinator or a member of the Science Outreach and Engagement Team whenever necessary.</li>
			<li>Solutional methods for computational problems.</li>
		","
				<li>On successful completion of this module students: </li>
				<li>Will be able to assess and devise appropriate ways to communicate a difficult principle or concept.</li>
				<li>Will have gained a broad understanding of many of the key aspects of teaching in schools.</li>
				<li>Will have an advanced understanding of Computer Science through having to explain to others.</li>
				<li>Will have an advanced understanding of the problems of public perception of science.  </li>
			"
Durham_England,COMP3477,"<h2>title</h2>COMP3477: 
ALGORITHMIC GAME THEORY<h2>summary</h2>
			<li> The aim of the module is to introduce the student to the notion of a game, relevant concepts, and other basic notions and tools of game theory, as well as the main applications where such concepts are used and applied. </li>
		<h2>content</h2>
			<li>Introduction to Game Theory: what is a game? Strategy, preferences, payoffs. </li>
			<li>Bimatrix games: strategies and payoffs; Nash equilibria.  </li>
			<li>Extensive games with Perfect Information.  </li>
			<li>Mathematical and algorithmic foundations of market equilibria.  </li>
			<li>Routing Games on Networks; Congestion Games.  </li>
			<li>Mechanism design and Combinatorial Auctions.  </li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>An understanding of key game theoretic notions and ideas, and their connections to computer science and economics. </li>
				<li>An understanding of the impact of game theory and mechanism design on contemporary applications.  </li>
			","COMP3477: 
ALGORITHMIC GAME THEORY","
			<li> The aim of the module is to introduce the student to the notion of a game, relevant concepts, and other basic notions and tools of game theory, as well as the main applications where such concepts are used and applied. </li>
		","
			<li>Introduction to Game Theory: what is a game? Strategy, preferences, payoffs. </li>
			<li>Bimatrix games: strategies and payoffs; Nash equilibria.  </li>
			<li>Extensive games with Perfect Information.  </li>
			<li>Mathematical and algorithmic foundations of market equilibria.  </li>
			<li>Routing Games on Networks; Congestion Games.  </li>
			<li>Mechanism design and Combinatorial Auctions.  </li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>An understanding of key game theoretic notions and ideas, and their connections to computer science and economics. </li>
				<li>An understanding of the impact of game theory and mechanism design on contemporary applications.  </li>
			"
Durham_England,COMP3487,"<h2>title</h2>COMP3487: 
BIOINFORMATICS<h2>summary</h2>
			<li>To introduce students to applications of Computer Science in Biology.</li>
			<li>To introduce students to some important Statistical methods and algorithms.</li>
		<h2>content</h2>
			<li>Dynamic programming algorithms for sequence alignment.</li>
			<li>Efficient heuristic algorithms for sequence alignment.</li>
			<li>Markov Chains and Hidden Markov Models (HMM). </li>
			<li>Expectation-Maximisation algorithm with an application to parameter-estimation in HMM. </li>
			<li>Phylogenetic Trees as a model of Evolution.  </li>
			<li>Maximum parsimony and character-based techniques for tree reconstruction.  </li>
			<li>Distance-based tree reconstruction via neighbour-joining techniques.  </li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of the basic computational problems in Biology. </li>
				<li>an understanding of some fundamental statistical techniques.  </li>
				<li>an understanding of basic tree-reconstruction algorithms.  </li>
			","COMP3487: 
BIOINFORMATICS","
			<li>To introduce students to applications of Computer Science in Biology.</li>
			<li>To introduce students to some important Statistical methods and algorithms.</li>
		","
			<li>Dynamic programming algorithms for sequence alignment.</li>
			<li>Efficient heuristic algorithms for sequence alignment.</li>
			<li>Markov Chains and Hidden Markov Models (HMM). </li>
			<li>Expectation-Maximisation algorithm with an application to parameter-estimation in HMM. </li>
			<li>Phylogenetic Trees as a model of Evolution.  </li>
			<li>Maximum parsimony and character-based techniques for tree reconstruction.  </li>
			<li>Distance-based tree reconstruction via neighbour-joining techniques.  </li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of the basic computational problems in Biology. </li>
				<li>an understanding of some fundamental statistical techniques.  </li>
				<li>an understanding of basic tree-reconstruction algorithms.  </li>
			"
Durham_England,COMP3491,"<h2>title</h2>COMP3491: 
CODES AND CRYPTOGRAPHY<h2>summary</h2>
			<li>To give an introduction to the fundamental steps of a digital communication system: compression/decompression, encryption/decryption, error control coding/decoding </li>
			<li>To give an introduction to the theoretical limitations of those steps via information theory understand the information theoretic limitations of the three domains above  </li>
		<h2>content</h2>
			<li>Data compression: lossless compression such as Huffman and Lempel-Ziv, lossy compression such as transform coding and wavelet compression </li>
			<li>Cryptography: block ciphers, hash functions, public key cryptography, signature schemes, lattice-based cryptography  </li>
			<li>Error-correcting codes: linear codes including Hamming codes, BCH and Reed-Solomon codes, code-based cryptography</li>
			<li>Information Theory: Entropy, channel capacity, data compression, information-theoretic cryptography </li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of the theory and practice of data compression, cryptography, and error-correcting codes </li>
				<li>an understanding of the main results of information theory  </li>
			","COMP3491: 
CODES AND CRYPTOGRAPHY","
			<li>To give an introduction to the fundamental steps of a digital communication system: compression/decompression, encryption/decryption, error control coding/decoding </li>
			<li>To give an introduction to the theoretical limitations of those steps via information theory understand the information theoretic limitations of the three domains above  </li>
		","
			<li>Data compression: lossless compression such as Huffman and Lempel-Ziv, lossy compression such as transform coding and wavelet compression </li>
			<li>Cryptography: block ciphers, hash functions, public key cryptography, signature schemes, lattice-based cryptography  </li>
			<li>Error-correcting codes: linear codes including Hamming codes, BCH and Reed-Solomon codes, code-based cryptography</li>
			<li>Information Theory: Entropy, channel capacity, data compression, information-theoretic cryptography </li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of the theory and practice of data compression, cryptography, and error-correcting codes </li>
				<li>an understanding of the main results of information theory  </li>
			"
Durham_England,COMP3507,"<h2>title</h2>COMP3507: 
COMPUTATIONAL COMPLEXITY<h2>summary</h2>
			<li>The aim of the module is to equip students with the ability to ability to formalise and reason about the complexity of computational problems as well as to identify barriers to efficient computations.</li>
		<h2>content</h2>
			<li>The content will be chosen from the following topics:</li>
			<li>Time complexity and space complexity of computational problems</li>
			<li>Complexity of optimisation and approximation</li>
			<li>Parameterised complexity</li>
			<li>Circuit complexity</li>
			<li>Complexity and cryptography</li>
			<li>Complexity of randomised computation</li>
			<li>Descriptive complexity</li>
		<h2>ilo</h2>
				<li>On completion of this module, students will be able to demonstrate:</li>
				<li>an understanding of the inherent limitations of computation through appreciation of the topic areas;</li>
				<li>an appreciation of different ways to measure and reason about the complexity of computation;</li>
				<li>a knowledge about various important problem solving paradigms in the broad area of algorithms and complexity.</li>
			","COMP3507: 
COMPUTATIONAL COMPLEXITY","
			<li>The aim of the module is to equip students with the ability to ability to formalise and reason about the complexity of computational problems as well as to identify barriers to efficient computations.</li>
		","
			<li>The content will be chosen from the following topics:</li>
			<li>Time complexity and space complexity of computational problems</li>
			<li>Complexity of optimisation and approximation</li>
			<li>Parameterised complexity</li>
			<li>Circuit complexity</li>
			<li>Complexity and cryptography</li>
			<li>Complexity of randomised computation</li>
			<li>Descriptive complexity</li>
		","
				<li>On completion of this module, students will be able to demonstrate:</li>
				<li>an understanding of the inherent limitations of computation through appreciation of the topic areas;</li>
				<li>an appreciation of different ways to measure and reason about the complexity of computation;</li>
				<li>a knowledge about various important problem solving paradigms in the broad area of algorithms and complexity.</li>
			"
Durham_England,COMP3517,"<h2>title</h2>COMP3517: 
COMPUTATIONAL MODELLING IN THE HUMANITIES AND SOCIAL SCIENCES<h2>summary</h2>
			<li>To enable students to understand and critically evaluate the application of computational modelling&nbsp;to problems in the humanities and social sciences.</li>
			<li>To introduce students to algorithms and approaches relevant to the modelling of humanities and social science data.</li>
		<h2>content</h2>
			<li>Computational models of text and language</li>
			<li>Text and data mining</li>
			<li>Critical evaluation of computational models</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of how computational modelling can be applied to humanities and social science research</li>
				<li>an understanding of computational approaches to modelling text</li>
				<li>an understanding of data mining techniques.</li>
			","COMP3517: 
COMPUTATIONAL MODELLING IN THE HUMANITIES AND SOCIAL SCIENCES","
			<li>To enable students to understand and critically evaluate the application of computational modelling&nbsp;to problems in the humanities and social sciences.</li>
			<li>To introduce students to algorithms and approaches relevant to the modelling of humanities and social science data.</li>
		","
			<li>Computational models of text and language</li>
			<li>Text and data mining</li>
			<li>Critical evaluation of computational models</li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of how computational modelling can be applied to humanities and social science research</li>
				<li>an understanding of computational approaches to modelling text</li>
				<li>an understanding of data mining techniques.</li>
			"
Durham_England,COMP3527,"<h2>title</h2>COMP3527: 
COMPUTER VISION<h2>summary</h2>
			<li>To enable students to critically evaluate the development of computer vision solutions across existing and emerging technology areas. </li>
			<li>To enable students to understand and evaluate general image and video understanding themes across relevant application areas, focusing on relevant case studies.</li>
			<li>To understand and apply the fundamental principles of applied computer vision solutions to a range of real world problems.</li>
		<h2>content</h2>
			<li>Themes will be chosen from contemporary areas of computer vision including the following:</li>
			<li>edge features, contours and shape fitting. </li>
			<li>feature points for object detection and classification. </li>
			<li>stereo vision (3D point clouds and depth images). </li>
			<li>object classification using distributions of gradient information. </li>
			<li>background modelling and object tracking. </li>
			<li>end-to-end image classification and real-time object detection via deep machine learning. </li>
			<li>image and video mosaicking and 3D scene reconstruction. </li>
			<li>visual odometry for autonomous navigation. </li>
		<h2>ilo</h2>
				<li>On completion of this module, students will be able to demonstrate an in-depth knowledge of the contemporary computer vision topics presented,
					how these are applicable to relevant industrial problems and have future potential for emerging needs in both a research and industrial setting.
				</li>
			","COMP3527: 
COMPUTER VISION","
			<li>To enable students to critically evaluate the development of computer vision solutions across existing and emerging technology areas. </li>
			<li>To enable students to understand and evaluate general image and video understanding themes across relevant application areas, focusing on relevant case studies.</li>
			<li>To understand and apply the fundamental principles of applied computer vision solutions to a range of real world problems.</li>
		","
			<li>Themes will be chosen from contemporary areas of computer vision including the following:</li>
			<li>edge features, contours and shape fitting. </li>
			<li>feature points for object detection and classification. </li>
			<li>stereo vision (3D point clouds and depth images). </li>
			<li>object classification using distributions of gradient information. </li>
			<li>background modelling and object tracking. </li>
			<li>end-to-end image classification and real-time object detection via deep machine learning. </li>
			<li>image and video mosaicking and 3D scene reconstruction. </li>
			<li>visual odometry for autonomous navigation. </li>
		","
				<li>On completion of this module, students will be able to demonstrate an in-depth knowledge of the contemporary computer vision topics presented,
					how these are applicable to relevant industrial problems and have future potential for emerging needs in both a research and industrial setting.
				</li>
			"
Durham_England,COMP3547,"<h2>title</h2>COMP3547: 
DEEP LEARNING<h2>summary</h2>
			<li>To enable students to be able to approach complex ill-defined problems that require deep layers of learning, and understand how this relates to learning in nature.</li>
			<li>To equip students with the ability to use modern deep learning libraries in order to effectively design, train, and test neural networks in different applications.</li>
		<h2>content</h2>
			<li>Foundations of deep learning and learning in nature</li>
			<li>PyTorch programming</li>
			<li>Designing deep neural network architectures</li>
			<li>Adversarial models</li>
			<li>Energy-based models and Flow models</li>
			<li>Sequential models and Transformers</li>
			<li>Implicit representations</li>
			<li>Generalisation theory</li>
			<li>Meta and manifold learning</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate:</li>
				<li>an understanding of state-of-the-art deep neural network architectures and neural network architecture components.</li>
				<li>an understanding of statistical learning theory with deep learning approaches.</li>
				<li>an understanding of the algorithms and approaches to design and evaluate deep neural networks.</li>
			","COMP3547: 
DEEP LEARNING","
			<li>To enable students to be able to approach complex ill-defined problems that require deep layers of learning, and understand how this relates to learning in nature.</li>
			<li>To equip students with the ability to use modern deep learning libraries in order to effectively design, train, and test neural networks in different applications.</li>
		","
			<li>Foundations of deep learning and learning in nature</li>
			<li>PyTorch programming</li>
			<li>Designing deep neural network architectures</li>
			<li>Adversarial models</li>
			<li>Energy-based models and Flow models</li>
			<li>Sequential models and Transformers</li>
			<li>Implicit representations</li>
			<li>Generalisation theory</li>
			<li>Meta and manifold learning</li>
		","
				<li>On completion of the module, students will be able to demonstrate:</li>
				<li>an understanding of state-of-the-art deep neural network architectures and neural network architecture components.</li>
				<li>an understanding of statistical learning theory with deep learning approaches.</li>
				<li>an understanding of the algorithms and approaches to design and evaluate deep neural networks.</li>
			"
Durham_England,COMP3557,"<h2>title</h2>COMP3557: 
DESIGN OF ALGORITHMS AND DATA STRUCTURES<h2>summary</h2>
			<li>The aim of the module is to equip students with the ability to design and analyse efficient algorithms and data structures.</li>
		<h2>content</h2>
			<li> To be chosen from the following: </li>
			<li> hashing (universal, perfect, Cuckoo, Bloom filters) </li>
			<li> treaps </li>
			<li> skip lists </li>
			<li> splay trees </li>
			<li> basic models and algorithms for sub-linear space (streaming) </li>
			<li> basic models and algorithms for sub-linear time (e.g., property testing) </li>
			<li> basic PRAM (shared-memory parallel) algorithms and techniques </li>
		<h2>ilo</h2>
				<li> On completion of the module, students will be able to demonstrate: </li>
				<li> a knowledge about various important problem solving paradigms in the broad area of algorithmic design. </li>
				<li> an understanding of how to measure, transfer and handle data </li>
				<li> an ability to apply techniques and methods from the relevant topics to tackle fundamental algorithmic problems; </li>
				<li> an ability to conduct review and self-study to further their knowledge beyond the taught material. </li>
			","COMP3557: 
DESIGN OF ALGORITHMS AND DATA STRUCTURES","
			<li>The aim of the module is to equip students with the ability to design and analyse efficient algorithms and data structures.</li>
		","
			<li> To be chosen from the following: </li>
			<li> hashing (universal, perfect, Cuckoo, Bloom filters) </li>
			<li> treaps </li>
			<li> skip lists </li>
			<li> splay trees </li>
			<li> basic models and algorithms for sub-linear space (streaming) </li>
			<li> basic models and algorithms for sub-linear time (e.g., property testing) </li>
			<li> basic PRAM (shared-memory parallel) algorithms and techniques </li>
		","
				<li> On completion of the module, students will be able to demonstrate: </li>
				<li> a knowledge about various important problem solving paradigms in the broad area of algorithmic design. </li>
				<li> an understanding of how to measure, transfer and handle data </li>
				<li> an ability to apply techniques and methods from the relevant topics to tackle fundamental algorithmic problems; </li>
				<li> an ability to conduct review and self-study to further their knowledge beyond the taught material. </li>
			"
Durham_England,COMP3567,"<h2>title</h2>COMP3567: 
MULTIMEDIA AND GAME DEVELOPMENT<h2>summary</h2>
			<li>To introduce students to the methods and techniques of effective game development and the principles and practices of modern multimedia technologies.</li>
		<h2>content</h2>
			<li>Game design and mechanics.</li>
			<li>Game engine and programming.</li>
			<li>Game physics and autonomous object motions.</li>
			<li>Visual and audial media representations.</li>
			<li>Media compression, quality optimisation and assessment.</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of the technologies used in developing different types of games.</li>
				<li>an understanding of using suitable programming tools to implement games.</li>
				<li>an understanding of the technologies used in representing, processing and optimizing multimedia contents.</li>
			","COMP3567: 
MULTIMEDIA AND GAME DEVELOPMENT","
			<li>To introduce students to the methods and techniques of effective game development and the principles and practices of modern multimedia technologies.</li>
		","
			<li>Game design and mechanics.</li>
			<li>Game engine and programming.</li>
			<li>Game physics and autonomous object motions.</li>
			<li>Visual and audial media representations.</li>
			<li>Media compression, quality optimisation and assessment.</li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of the technologies used in developing different types of games.</li>
				<li>an understanding of using suitable programming tools to implement games.</li>
				<li>an understanding of the technologies used in representing, processing and optimizing multimedia contents.</li>
			"
Durham_England,COMP3577,"<h2>title</h2>COMP3577: 
PARALLEL SCIENTIFIC COMPUTING I<h2>summary</h2>
			<li>Introduce scientific computing techniques for the numerical solution of problems in science and engineering</li>
			<li>Introduce and familiarise students with parallel programming approaches in scientific computing</li>
		<h2>content</h2>
			<li>Fundamentals of numerical algorithms for ordinary differential equations.</li>
			<li>Explicit time discretion techniques for ordinary differential equations.</li>
			<li>Notions of error and stability analysis.</li>
			<li>Approaches to programming for multiple processing units using shared memory.</li>
			<li>Data parallel programming paradigms</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of typical approaches to the numerical solution of problems in science and engineering.</li>
				<li>a knowledge and appreciation of some of the research challenges in scientific computing </li>
				<li>understanding of basic parallelisation strategies and when to apply them</li>
			","COMP3577: 
PARALLEL SCIENTIFIC COMPUTING I","
			<li>Introduce scientific computing techniques for the numerical solution of problems in science and engineering</li>
			<li>Introduce and familiarise students with parallel programming approaches in scientific computing</li>
		","
			<li>Fundamentals of numerical algorithms for ordinary differential equations.</li>
			<li>Explicit time discretion techniques for ordinary differential equations.</li>
			<li>Notions of error and stability analysis.</li>
			<li>Approaches to programming for multiple processing units using shared memory.</li>
			<li>Data parallel programming paradigms</li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of typical approaches to the numerical solution of problems in science and engineering.</li>
				<li>a knowledge and appreciation of some of the research challenges in scientific computing </li>
				<li>understanding of basic parallelisation strategies and when to apply them</li>
			"
Durham_England,COMP3587,"<h2>title</h2>COMP3587: 
PROJECT MANAGEMENT<h2>summary</h2>
			<li>To understand and practice well established project management techniques required for the development of a significant piece of software within a team environment</li>
		<h2>content</h2>
			<li>Project management frameworks and application</li>
			<li>Leadership and innovation</li>
			<li>Managing change</li>
			<li>Practical management skills</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to: </li>
				<li>Compose a project management plan</li>
				<li>Assess project management frameworks and evaluate their appropriateness</li>
				<li>Evaluate leadership success</li>
				<li>
			</li>","COMP3587: 
PROJECT MANAGEMENT","
			<li>To understand and practice well established project management techniques required for the development of a significant piece of software within a team environment</li>
		","
			<li>Project management frameworks and application</li>
			<li>Leadership and innovation</li>
			<li>Managing change</li>
			<li>Practical management skills</li>
		","
				<li>On completion of the module, students will be able to: </li>
				<li>Compose a project management plan</li>
				<li>Assess project management frameworks and evaluate their appropriateness</li>
				<li>Evaluate leadership success</li>
				<li>
			</li>"
Durham_England,COMP3607,"<h2>title</h2>COMP3607: 
RECOMMENDER SYSTEMS<h2>summary</h2>
			<li>Have you ever wondered how Netflix, YouTube, Amazon or Spotify make suggestions for which content next to view? </li>
			<li>In this module, we will look at the inner workings of recommender systems;</li>
			<li>explore developing user profiles based on demographics, preferences, context, etc.;</li>
			<li>and put to practice approaches to predict the ""best"" content to recommend to an individual user.</li>
		<h2>content</h2>
			<li>Non-personalised recommenders</li>
			<li>Content-based filtering</li>
			<li>Collaborative filtering</li>
			<li>Context-aware recommenders</li>
			<li>Other RS types, e.g.: hybrid and group</li>
			<li>Evaluation methods</li>
			<li>Ethical issues in recommender systems</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of the different types of recommender systems, their purpose and domains of application</li>
				<li>an understanding of recommender system users: usage behaviour, demographics, preferences, contextual information</li>
				<li>an in-depth knowledge of recommender system algorithms, specifically non-personalised, content-based and collaborative filtering, hybrid techniques and context-aware recommenders</li>
				<li>an understanding of recommender system evaluation methods.</li>
			","COMP3607: 
RECOMMENDER SYSTEMS","
			<li>Have you ever wondered how Netflix, YouTube, Amazon or Spotify make suggestions for which content next to view? </li>
			<li>In this module, we will look at the inner workings of recommender systems;</li>
			<li>explore developing user profiles based on demographics, preferences, context, etc.;</li>
			<li>and put to practice approaches to predict the ""best"" content to recommend to an individual user.</li>
		","
			<li>Non-personalised recommenders</li>
			<li>Content-based filtering</li>
			<li>Collaborative filtering</li>
			<li>Context-aware recommenders</li>
			<li>Other RS types, e.g.: hybrid and group</li>
			<li>Evaluation methods</li>
			<li>Ethical issues in recommender systems</li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of the different types of recommender systems, their purpose and domains of application</li>
				<li>an understanding of recommender system users: usage behaviour, demographics, preferences, contextual information</li>
				<li>an in-depth knowledge of recommender system algorithms, specifically non-personalised, content-based and collaborative filtering, hybrid techniques and context-aware recommenders</li>
				<li>an understanding of recommender system evaluation methods.</li>
			"
Durham_England,COMP3617,"<h2>title</h2>COMP3617: 
VIRTUAL AND AUGMENTED REALITY<h2>summary</h2>
			<li>This course will introduce the principles of Virtual and Augmented Reality (VR/AR) technologies including optics, displays, rendering techniques, visual perception, tracking, interaction, current challenges, applications and major hardware and software platforms.</li>
		<h2>content</h2>
			<li>Introduction: history of VR/AR development, overview of computer graphics, the graphics pipeline, applications in education, communication, medical, entertainment, manufacturing, shopping.</li>
			<li>VR/AR hardware: displays, physics of light, optics, electronics, microcontrollers, VR head-mounted displays, CAVEs, controllers, interfaces, major hardware platforms.</li>
			<li>VR/AR software: stereo rendering for VR/AR, lens distortion shaders, auditory rendering, major software platforms.</li>
			<li>Human perception: visual, auditory, vestibular, tactile.</li>
			<li>Tracking: head-tracking, inertial measurement units, gyros, accelerometers, magnetometers, sensor fusion, complementary filter, etc.</li>
			<li>Interaction and moving in VR: ergonomics, comfort, 3D interaction design, 3DUIs, perceptual requirements, affordances in VR, user input, physical navigation, redirected walking.</li>
			<li>Presence: virtual embodiment.</li>
			<li>Challenges in VR: simulator sickness, visual discomfort, realism, content, navigation, haptic feedback.</li>
			<li>AR specific topics: object tracking, geolocation.</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>An in-depth knowledge of theory and techniques driving the design of Virtual and Augmented Reality hardware and software. </li>
			","COMP3617: 
VIRTUAL AND AUGMENTED REALITY","
			<li>This course will introduce the principles of Virtual and Augmented Reality (VR/AR) technologies including optics, displays, rendering techniques, visual perception, tracking, interaction, current challenges, applications and major hardware and software platforms.</li>
		","
			<li>Introduction: history of VR/AR development, overview of computer graphics, the graphics pipeline, applications in education, communication, medical, entertainment, manufacturing, shopping.</li>
			<li>VR/AR hardware: displays, physics of light, optics, electronics, microcontrollers, VR head-mounted displays, CAVEs, controllers, interfaces, major hardware platforms.</li>
			<li>VR/AR software: stereo rendering for VR/AR, lens distortion shaders, auditory rendering, major software platforms.</li>
			<li>Human perception: visual, auditory, vestibular, tactile.</li>
			<li>Tracking: head-tracking, inertial measurement units, gyros, accelerometers, magnetometers, sensor fusion, complementary filter, etc.</li>
			<li>Interaction and moving in VR: ergonomics, comfort, 3D interaction design, 3DUIs, perceptual requirements, affordances in VR, user input, physical navigation, redirected walking.</li>
			<li>Presence: virtual embodiment.</li>
			<li>Challenges in VR: simulator sickness, visual discomfort, realism, content, navigation, haptic feedback.</li>
			<li>AR specific topics: object tracking, geolocation.</li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>An in-depth knowledge of theory and techniques driving the design of Virtual and Augmented Reality hardware and software. </li>
			"
Durham_England,COMP3621,"<h2>title</h2>COMP3621: 
Public Engagement in Computer Science<h2>summary</h2>
			<li>This module is designed primarily for students studying Department of Computer Science or Natural Sciences degree programmes.</li>
			<li>To provide experience of a research-led public engagement project in Computer Science.</li>
			<li>To allow students to make an in-depth study of a particular topic in Computer Science, to undertake extensive independent research and to write at length on their chosen subject in the context of public engagement.</li>
			<li>To develop a range of transferable skills in researching a topic in the context of public engagement and making oral and written presentations on their work.</li>
			<li>To learn to devise and develop Computer Science projects and public engagement methods appropriate to the chosen topic and relevant audience(s).  </li>
		<h2>content</h2>
			<li>Project: A research-led public engagement project, set in collaboration with members of staff from the Department, and possibly with an external partner, allowing students to present the results of individual and independent work (note: an original contribution to scientific knowledge is not required or expected).</li>
			<li>The student will implement and evaluate the project. The student will be required to show that they can analyse a specific public engagement problem and devise and develop an appropriate public engagement approach to address that specific problem.</li>
			<li>Students will choose from a wide list of broad possible topics. Each student will be assigned a member of staff as supervisor. Students will devise their own approach to researching and communicating their subject with advice from their supervisor. As part of their work they will be expected to address some of the specific aspects of their subject with the agreement of the supervisor. Students will be expected to work independently, to manage the direction of their work and to employ a significant component of self-directed learning.</li>
			<li>Reflective practice: The student will keep a reflective journal of activity and produce an executive summary of that journal, summarising and communicating their reflective practice in relation to their project.</li>
			<li>Transferable skills including time-management, presentation, communication, organisation, prioritisation and negotiation skills.  </li>
		<h2>ilo</h2>
				<li>Having studied this module, students:</li>
				<li>Will have formed a detailed appreciation of the science related to a particular topic.</li>
				<li>Will be able to assess and devise appropriate ways to communicate a difficult principle or concept.</li>
				<li>Will have gained a broad understanding of many of the key aspects of public engagement.  </li>
			","COMP3621: 
Public Engagement in Computer Science","
			<li>This module is designed primarily for students studying Department of Computer Science or Natural Sciences degree programmes.</li>
			<li>To provide experience of a research-led public engagement project in Computer Science.</li>
			<li>To allow students to make an in-depth study of a particular topic in Computer Science, to undertake extensive independent research and to write at length on their chosen subject in the context of public engagement.</li>
			<li>To develop a range of transferable skills in researching a topic in the context of public engagement and making oral and written presentations on their work.</li>
			<li>To learn to devise and develop Computer Science projects and public engagement methods appropriate to the chosen topic and relevant audience(s).  </li>
		","
			<li>Project: A research-led public engagement project, set in collaboration with members of staff from the Department, and possibly with an external partner, allowing students to present the results of individual and independent work (note: an original contribution to scientific knowledge is not required or expected).</li>
			<li>The student will implement and evaluate the project. The student will be required to show that they can analyse a specific public engagement problem and devise and develop an appropriate public engagement approach to address that specific problem.</li>
			<li>Students will choose from a wide list of broad possible topics. Each student will be assigned a member of staff as supervisor. Students will devise their own approach to researching and communicating their subject with advice from their supervisor. As part of their work they will be expected to address some of the specific aspects of their subject with the agreement of the supervisor. Students will be expected to work independently, to manage the direction of their work and to employ a significant component of self-directed learning.</li>
			<li>Reflective practice: The student will keep a reflective journal of activity and produce an executive summary of that journal, summarising and communicating their reflective practice in relation to their project.</li>
			<li>Transferable skills including time-management, presentation, communication, organisation, prioritisation and negotiation skills.  </li>
		","
				<li>Having studied this module, students:</li>
				<li>Will have formed a detailed appreciation of the science related to a particular topic.</li>
				<li>Will be able to assess and devise appropriate ways to communicate a difficult principle or concept.</li>
				<li>Will have gained a broad understanding of many of the key aspects of public engagement.  </li>
			"
Durham_England,COMP3637,"<h2>title</h2>COMP3637: 
Compiler Design<h2>summary</h2>
			<li>To understand how a compiler for a high-level programming language works.</li>
			<li>Develop implementation skills for writing practical components of a compiler, including parsing, analysis, code generation, and optimisation.</li>
			<li>Appreciate how the design of programming languages is affected by compiler considerations.</li>
			<li>Implement a compiler for a high-level programming language.</li>
		<h2>content</h2>
			<li>Compiler frontend: Foundations of compiler theory and techniques for lexical analysis,  syntax analysis and semantic analysis.</li>
			<li>Compiler backend: Intermediate representations (IRs), optimisation on IRs, machine  code generation and register allocation.</li>
		<h2>ilo</h2>
				<li>An understanding of the theory and practice of compiler design.</li>
			","COMP3637: 
Compiler Design","
			<li>To understand how a compiler for a high-level programming language works.</li>
			<li>Develop implementation skills for writing practical components of a compiler, including parsing, analysis, code generation, and optimisation.</li>
			<li>Appreciate how the design of programming languages is affected by compiler considerations.</li>
			<li>Implement a compiler for a high-level programming language.</li>
		","
			<li>Compiler frontend: Foundations of compiler theory and techniques for lexical analysis,  syntax analysis and semantic analysis.</li>
			<li>Compiler backend: Intermediate representations (IRs), optimisation on IRs, machine  code generation and register allocation.</li>
		","
				<li>An understanding of the theory and practice of compiler design.</li>
			"
Durham_England,COMP3647,"<h2>title</h2>COMP3647: 
Human-AI Interaction Design<h2>summary</h2>
			<li>To discuss how the design of Human-AI interactions may affect user experience.</li>
			<li>To introduce methods and tools for designing interactive AI systems.</li>
			<li>To develop ethical and societal principles in the design of interactive AI systems.</li>
		<h2>content</h2>
			<li>AI and User Experience</li>
			<li>Human-Centred AI Design</li>
			<li>Human-AI Communication Channels</li>
			<li>Inclusive Design and Digital Accessibility</li>
			<li>Explainable AI and Building Trust</li>
			<li>Privacy and Security Considerations</li>
			<li>Affective Design for Interactive AI</li>
			<li>Psychophysical Methods</li>
			<li>Ambient Intelligence</li>
			<li>Applications (e.g. gaming, healthcare, education, finance, automotive vehicles, etc.)  </li>
		<h2>ilo</h2>
				<li>An understanding of impacts of interactive AI system design on user experience.</li>
				<li>An understanding of concepts and principles of Human-AI interaction design. </li>
			","COMP3647: 
Human-AI Interaction Design","
			<li>To discuss how the design of Human-AI interactions may affect user experience.</li>
			<li>To introduce methods and tools for designing interactive AI systems.</li>
			<li>To develop ethical and societal principles in the design of interactive AI systems.</li>
		","
			<li>AI and User Experience</li>
			<li>Human-Centred AI Design</li>
			<li>Human-AI Communication Channels</li>
			<li>Inclusive Design and Digital Accessibility</li>
			<li>Explainable AI and Building Trust</li>
			<li>Privacy and Security Considerations</li>
			<li>Affective Design for Interactive AI</li>
			<li>Psychophysical Methods</li>
			<li>Ambient Intelligence</li>
			<li>Applications (e.g. gaming, healthcare, education, finance, automotive vehicles, etc.)  </li>
		","
				<li>An understanding of impacts of interactive AI system design on user experience.</li>
				<li>An understanding of concepts and principles of Human-AI interaction design. </li>
			"
Durham_England,COMP3657,"<h2>title</h2>COMP3657: 
Security Engineering<h2>summary</h2>
			<li>To understand security protocol design and analysis, security architectures, cryptographic protocols and security considerations in various environments such as software, web and hardware infrastructures.</li>
		<h2>content</h2>
			<li>Secure systems and architecture: principles of architecting a secure system.</li>
			<li>System evaluation and assurance: threat models and ways to distinguish various attacks.</li>
			<li>Cryptographic protocols: the role of cryptographic primitives in secure systems.</li>
			<li>Security protocols: mechanisms that enforce policy using cryptography and structured human interaction together with verification and validation processes.</li>
			<li>Secure communications: principles of secure networks together with mechanisms to maintain secrecy, integrity and authenticity in connected systems.</li>
			<li>Software-based security: principles of secure coding, the origin of vulnerabilities, reverse-engineering and code obfuscation.</li>
			<li>Hardware-based security: mechanisms to protect physical components in different platforms such as mobile, PC or IoT.  </li>
		<h2>ilo</h2>
				<li>An understanding of cryptographic primitives.</li>
				<li>A basic understanding of various communication platforms (such as network, IoT, web, etc.).</li>
				<li>An understanding of operating system principles.</li>
				<li>An understanding of programming languages and compiler design.</li>
			","COMP3657: 
Security Engineering","
			<li>To understand security protocol design and analysis, security architectures, cryptographic protocols and security considerations in various environments such as software, web and hardware infrastructures.</li>
		","
			<li>Secure systems and architecture: principles of architecting a secure system.</li>
			<li>System evaluation and assurance: threat models and ways to distinguish various attacks.</li>
			<li>Cryptographic protocols: the role of cryptographic primitives in secure systems.</li>
			<li>Security protocols: mechanisms that enforce policy using cryptography and structured human interaction together with verification and validation processes.</li>
			<li>Secure communications: principles of secure networks together with mechanisms to maintain secrecy, integrity and authenticity in connected systems.</li>
			<li>Software-based security: principles of secure coding, the origin of vulnerabilities, reverse-engineering and code obfuscation.</li>
			<li>Hardware-based security: mechanisms to protect physical components in different platforms such as mobile, PC or IoT.  </li>
		","
				<li>An understanding of cryptographic primitives.</li>
				<li>A basic understanding of various communication platforms (such as network, IoT, web, etc.).</li>
				<li>An understanding of operating system principles.</li>
				<li>An understanding of programming languages and compiler design.</li>
			"
Durham_England,COMP3667,"<h2>title</h2>COMP3667: 
REINFORCEMENT LEARNING<h2>summary</h2>
			<li>To understand computational models of learning in dynamic environments.</li>
			<li>Learning how to plan and design agents with intelligent behaviour, taking actions to control the environment and maximise cumulative future rewards. </li>
		<h2>content</h2>
			<li>Introduction to reinforcement learning.</li>
			<li>Markov decision processes and planning by dynamic programming.</li>
			<li>Model free prediction and control.</li>
			<li>Value-based and policy-based reinforcement learning.</li>
			<li>Scaling up reinforcement learning approaches with deep learning.</li>
			<li>Integrating learning and planning, and balancing exploration/exploitation.</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of the key features of reinforcement learning and differences with non-interactive learning.</li>
				<li>an understanding of state-of-the-art reinforcement learning algorithms. </li>
				<li>an understanding of the issues faced in scaling reinforcement learning approaches using deep learning. </li>
			","COMP3667: 
REINFORCEMENT LEARNING","
			<li>To understand computational models of learning in dynamic environments.</li>
			<li>Learning how to plan and design agents with intelligent behaviour, taking actions to control the environment and maximise cumulative future rewards. </li>
		","
			<li>Introduction to reinforcement learning.</li>
			<li>Markov decision processes and planning by dynamic programming.</li>
			<li>Model free prediction and control.</li>
			<li>Value-based and policy-based reinforcement learning.</li>
			<li>Scaling up reinforcement learning approaches with deep learning.</li>
			<li>Integrating learning and planning, and balancing exploration/exploitation.</li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of the key features of reinforcement learning and differences with non-interactive learning.</li>
				<li>an understanding of state-of-the-art reinforcement learning algorithms. </li>
				<li>an understanding of the issues faced in scaling reinforcement learning approaches using deep learning. </li>
			"
Durham_England,COMP3677,"<h2>title</h2>COMP3677: 
NATURAL COMPUTING ALGORITHMS<h2>summary</h2>
			<li>To give students an understanding of how systems and phenomena that occur in the natural world can inspire the development of new computational algorithms relevant to modern-day artificial intelligence.     </li>
			<li>To equip students with a range of natural algorithmic paradigms and techniques that can be widely applied in real-world problem solving.     </li>
			<li>To enable students to implement, apply, analyse and experiment with natural algorithms to solve real-world problems. </li>
		<h2>content</h2>
			<li>An introduction to some of the facets of Natural Computing.     </li>
			<li>Specific algorithms will be drawn from some of the following paradigms (with illustrative examples of the algorithms that these paradigms encompass):     </li>
			<li>evolutionary computing (genetic algorithms, evolution strategies, differential evolution)     </li>
			<li>social computing (particle swarm optimizations, ant colony algorithms, bee foraging algorithms, glow-worm algorithms, bat algorithms)     </li>
			<li>immunocomputing (artificial immune systems, dendritic cell algorithms, clonal expansion algorithms)      </li>
			<li>developmental and grammatical computing (Lindenmayer systems, grammatical evolution algorithms, tree-adjoining grammars)     </li>
			<li>physical computing (simulated annealing, DNA computing, self-assembly systems). </li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate:     </li>
				<li>an understanding of how systems and phenomena from the natural world inspire new computational algorithms     </li>
				<li>an understanding of a range of different paradigms and algorithms inspired by systems and phenomena from the natural world     </li>
				<li>an understanding of the data structures and methodologies required to implement these algorithms. </li>
			","COMP3677: 
NATURAL COMPUTING ALGORITHMS","
			<li>To give students an understanding of how systems and phenomena that occur in the natural world can inspire the development of new computational algorithms relevant to modern-day artificial intelligence.     </li>
			<li>To equip students with a range of natural algorithmic paradigms and techniques that can be widely applied in real-world problem solving.     </li>
			<li>To enable students to implement, apply, analyse and experiment with natural algorithms to solve real-world problems. </li>
		","
			<li>An introduction to some of the facets of Natural Computing.     </li>
			<li>Specific algorithms will be drawn from some of the following paradigms (with illustrative examples of the algorithms that these paradigms encompass):     </li>
			<li>evolutionary computing (genetic algorithms, evolution strategies, differential evolution)     </li>
			<li>social computing (particle swarm optimizations, ant colony algorithms, bee foraging algorithms, glow-worm algorithms, bat algorithms)     </li>
			<li>immunocomputing (artificial immune systems, dendritic cell algorithms, clonal expansion algorithms)      </li>
			<li>developmental and grammatical computing (Lindenmayer systems, grammatical evolution algorithms, tree-adjoining grammars)     </li>
			<li>physical computing (simulated annealing, DNA computing, self-assembly systems). </li>
		","
				<li>On completion of the module, students will be able to demonstrate:     </li>
				<li>an understanding of how systems and phenomena from the natural world inspire new computational algorithms     </li>
				<li>an understanding of a range of different paradigms and algorithms inspired by systems and phenomena from the natural world     </li>
				<li>an understanding of the data structures and methodologies required to implement these algorithms. </li>
			"
Durham_England,COMP4087,"<h2>title</h2>COMP4087: 
ADVANCED ALGORITHMS<h2>summary</h2>
			<li>To give students a deeper knowledge of algorithmic solutions for typical computer science problems.</li>
			<li>To extend the students' knowledge of the latest advances in understanding the limits of computation and the ways of coping with computational hardness.</li>
		<h2>content</h2>
			<li>Algorithms: approximation, exact, fixed parameter tractable, polynomial</li>
			<li>Input restrictions: hereditary and intersection graph classes</li>
			<li>Graph width</li>
			<li>Graph containment relations</li>
			<li>Graph reconfiguration</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>a comprehensive understanding of how the theory of computation is applied in the design of algorithms</li>
				<li>a critical evaluation of different approaches to the algorithmic solution for computationally hard problems</li>
				<li>a critical awareness of some of the latest advances in research on theoretical aspects of computation</li>
			","COMP4087: 
ADVANCED ALGORITHMS","
			<li>To give students a deeper knowledge of algorithmic solutions for typical computer science problems.</li>
			<li>To extend the students' knowledge of the latest advances in understanding the limits of computation and the ways of coping with computational hardness.</li>
		","
			<li>Algorithms: approximation, exact, fixed parameter tractable, polynomial</li>
			<li>Input restrictions: hereditary and intersection graph classes</li>
			<li>Graph width</li>
			<li>Graph containment relations</li>
			<li>Graph reconfiguration</li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>a comprehensive understanding of how the theory of computation is applied in the design of algorithms</li>
				<li>a critical evaluation of different approaches to the algorithmic solution for computationally hard problems</li>
				<li>a critical awareness of some of the latest advances in research on theoretical aspects of computation</li>
			"
Durham_England,COMP4097,"<h2>title</h2>COMP4097: 
ADVANCED COMPUTER GRAPHICS AND VISUALISATION<h2>summary</h2>
			<li>The module focuses on modern, advanced techniques for realistic image synthesis and visualisation, presenting the theoretical background and practical, established algorithms for offline and real-time 3D graphics.</li>
		<h2>content</h2>
			<li>Introduction: basic image generation.</li>
			<li>Physically-based shading.</li>
			<li>Deferred shading, screen space methods.</li>
			<li>Global illumination methods, BRDFs, ray tracing.</li>
			<li>Path tracing, Monte Carlo integration, acceleration techniques, radiosity.</li>
			<li>Tone mapping.</li>
			<li>Shadows.</li>
			<li>Procedural content generation and noise generation.</li>
			<li>Animation.</li>
			<li>Visualisation definitions and rationale, information visualisation, scientific visualisation. </li>
			<li>Coordinate systems and axes, colour scales, etc. </li>
			<li>Visualisation pipeline and visualisation architectures.</li>
			<li>Visualisation approaches to scalar, vector and volume data. </li>
			<li>Multi-scale, multimodal, multidimensional data, uncertain data.</li>
			<li>Data types, signal filtering, major software platforms.</li>
			<li>Perception. </li>
		<h2>ilo</h2>
				<li>On completion of this module, students will be able to demonstrate a systematic understanding of advanced computer graphics and visualisation algorithms and techniques, and a critical awareness of how they are applicable to both current and emerging needs within the industrial and research environment. </li>
			","COMP4097: 
ADVANCED COMPUTER GRAPHICS AND VISUALISATION","
			<li>The module focuses on modern, advanced techniques for realistic image synthesis and visualisation, presenting the theoretical background and practical, established algorithms for offline and real-time 3D graphics.</li>
		","
			<li>Introduction: basic image generation.</li>
			<li>Physically-based shading.</li>
			<li>Deferred shading, screen space methods.</li>
			<li>Global illumination methods, BRDFs, ray tracing.</li>
			<li>Path tracing, Monte Carlo integration, acceleration techniques, radiosity.</li>
			<li>Tone mapping.</li>
			<li>Shadows.</li>
			<li>Procedural content generation and noise generation.</li>
			<li>Animation.</li>
			<li>Visualisation definitions and rationale, information visualisation, scientific visualisation. </li>
			<li>Coordinate systems and axes, colour scales, etc. </li>
			<li>Visualisation pipeline and visualisation architectures.</li>
			<li>Visualisation approaches to scalar, vector and volume data. </li>
			<li>Multi-scale, multimodal, multidimensional data, uncertain data.</li>
			<li>Data types, signal filtering, major software platforms.</li>
			<li>Perception. </li>
		","
				<li>On completion of this module, students will be able to demonstrate a systematic understanding of advanced computer graphics and visualisation algorithms and techniques, and a critical awareness of how they are applicable to both current and emerging needs within the industrial and research environment. </li>
			"
Durham_England,COMP4107,"<h2>title</h2>COMP4107: 
ADVANCED COMPUTER VISION<h2>summary</h2>
			<li>To enable students to critically evaluate the development of contemporary computer vision systems utilising both existing and emerging technologies. </li>
			<li>To enable students to study and research a number of topic themes across relevant computer vision application areas, focusing on case studies, and undertake research within these topic themes.</li>
		<h2>content</h2>
			<li>Themes will be chosen from contemporary areas of computer vision including the following:</li>
			<li>Advanced fundamental topics: segmentation, superpixels, saliency, optic flow and image registration in 2D/3D. </li>
			<li>Computer vision for advanced visual semantic models â€“ attribute learning, zero-shot learning, visual question and answering. </li>
			<li>Computer vision for advanced object and scene understanding. </li>
			<li>Computer vision for behaviour understanding. </li>
			<li>Computer vision for security and biometrics. </li>
			<li>Computer vision for image manipulation and augmentation. </li>
		<h2>ilo</h2>
				<li>On completion of this module, students will be able to demonstrate a systematic understanding of the contemporary computer vision topics presented and a
					critical awareness of how they are applicable to both current and emerging needs within the associated industrial and research environment.  </li>
			","COMP4107: 
ADVANCED COMPUTER VISION","
			<li>To enable students to critically evaluate the development of contemporary computer vision systems utilising both existing and emerging technologies. </li>
			<li>To enable students to study and research a number of topic themes across relevant computer vision application areas, focusing on case studies, and undertake research within these topic themes.</li>
		","
			<li>Themes will be chosen from contemporary areas of computer vision including the following:</li>
			<li>Advanced fundamental topics: segmentation, superpixels, saliency, optic flow and image registration in 2D/3D. </li>
			<li>Computer vision for advanced visual semantic models â€“ attribute learning, zero-shot learning, visual question and answering. </li>
			<li>Computer vision for advanced object and scene understanding. </li>
			<li>Computer vision for behaviour understanding. </li>
			<li>Computer vision for security and biometrics. </li>
			<li>Computer vision for image manipulation and augmentation. </li>
		","
				<li>On completion of this module, students will be able to demonstrate a systematic understanding of the contemporary computer vision topics presented and a
					critical awareness of how they are applicable to both current and emerging needs within the associated industrial and research environment.  </li>
			"
Durham_England,COMP4117,"<h2>title</h2>COMP4117: 
QUANTUM COMPUTING<h2>summary</h2>
			<li>To introduce students to Quantum Information Processing and Quantum Computing with emphasis on where these may be advantageous over the classical approach. </li>
		<h2>content</h2>
			<li>Qubits and Quantum Key Distribution     </li>
			<li>Computing with Multiple Qubits     </li>
			<li>EPR paradox and Quantum State Transformations     </li>
			<li>Quantum Gates and Circuits     </li>
			<li>Quantum Algorithms     </li>
			<li>Quantum Networking </li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate:     </li>
				<li>an understanding of the fundamental notions from Quantum Information Processing     </li>
				<li>an understanding of the workings of Quantum algorithms      </li>
				<li>an understanding of the principles of Quantum networking </li>
			","COMP4117: 
QUANTUM COMPUTING","
			<li>To introduce students to Quantum Information Processing and Quantum Computing with emphasis on where these may be advantageous over the classical approach. </li>
		","
			<li>Qubits and Quantum Key Distribution     </li>
			<li>Computing with Multiple Qubits     </li>
			<li>EPR paradox and Quantum State Transformations     </li>
			<li>Quantum Gates and Circuits     </li>
			<li>Quantum Algorithms     </li>
			<li>Quantum Networking </li>
		","
				<li>On completion of the module, students will be able to demonstrate:     </li>
				<li>an understanding of the fundamental notions from Quantum Information Processing     </li>
				<li>an understanding of the workings of Quantum algorithms      </li>
				<li>an understanding of the principles of Quantum networking </li>
			"
Durham_England,COMP4127,"<h2>title</h2>COMP4127: 
AUTOMATED REASONING AND VERIFICATION<h2>summary</h2>
			<li>To introduce students to Automated Reasoning through expression and solvability of problems in propositional and first-order logic.</li>
			<li>To introduce students to Verification through expression and solvability of problems using temporal logics.</li>
			<li>To introduce students to Program Correctness through Hoare Logic.</li>
		<h2>content</h2>
			<li>Algorithms for Reasoning in Propositional Logic</li>
			<li>Principles of Modern SAT Solvers</li>
			<li>Algorithms for Reasoning in First Order Logic</li>
			<li>Unification and Resolution for First Order Logic</li>
			<li>Principles of Inference in Prolog</li>
			<li>Transition Systems and Model-Checking</li>
			<li>Linear Temporal Logic</li>
			<li>Computation Tree Logic</li>
			<li>Model-Checking with NuSMV</li>
			<li>Hoare Logic</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate:</li>
				<li>an understanding of how to express problems in the language of logics and models.</li>
				<li>an understanding of satisfiability, entailment and model-checking for a variety of logics.</li>
				<li>an understanding of the algorithms underlying modern SAT-solvers.</li>
				<li>an understanding of the algorithms underlying verification in temporal logics.</li>
				<li>an understanding of how a program can be proved to meet a specification through Hoare Logic.</li>
			","COMP4127: 
AUTOMATED REASONING AND VERIFICATION","
			<li>To introduce students to Automated Reasoning through expression and solvability of problems in propositional and first-order logic.</li>
			<li>To introduce students to Verification through expression and solvability of problems using temporal logics.</li>
			<li>To introduce students to Program Correctness through Hoare Logic.</li>
		","
			<li>Algorithms for Reasoning in Propositional Logic</li>
			<li>Principles of Modern SAT Solvers</li>
			<li>Algorithms for Reasoning in First Order Logic</li>
			<li>Unification and Resolution for First Order Logic</li>
			<li>Principles of Inference in Prolog</li>
			<li>Transition Systems and Model-Checking</li>
			<li>Linear Temporal Logic</li>
			<li>Computation Tree Logic</li>
			<li>Model-Checking with NuSMV</li>
			<li>Hoare Logic</li>
		","
				<li>On completion of the module, students will be able to demonstrate:</li>
				<li>an understanding of how to express problems in the language of logics and models.</li>
				<li>an understanding of satisfiability, entailment and model-checking for a variety of logics.</li>
				<li>an understanding of the algorithms underlying modern SAT-solvers.</li>
				<li>an understanding of the algorithms underlying verification in temporal logics.</li>
				<li>an understanding of how a program can be proved to meet a specification through Hoare Logic.</li>
			"
Durham_England,COMP4137,"<h2>title</h2>COMP4137: 
BLOCKCHAIN AND CRYPTOCURRENCIES<h2>summary</h2>
			<li>To introduce students to an advanced topic in Computer Science that is finding application in modern technology. </li>
			<li>To give students knowledge and understanding of the theoretical basis, security and history of cryptocurrencies. </li>
		<h2>content</h2>
			<li>Secure hash functions and digital signatures.  </li>
			<li>Simple blockchains.  </li>
			<li>Decentralisation of blockchains.  </li>
			<li>Bitcoin transaction and block details.  </li>
			<li>Bitcoin mining.  </li>
			<li>Anonymity in cryptocurrencies.  </li>
			<li>Ethereum and smart contracts.  </li>
			<li>Recent developments in blockchains and cryptocurrencies.  </li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of the cryptographic protocols underlying blockchain security </li>
				<li>knowledge of the key features and differences between a number of cryptocurrencies  </li>
				<li>the structure and use of smart contracts in a blockchain  </li>
				<li>an understanding of some recent developments in cryptocurrencies and blockchains  </li>
			","COMP4137: 
BLOCKCHAIN AND CRYPTOCURRENCIES","
			<li>To introduce students to an advanced topic in Computer Science that is finding application in modern technology. </li>
			<li>To give students knowledge and understanding of the theoretical basis, security and history of cryptocurrencies. </li>
		","
			<li>Secure hash functions and digital signatures.  </li>
			<li>Simple blockchains.  </li>
			<li>Decentralisation of blockchains.  </li>
			<li>Bitcoin transaction and block details.  </li>
			<li>Bitcoin mining.  </li>
			<li>Anonymity in cryptocurrencies.  </li>
			<li>Ethereum and smart contracts.  </li>
			<li>Recent developments in blockchains and cryptocurrencies.  </li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an understanding of the cryptographic protocols underlying blockchain security </li>
				<li>knowledge of the key features and differences between a number of cryptocurrencies  </li>
				<li>the structure and use of smart contracts in a blockchain  </li>
				<li>an understanding of some recent developments in cryptocurrencies and blockchains  </li>
			"
Durham_England,COMP4157,"<h2>title</h2>COMP4157: 
LEARNING ANALYTICS<h2>summary</h2>
			<li>To give students a fundamental understanding of some of the core approaches and problem-solving principles for Learning Analytics (LA) and the role of LA in current and future learning settings and environments.</li>
		<h2>content</h2>
			<li>Statistical Learning Analytics and visualisation: data pre-processing; methods for tackling learning analytics based on statistical approaches; the types of LA that can be done with such approaches - e.g. descriptive and beyond. Visualisation of LA data for different stakeholders - e.g. learner, teacher, administrator, etc. </li>
			<li>Ethics of Learner Data Usage: discussions on ethical considerations of using learner data, starting from societal view, laws involved, (common) practice, future practice. Algorithmic perspectives, such as (expanded) sensitivity analysis.</li>
			<li>Machine Learning based Learning Analytics: shallow and deep Machine Learning methods for LA; numerical versus textual data analytical methods for LA; combined methods; sentiment analysis for LA; the types of LA that can be done with such approaches - e.g. descriptive, diagnostic, predictive, prescriptive.</li>
		<h2>ilo</h2>
				<li>The key principles and methodologies of data pre-processing for learning analytics, as well as the ability to evaluate and interpret where and how to apply such methods, including in the absence of complete data.</li>
				<li>The key principles and methodologies for statistical learning analytics and visualisation, as well as the ability to evaluate and interpret where and how to apply such methods, including in the absence of complete data.</li>
				<li>The key principles of machine learning based learning analytics, as well as the ability to evaluate and interpret where and how to apply such methods, including in the absence of complete data.</li>
			","COMP4157: 
LEARNING ANALYTICS","
			<li>To give students a fundamental understanding of some of the core approaches and problem-solving principles for Learning Analytics (LA) and the role of LA in current and future learning settings and environments.</li>
		","
			<li>Statistical Learning Analytics and visualisation: data pre-processing; methods for tackling learning analytics based on statistical approaches; the types of LA that can be done with such approaches - e.g. descriptive and beyond. Visualisation of LA data for different stakeholders - e.g. learner, teacher, administrator, etc. </li>
			<li>Ethics of Learner Data Usage: discussions on ethical considerations of using learner data, starting from societal view, laws involved, (common) practice, future practice. Algorithmic perspectives, such as (expanded) sensitivity analysis.</li>
			<li>Machine Learning based Learning Analytics: shallow and deep Machine Learning methods for LA; numerical versus textual data analytical methods for LA; combined methods; sentiment analysis for LA; the types of LA that can be done with such approaches - e.g. descriptive, diagnostic, predictive, prescriptive.</li>
		","
				<li>The key principles and methodologies of data pre-processing for learning analytics, as well as the ability to evaluate and interpret where and how to apply such methods, including in the absence of complete data.</li>
				<li>The key principles and methodologies for statistical learning analytics and visualisation, as well as the ability to evaluate and interpret where and how to apply such methods, including in the absence of complete data.</li>
				<li>The key principles of machine learning based learning analytics, as well as the ability to evaluate and interpret where and how to apply such methods, including in the absence of complete data.</li>
			"
Durham_England,COMP4167,"<h2>title</h2>COMP4167: 
NATURAL LANGUAGE PROCESSING<h2>summary</h2>
			<li>Introduce the students to computational linguistics</li>
			<li>Introduce the students to Language models</li>
			<li>Gain experience in working with various textual data</li>
			<li>Gain experience in using advanced techniques to solve natural language tasks such as text parsing, understanding, classification, translation, and generation</li>
		<h2>content</h2>
			<li>Text Pre-processing</li>
			<li>Features Extraction</li>
			<li>Language Modelling and Neural Language Modelling </li>
			<li>Neural Word Embedding and their interpretation </li>
			<li>Recurrent Neural Networks (RNN) for Language Models</li>
			<li>Advanced variations of RNNs</li>
			<li>Sequence to Sequence Architectures</li>
			<li>Convolutional Neural Networks for Text Classification </li>
			<li>Transformers and Attention based Models</li>
			<li>Multitask Learning</li>
			<li>Natural Language Generation</li>
			<li>NLP Ethics and Fairness</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>Understanding of the fundamental concepts of Language Models</li>
				<li>Understanding of the mathematical basis of various deep-learning based language models</li>
				<li>Understanding of the learning algorithms behind major NLP use cases e.g. Machine Translation, Multi-task Learning, Language Generation, ...</li>
				<li>Understanding of the embedded bias in popular language models</li>
			","COMP4167: 
NATURAL LANGUAGE PROCESSING","
			<li>Introduce the students to computational linguistics</li>
			<li>Introduce the students to Language models</li>
			<li>Gain experience in working with various textual data</li>
			<li>Gain experience in using advanced techniques to solve natural language tasks such as text parsing, understanding, classification, translation, and generation</li>
		","
			<li>Text Pre-processing</li>
			<li>Features Extraction</li>
			<li>Language Modelling and Neural Language Modelling </li>
			<li>Neural Word Embedding and their interpretation </li>
			<li>Recurrent Neural Networks (RNN) for Language Models</li>
			<li>Advanced variations of RNNs</li>
			<li>Sequence to Sequence Architectures</li>
			<li>Convolutional Neural Networks for Text Classification </li>
			<li>Transformers and Attention based Models</li>
			<li>Multitask Learning</li>
			<li>Natural Language Generation</li>
			<li>NLP Ethics and Fairness</li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>Understanding of the fundamental concepts of Language Models</li>
				<li>Understanding of the mathematical basis of various deep-learning based language models</li>
				<li>Understanding of the learning algorithms behind major NLP use cases e.g. Machine Translation, Multi-task Learning, Language Generation, ...</li>
				<li>Understanding of the embedded bias in popular language models</li>
			"
Durham_England,COMP4177,"<h2>title</h2>COMP4177: 
NETWORKS AND THEIR STRUCTURE<h2>summary</h2>
			<li>To design structured networks to provide the communications fabric of distributed-memory multi-processors, networks-on-chips and data centre networks.</li>
			<li>To introduce the theoretical and practical tools needed to analyse social and technological networks. 
  </li>
		<h2>content</h2>
			<li>Core aspects of interconnection networks: topology; routing; switching; flow control; packets; technology.</li>
			<li>Graph theory: degree; cuts; bisections; paths; diameter; embeddings; automorphisms; symmetry.</li>
			<li>Topologies: hypercubes; tori; k-ary n-cubes; cube-connected cycles.</li>
			<li>Performance: traffic patterns; throughput; latency; path diversity; packaging; routing algorithms.</li>
			<li>Modelling networks to make comparisons and predictions: random graphs; Milgram's small world experiment; Watts-Strogatz model; Kleinberg model.  </li>
			<li>Centrality measures: finding influential nodes in networks; using centrality measures to understand the community structure of networks.  </li>
			<li>Epidemics: how contagions spread in networks; models of diffusion; SIR model; epidemic threshold; SIS model.</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an in-depth knowledge of the state-of-the-art in interconnection networks and network science</li>
				<li>an awareness of the main open problems of current interest </li>
				<li>an understanding of research issues that relate to these problems, including recent developments and research trends and breaking technologies.</li>
			","COMP4177: 
NETWORKS AND THEIR STRUCTURE","
			<li>To design structured networks to provide the communications fabric of distributed-memory multi-processors, networks-on-chips and data centre networks.</li>
			<li>To introduce the theoretical and practical tools needed to analyse social and technological networks. 
  </li>
		","
			<li>Core aspects of interconnection networks: topology; routing; switching; flow control; packets; technology.</li>
			<li>Graph theory: degree; cuts; bisections; paths; diameter; embeddings; automorphisms; symmetry.</li>
			<li>Topologies: hypercubes; tori; k-ary n-cubes; cube-connected cycles.</li>
			<li>Performance: traffic patterns; throughput; latency; path diversity; packaging; routing algorithms.</li>
			<li>Modelling networks to make comparisons and predictions: random graphs; Milgram's small world experiment; Watts-Strogatz model; Kleinberg model.  </li>
			<li>Centrality measures: finding influential nodes in networks; using centrality measures to understand the community structure of networks.  </li>
			<li>Epidemics: how contagions spread in networks; models of diffusion; SIR model; epidemic threshold; SIS model.</li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an in-depth knowledge of the state-of-the-art in interconnection networks and network science</li>
				<li>an awareness of the main open problems of current interest </li>
				<li>an understanding of research issues that relate to these problems, including recent developments and research trends and breaking technologies.</li>
			"
Durham_England,COMP4187,"<h2>title</h2>COMP4187: 
PARALLEL SCIENTIFIC COMPUTING II<h2>summary</h2>
			<li>Introduce advanced scientific computing techniques</li>
			<li>Familiarise student with distributed memory programming and MPI</li>
		<h2>content</h2>
			<li>Basic spatial discretisation techniques for partial differential equations</li>
			<li>Implicit time discretisation techniques for ordinary differential equations.</li>
			<li>Advanced algorithms of scientific computing</li>
			<li>Distributed memory programming paradigms.</li>
			<li>Advanced parallel data structures.</li>
		<h2>ilo</h2>
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an in-depth knowledge of the state-of-the-art in scientific computing and accelerator programming</li>
				<li>a critical awareness of the main open problems of current interest related to these areas</li>
				<li>a comprehensive understanding of the research issues that relate to these problems, including recent developments and research trends, breaking technologies and opportunities for industrial innovation. </li>
			","COMP4187: 
PARALLEL SCIENTIFIC COMPUTING II","
			<li>Introduce advanced scientific computing techniques</li>
			<li>Familiarise student with distributed memory programming and MPI</li>
		","
			<li>Basic spatial discretisation techniques for partial differential equations</li>
			<li>Implicit time discretisation techniques for ordinary differential equations.</li>
			<li>Advanced algorithms of scientific computing</li>
			<li>Distributed memory programming paradigms.</li>
			<li>Advanced parallel data structures.</li>
		","
				<li>On completion of the module, students will be able to demonstrate: </li>
				<li>an in-depth knowledge of the state-of-the-art in scientific computing and accelerator programming</li>
				<li>a critical awareness of the main open problems of current interest related to these areas</li>
				<li>a comprehensive understanding of the research issues that relate to these problems, including recent developments and research trends, breaking technologies and opportunities for industrial innovation. </li>
			"
Durham_England,COMP4197,"<h2>title</h2>COMP4197: 
RANDOMISED ALGORITHMS AND PROBABILISTIC METHODS<h2>summary</h2>
			<li>The aim of the module is to equip students with the ability to design and analyse efficient probabilistic algorithms.</li>
		<h2>content</h2>
			<li> To be chosen from the following: </li>
			<li> basic bounds and inequalities (Markov, Chebyshev, Chernoff) </li>
			<li> Martingales </li>
			<li> Markov chains and random walks </li>
			<li> the probabilistic method </li>
			<li> approximate counting </li>
			<li> parallel and distributed probabilistic algorithms </li>
		<h2>ilo</h2>
				<li> On completion of the module, students will be able to demonstrate: </li>
				<li> a knowledge about various important problem solving paradigms in the broad area of probabilistic methods and algorithms </li>
				<li> an ability to apply techniques and methods from the relevant topics to tackle fundamental algorithmic problems </li>
				<li> an ability to conduct review and self-study to further their knowledge beyond the taught material </li>
			","COMP4197: 
RANDOMISED ALGORITHMS AND PROBABILISTIC METHODS","
			<li>The aim of the module is to equip students with the ability to design and analyse efficient probabilistic algorithms.</li>
		","
			<li> To be chosen from the following: </li>
			<li> basic bounds and inequalities (Markov, Chebyshev, Chernoff) </li>
			<li> Martingales </li>
			<li> Markov chains and random walks </li>
			<li> the probabilistic method </li>
			<li> approximate counting </li>
			<li> parallel and distributed probabilistic algorithms </li>
		","
				<li> On completion of the module, students will be able to demonstrate: </li>
				<li> a knowledge about various important problem solving paradigms in the broad area of probabilistic methods and algorithms </li>
				<li> an ability to apply techniques and methods from the relevant topics to tackle fundamental algorithmic problems </li>
				<li> an ability to conduct review and self-study to further their knowledge beyond the taught material </li>
			"
