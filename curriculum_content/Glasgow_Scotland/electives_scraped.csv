institution,elective,overview,title,summary,content,ilo
Glasgow_Scotland,COMPSCI4091,"<h2>title</h2>Advanced Networked Systems (H) COMPSCI4091<h2>summary</h2><p id=""_COMPSCI40910""><span id=""_COMPSCI40911"">The course aims to give students a deep understanding of the fundamental design, implementation, management, and evaluation principles that govern large-scale, high-speed networked systems. These include algorithmic and implementation techniques for high-speed networking in routers and end-nodes; systems performance measurement and modelling principles; network and system resource management, allocation and engineering schemes; and research and technological advances that drive the development of a converged, global telecommunications medium of the future.</span></p><h2>content</h2><p id=""_COMPSCI409131""><span id=""_COMPSCI409132"">Computer networks have become an integral part of society - we take for granted the ability to transact commerce over the Internet, to store documents online, and that users can avail themselves of a growing set of communication methods, ranging from file sharing to social networking and video conferencing. Moreover, computer networks underpin a lot of recent paradigm-shifting advances in ICT, from Cloud Computing, to Smart Cities and the Internet of Things.</span></p><p id=""_COMPSCI409133"">&nbsp;</p><p id=""_COMPSCI409134""><span id=""_COMPSCI409135"">To support the seamless provision of all these advanced services, computer networks engage a complex set of interconnected systems and components whose design is governed by principles across the spectrum of Computing Science and Engineering: from hardware and software architecture, to protocols and algorithms, to analysis and modelling. </span></p><p id=""_COMPSCI409136""><span id=""_COMPSCI409137"">This course will therefore adopt a holistic systems thinking instead of the 'black-box' thinking that often results from treating concepts (such as, e.g., algorithms, OS, networking) in isolation.</span></p><p id=""_COMPSCI409138"">&nbsp;</p><p id=""_COMPSCI409139"">&nbsp;</p><p id=""_COMPSCI409140""><span id=""_COMPSCI409141"">1. </span><span id=""_COMPSCI409142"">The course </span><span id=""_COMPSCI409143"">will look at 'network algorithmics' as an interdisciplinary systems approach to streamlining network stack implementations in routers and end-nodes, and understand the bottlenecks that need to be overcome in order to meet strict performance requirements.</span></p><p id=""_COMPSCI409144""><span id=""_COMPSCI409145"">2. </span><span id=""_COMPSCI409146"">The course </span><span id=""_COMPSCI409147"">will </span><span id=""_COMPSCI409148"">cover </span><span id=""_COMPSCI409149"">the importance of high performance in network design and implementation, and understand the need for building networked systems that are on par with ever increasing physical link capacities (you can buy more bandwidth, but cannot buy less delay). In doing so, ways to measure network performance</span><span id=""_COMPSCI409150"">&nbsp;will be explored</span><span id=""_COMPSCI409151"">, and also approaches to evaluating and analysing the performance of networked systems. Students will therefore be able to generalise and reason about the capabilities and limitations of different processing and service models. </span></p><p id=""_COMPSCI409152""><span id=""_COMPSCI409153"">3. </span><span id=""_COMPSCI409154"">In addition, the course</span><span id=""_COMPSCI409155"">&nbsp;will look at algorithms and technologies for efficient and fair resource usage, </span><span id=""_COMPSCI409156"">and students will </span><span id=""_COMPSCI409157"">understand the importance of end-to-end protocol design and traffic engineering. </span><span id=""_COMPSCI409158"">For example, students</span><span id=""_COMPSCI409159"">&nbsp;will understand why, in networks, packet loss is not an isolated incident 'when things go wrong' but the norm: a mechanism based on which the appropriate feedback loops</span><span id=""_COMPSCI409160"">&nbsp;can be created </span><span id=""_COMPSCI409161"">to ensure that the underlying resources are used fully and shared equally.</span></p><p id=""_COMPSCI409162""><span id=""_COMPSCI409163"">4. </span><span id=""_COMPSCI409164"">The course will also </span><span id=""_COMPSCI409165"">look at recent technological and research advances in emerging</span><span id=""_COMPSCI409166"">&nbsp;computer networking technologies and protocols. For example, Data Centre / Cloud networking for achieving </span><span id=""_COMPSCI409167"">full bi-section bandwidth; Software-Defined Networking (SDN) as a transformative paradigm aiming to logically centralise the network control plane; Network Function Virtualisation (NFV) as an approach to embed add-on services on top of connectivity in network infrastructures; </span><span id=""_COMPSCI409168"">Resilient networked systems.</span></p><p id=""_COMPSCI409169"">&nbsp;</p><p id=""_COMPSCI409170"">&nbsp;</p><p id=""_COMPSCI409171""><span id=""_COMPSCI409172"">By the end of this course, students will have a deep understanding of the design and implementation principles for building high-performance inter-connected systems, as well as specialist knowledge in advances in computer networking technology. This course will be particularly suitable for students who aspire to successful careers either in systems research, or in diverse industry sectors ranging from global (e.g., Google, Facebook, Amazon) to local (e.g., the banking sector) infrastructure operators, to equipment vendors (e.g., Cisco, Huawei, Ericson) and Internet Service Providers (e.g., BT).</span></p><h2>ilo</h2><p id=""_COMPSCI409173""><span id=""_COMPSCI409174"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI409175""><span id=""_COMPSCI409176"">1.</span><span id=""_COMPSCI409177"">	Articulate the key challenges in building high-speed networked systems </span></p><p id=""_COMPSCI409178""><span id=""_COMPSCI409179"">2.</span><span id=""_COMPSCI409180"">	</span><span id=""_COMPSCI409181"">Illustrate </span><span id=""_COMPSCI409182"">the design and im</span><span id=""_COMPSCI409183"">plement</span><span id=""_COMPSCI409184"">ation </span><span id=""_COMPSCI409185"">implications</span><span id=""_COMPSCI409186"">&nbsp;</span><span id=""_COMPSCI409187"">for high-performance networked systems, </span><span id=""_COMPSCI409188""><br></span><span id=""_COMPSCI409189"">	p</span><span id=""_COMPSCI409190"">rotocols, and algorithms</span></p><p id=""_COMPSCI409191""><span id=""_COMPSCI409192"">3.</span><span id=""_COMPSCI409193"">	Design and conduct experiments over diverse networked infrastructures </span></p><p id=""_COMPSCI409194""><span id=""_COMPSCI409195"">4.</span><span id=""_COMPSCI409196"">Outline and critique advances in networking technology and systems</span></p>",Advanced Networked Systems (H) COMPSCI4091,"<p id=""_COMPSCI40910""><span id=""_COMPSCI40911"">The course aims to give students a deep understanding of the fundamental design, implementation, management, and evaluation principles that govern large-scale, high-speed networked systems. These include algorithmic and implementation techniques for high-speed networking in routers and end-nodes; systems performance measurement and modelling principles; network and system resource management, allocation and engineering schemes; and research and technological advances that drive the development of a converged, global telecommunications medium of the future.</span></p>","<p id=""_COMPSCI409131""><span id=""_COMPSCI409132"">Computer networks have become an integral part of society - we take for granted the ability to transact commerce over the Internet, to store documents online, and that users can avail themselves of a growing set of communication methods, ranging from file sharing to social networking and video conferencing. Moreover, computer networks underpin a lot of recent paradigm-shifting advances in ICT, from Cloud Computing, to Smart Cities and the Internet of Things.</span></p><p id=""_COMPSCI409133"">&nbsp;</p><p id=""_COMPSCI409134""><span id=""_COMPSCI409135"">To support the seamless provision of all these advanced services, computer networks engage a complex set of interconnected systems and components whose design is governed by principles across the spectrum of Computing Science and Engineering: from hardware and software architecture, to protocols and algorithms, to analysis and modelling. </span></p><p id=""_COMPSCI409136""><span id=""_COMPSCI409137"">This course will therefore adopt a holistic systems thinking instead of the 'black-box' thinking that often results from treating concepts (such as, e.g., algorithms, OS, networking) in isolation.</span></p><p id=""_COMPSCI409138"">&nbsp;</p><p id=""_COMPSCI409139"">&nbsp;</p><p id=""_COMPSCI409140""><span id=""_COMPSCI409141"">1. </span><span id=""_COMPSCI409142"">The course </span><span id=""_COMPSCI409143"">will look at 'network algorithmics' as an interdisciplinary systems approach to streamlining network stack implementations in routers and end-nodes, and understand the bottlenecks that need to be overcome in order to meet strict performance requirements.</span></p><p id=""_COMPSCI409144""><span id=""_COMPSCI409145"">2. </span><span id=""_COMPSCI409146"">The course </span><span id=""_COMPSCI409147"">will </span><span id=""_COMPSCI409148"">cover </span><span id=""_COMPSCI409149"">the importance of high performance in network design and implementation, and understand the need for building networked systems that are on par with ever increasing physical link capacities (you can buy more bandwidth, but cannot buy less delay). In doing so, ways to measure network performance</span><span id=""_COMPSCI409150"">&nbsp;will be explored</span><span id=""_COMPSCI409151"">, and also approaches to evaluating and analysing the performance of networked systems. Students will therefore be able to generalise and reason about the capabilities and limitations of different processing and service models. </span></p><p id=""_COMPSCI409152""><span id=""_COMPSCI409153"">3. </span><span id=""_COMPSCI409154"">In addition, the course</span><span id=""_COMPSCI409155"">&nbsp;will look at algorithms and technologies for efficient and fair resource usage, </span><span id=""_COMPSCI409156"">and students will </span><span id=""_COMPSCI409157"">understand the importance of end-to-end protocol design and traffic engineering. </span><span id=""_COMPSCI409158"">For example, students</span><span id=""_COMPSCI409159"">&nbsp;will understand why, in networks, packet loss is not an isolated incident 'when things go wrong' but the norm: a mechanism based on which the appropriate feedback loops</span><span id=""_COMPSCI409160"">&nbsp;can be created </span><span id=""_COMPSCI409161"">to ensure that the underlying resources are used fully and shared equally.</span></p><p id=""_COMPSCI409162""><span id=""_COMPSCI409163"">4. </span><span id=""_COMPSCI409164"">The course will also </span><span id=""_COMPSCI409165"">look at recent technological and research advances in emerging</span><span id=""_COMPSCI409166"">&nbsp;computer networking technologies and protocols. For example, Data Centre / Cloud networking for achieving </span><span id=""_COMPSCI409167"">full bi-section bandwidth; Software-Defined Networking (SDN) as a transformative paradigm aiming to logically centralise the network control plane; Network Function Virtualisation (NFV) as an approach to embed add-on services on top of connectivity in network infrastructures; </span><span id=""_COMPSCI409168"">Resilient networked systems.</span></p><p id=""_COMPSCI409169"">&nbsp;</p><p id=""_COMPSCI409170"">&nbsp;</p><p id=""_COMPSCI409171""><span id=""_COMPSCI409172"">By the end of this course, students will have a deep understanding of the design and implementation principles for building high-performance inter-connected systems, as well as specialist knowledge in advances in computer networking technology. This course will be particularly suitable for students who aspire to successful careers either in systems research, or in diverse industry sectors ranging from global (e.g., Google, Facebook, Amazon) to local (e.g., the banking sector) infrastructure operators, to equipment vendors (e.g., Cisco, Huawei, Ericson) and Internet Service Providers (e.g., BT).</span></p>","<p id=""_COMPSCI409173""><span id=""_COMPSCI409174"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI409175""><span id=""_COMPSCI409176"">1.</span><span id=""_COMPSCI409177"">	Articulate the key challenges in building high-speed networked systems </span></p><p id=""_COMPSCI409178""><span id=""_COMPSCI409179"">2.</span><span id=""_COMPSCI409180"">	</span><span id=""_COMPSCI409181"">Illustrate </span><span id=""_COMPSCI409182"">the design and im</span><span id=""_COMPSCI409183"">plement</span><span id=""_COMPSCI409184"">ation </span><span id=""_COMPSCI409185"">implications</span><span id=""_COMPSCI409186"">&nbsp;</span><span id=""_COMPSCI409187"">for high-performance networked systems, </span><span id=""_COMPSCI409188""><br></span><span id=""_COMPSCI409189"">	p</span><span id=""_COMPSCI409190"">rotocols, and algorithms</span></p><p id=""_COMPSCI409191""><span id=""_COMPSCI409192"">3.</span><span id=""_COMPSCI409193"">	Design and conduct experiments over diverse networked infrastructures </span></p><p id=""_COMPSCI409194""><span id=""_COMPSCI409195"">4.</span><span id=""_COMPSCI409196"">Outline and critique advances in networking technology and systems</span></p>"
Glasgow_Scotland,COMPSCI4071,"<h2>title</h2>Advanced Software Engineering Practices (H) COMPSCI4071<h2>summary</h2><p id=""_COMPSCI40710""><span id=""_COMPSCI40711"">This course </span><span id=""_COMPSCI40712"">gives</span><span id=""_COMPSCI40713"">&nbsp;students</span><span id=""_COMPSCI40714"">&nbsp;</span><span id=""_COMPSCI40715"">the opportunity </span><span id=""_COMPSCI40716"">to learn and practice</span><span id=""_COMPSCI40717"">&nbsp;advanced </span><span id=""_COMPSCI40718"">prin</span><span id=""_COMPSCI40719"">ciples, methods and tools </span><span id=""_COMPSCI407110"">in </span><span id=""_COMPSCI407111"">S</span><span id=""_COMPSCI407112"">oftware </span><span id=""_COMPSCI407113"">Engineering.</span><span id=""_COMPSCI407114"">&nbsp; The course is intended for students who have experience of software development through a summer internship or similar. The course covers technical and management</span><span id=""_COMPSCI407115"">&nbsp;skills that are needed for mentoring and </span><span id=""_COMPSCI407116"">leading teams of software developers.  The course is</span><span id=""_COMPSCI407117"">&nbsp;delivered in collaboration with a</span><span id=""_COMPSCI407118"">n</span><span id=""_COMPSCI407119"">&nbsp;established software industry partner</span><span id=""_COMPSCI407120"">&nbsp;(JP Morgan)</span><span id=""_COMPSCI407121"">.</span></p><h2>content</h2><p id=""_COMPSCI407175""><span id=""_COMPSCI407176"">To introduce advanced principles, methods an</span><span id=""_COMPSCI407177"">d tools in</span><span id=""_COMPSCI407178"">&nbsp;</span><span id=""_COMPSCI407179"">S</span><span id=""_COMPSCI407180"">oftwa</span><span id=""_COMPSCI407181"">re Engineering.</span></p><p id=""_COMPSCI407182""><span id=""_COMPSCI407183"">To introduce techniques for effective working in software teams in a mentoring role, </span></p><p id=""_COMPSCI407184""><span id=""_COMPSCI407185"">To expose students to the practicalities and reality of software engineering in industry.</span></p><h2>ilo</h2><p id=""_COMPSCI407186""><span id=""_COMPSCI407187"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407188""><span id=""_COMPSCI407189"">1. </span><span id=""_COMPSCI407190"">Explain a range of advanced practices in software engineering including change management, requirements negotiation and prioritisation, software architectural decision making, continuous integration and agile project management</span><span id=""_COMPSCI407191"">;</span></p><p id=""_COMPSCI407192""><span id=""_COMPSCI407193"">2. </span><span id=""_COMPSCI407194"">Apply and adapt mentoring techniques for working with less experienced colleagues</span><span id=""_COMPSCI407195"">;</span></p><p id=""_COMPSCI407196""><span id=""_COMPSCI407197"">3. </span><span id=""_COMPSCI407198"">Identify, plan, implement and evaluate improvements to team software processes</span><span id=""_COMPSCI407199"">;</span></p><p id=""_COMPSCI4071100""><span id=""_COMPSCI4071101"">4. </span><span id=""_COMPSCI4071102"">Be aware of the limitations of existing software engineering practices in large scale systems development.</span></p>",Advanced Software Engineering Practices (H) COMPSCI4071,"<p id=""_COMPSCI40710""><span id=""_COMPSCI40711"">This course </span><span id=""_COMPSCI40712"">gives</span><span id=""_COMPSCI40713"">&nbsp;students</span><span id=""_COMPSCI40714"">&nbsp;</span><span id=""_COMPSCI40715"">the opportunity </span><span id=""_COMPSCI40716"">to learn and practice</span><span id=""_COMPSCI40717"">&nbsp;advanced </span><span id=""_COMPSCI40718"">prin</span><span id=""_COMPSCI40719"">ciples, methods and tools </span><span id=""_COMPSCI407110"">in </span><span id=""_COMPSCI407111"">S</span><span id=""_COMPSCI407112"">oftware </span><span id=""_COMPSCI407113"">Engineering.</span><span id=""_COMPSCI407114"">&nbsp; The course is intended for students who have experience of software development through a summer internship or similar. The course covers technical and management</span><span id=""_COMPSCI407115"">&nbsp;skills that are needed for mentoring and </span><span id=""_COMPSCI407116"">leading teams of software developers.  The course is</span><span id=""_COMPSCI407117"">&nbsp;delivered in collaboration with a</span><span id=""_COMPSCI407118"">n</span><span id=""_COMPSCI407119"">&nbsp;established software industry partner</span><span id=""_COMPSCI407120"">&nbsp;(JP Morgan)</span><span id=""_COMPSCI407121"">.</span></p>","<p id=""_COMPSCI407175""><span id=""_COMPSCI407176"">To introduce advanced principles, methods an</span><span id=""_COMPSCI407177"">d tools in</span><span id=""_COMPSCI407178"">&nbsp;</span><span id=""_COMPSCI407179"">S</span><span id=""_COMPSCI407180"">oftwa</span><span id=""_COMPSCI407181"">re Engineering.</span></p><p id=""_COMPSCI407182""><span id=""_COMPSCI407183"">To introduce techniques for effective working in software teams in a mentoring role, </span></p><p id=""_COMPSCI407184""><span id=""_COMPSCI407185"">To expose students to the practicalities and reality of software engineering in industry.</span></p>","<p id=""_COMPSCI407186""><span id=""_COMPSCI407187"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407188""><span id=""_COMPSCI407189"">1. </span><span id=""_COMPSCI407190"">Explain a range of advanced practices in software engineering including change management, requirements negotiation and prioritisation, software architectural decision making, continuous integration and agile project management</span><span id=""_COMPSCI407191"">;</span></p><p id=""_COMPSCI407192""><span id=""_COMPSCI407193"">2. </span><span id=""_COMPSCI407194"">Apply and adapt mentoring techniques for working with less experienced colleagues</span><span id=""_COMPSCI407195"">;</span></p><p id=""_COMPSCI407196""><span id=""_COMPSCI407197"">3. </span><span id=""_COMPSCI407198"">Identify, plan, implement and evaluate improvements to team software processes</span><span id=""_COMPSCI407199"">;</span></p><p id=""_COMPSCI4071100""><span id=""_COMPSCI4071101"">4. </span><span id=""_COMPSCI4071102"">Be aware of the limitations of existing software engineering practices in large scale systems development.</span></p>"
Glasgow_Scotland,COMPSCI4089,"<h2>title</h2>Advanced Systems Programming (H) COMPSCI4089<h2>summary</h2><p id=""_COMPSCI40890""><span id=""_COMPSCI40891"">This course covers advanced topics systems programming, building on the material in Systems Programming (H) to explore new techniques for safer and more effective systems programming. It will focus on programming in an unmanaged environment, where data layout matters, and where performance is critical. This might include operating systems kernels, device drivers, low-level networking code, or other areas where the software-machine interface becomes critical.</span></p><h2>content</h2><p id=""_COMPSCI408927""><span id=""_COMPSCI408928"">The computing landscape has changed radically in the last decade. The desktop personal computer has become largely irrelevant, and heterogeneous, multicore, mobile, and real-time systems - smart mobile phones, netbooks, and laptops - are now ubiquitous. Yet, despite this shift, these systems are still programmed in C, and the majority run some variant of the Unix operating system. </span></p><p id=""_COMPSCI408929"">&nbsp;</p><p id=""_COMPSCI408930""><span id=""_COMPSCI408931"">The course aims to explore the features of modern programming languages and operating systems that can ease the challenges of systems programming, considering type systems and run-time support. It will review the research literature on systems programming and operating system interfaces, discuss the limitations of deployed systems, and consider how systems programming might evolve to address the challenges of supporting modern computing</span><span id=""_COMPSCI408932"">&nbsp;</span><span id=""_COMPSCI408933"">systems.  Particular emphasis will be placed on system correctness and secure programming, to ensure the resulting systems are safe to use in an adversarial environment.</span></p><h2>ilo</h2><p id=""_COMPSCI408935""><span id=""_COMPSCI408936"">By the end of this</span><span id=""_COMPSCI408937"">&nbsp;course students will be able</span><span id=""_COMPSCI408938"">&nbsp;to</span><span id=""_COMPSCI408939"">:</span></p><p id=""_COMPSCI408940""><span id=""_COMPSCI408941"">■&nbsp;</span><span id=""_COMPSCI408942"">Discuss the advantages and disadvantages of C as a systems programming language, and to compare and contrast this with a modern systems programming language, for example Rust; </span><span id=""_COMPSCI408943"">to </span><span id=""_COMPSCI408944"">d</span><span id=""_COMPSCI408945"">iscuss the role of the type system, static analysis, and verification tools in systems programming, and show awareness of how to model system properties using the type system to avoid errors;</span></p><p id=""_COMPSCI408946""><span id=""_COMPSCI408947"">■&nbsp;</span><span id=""_COMPSCI408948"">Discuss the challenges of secure low-level programming and write secure code in a modern systems programming language to perform systems programming tasks such as parsing hostile network input; show awareness of security problems in programs written in C;</span></p><p id=""_COMPSCI408949""><span id=""_COMPSCI408950"">■&nbsp;</span><span id=""_COMPSCI408951"">Discuss the advantages and disadvantages of integrating automatic memory management with the operating system/runtime, to understand the operation of popular garbage collection algorithms and alternative techniques for memory management, and know when it might be appropriate to apply such techniques and managed run-times to real-time systems and/or operating systems; </span></p><p id=""_COMPSCI408952""><span id=""_COMPSCI408953"">■&nbsp;</span><span id=""_COMPSCI408954"">Understand the impact of heterogeneous multicore systems on operating systems, compare and evaluate different programming models for concurrent systems, their implementation, and their impact on operating systems; and</span></p><p id=""_COMPSCI408955""><span id=""_COMPSCI408956"">■&nbsp;</span><span id=""_COMPSCI408957"">Construct and/or analyse simple programming to demonstrate understanding of novel techniques for memory management and/or concurrent programming, to understand the trade-offs and implementation decisions.</span></p>",Advanced Systems Programming (H) COMPSCI4089,"<p id=""_COMPSCI40890""><span id=""_COMPSCI40891"">This course covers advanced topics systems programming, building on the material in Systems Programming (H) to explore new techniques for safer and more effective systems programming. It will focus on programming in an unmanaged environment, where data layout matters, and where performance is critical. This might include operating systems kernels, device drivers, low-level networking code, or other areas where the software-machine interface becomes critical.</span></p>","<p id=""_COMPSCI408927""><span id=""_COMPSCI408928"">The computing landscape has changed radically in the last decade. The desktop personal computer has become largely irrelevant, and heterogeneous, multicore, mobile, and real-time systems - smart mobile phones, netbooks, and laptops - are now ubiquitous. Yet, despite this shift, these systems are still programmed in C, and the majority run some variant of the Unix operating system. </span></p><p id=""_COMPSCI408929"">&nbsp;</p><p id=""_COMPSCI408930""><span id=""_COMPSCI408931"">The course aims to explore the features of modern programming languages and operating systems that can ease the challenges of systems programming, considering type systems and run-time support. It will review the research literature on systems programming and operating system interfaces, discuss the limitations of deployed systems, and consider how systems programming might evolve to address the challenges of supporting modern computing</span><span id=""_COMPSCI408932"">&nbsp;</span><span id=""_COMPSCI408933"">systems.  Particular emphasis will be placed on system correctness and secure programming, to ensure the resulting systems are safe to use in an adversarial environment.</span></p>","<p id=""_COMPSCI408935""><span id=""_COMPSCI408936"">By the end of this</span><span id=""_COMPSCI408937"">&nbsp;course students will be able</span><span id=""_COMPSCI408938"">&nbsp;to</span><span id=""_COMPSCI408939"">:</span></p><p id=""_COMPSCI408940""><span id=""_COMPSCI408941"">■&nbsp;</span><span id=""_COMPSCI408942"">Discuss the advantages and disadvantages of C as a systems programming language, and to compare and contrast this with a modern systems programming language, for example Rust; </span><span id=""_COMPSCI408943"">to </span><span id=""_COMPSCI408944"">d</span><span id=""_COMPSCI408945"">iscuss the role of the type system, static analysis, and verification tools in systems programming, and show awareness of how to model system properties using the type system to avoid errors;</span></p><p id=""_COMPSCI408946""><span id=""_COMPSCI408947"">■&nbsp;</span><span id=""_COMPSCI408948"">Discuss the challenges of secure low-level programming and write secure code in a modern systems programming language to perform systems programming tasks such as parsing hostile network input; show awareness of security problems in programs written in C;</span></p><p id=""_COMPSCI408949""><span id=""_COMPSCI408950"">■&nbsp;</span><span id=""_COMPSCI408951"">Discuss the advantages and disadvantages of integrating automatic memory management with the operating system/runtime, to understand the operation of popular garbage collection algorithms and alternative techniques for memory management, and know when it might be appropriate to apply such techniques and managed run-times to real-time systems and/or operating systems; </span></p><p id=""_COMPSCI408952""><span id=""_COMPSCI408953"">■&nbsp;</span><span id=""_COMPSCI408954"">Understand the impact of heterogeneous multicore systems on operating systems, compare and evaluate different programming models for concurrent systems, their implementation, and their impact on operating systems; and</span></p><p id=""_COMPSCI408955""><span id=""_COMPSCI408956"">■&nbsp;</span><span id=""_COMPSCI408957"">Construct and/or analyse simple programming to demonstrate understanding of novel techniques for memory management and/or concurrent programming, to understand the trade-offs and implementation decisions.</span></p>"
Glasgow_Scotland,COMPSCI4003,"<h2>title</h2>Algorithmics II (H) COMPSCI4003<h2>summary</h2><p id=""_COMPSCI40030""><span id=""_COMPSCI40031"">The aims of the course are: </span></p><p id=""_COMPSCI40032""><span id=""_COMPSCI40033"">To present a broad range of algorithm design methods, with examples chosen to reflect practical applications;</span></p><p id=""_COMPSCI40034""><span id=""_COMPSCI40035"">To enable students to make educated choices between strategies for algorithmic problem-solving;</span></p><p id=""_COMPSCI40036""><span id=""_COMPSCI40037"">To convey the significance of computational complexity, and to present a range of methods for dealing with it in practice.</span></p><h2>content</h2><p id=""_COMPSCI400339""><span id=""_COMPSCI400340"">The aims of the course are: </span></p><p id=""_COMPSCI400341""><span id=""_COMPSCI400342"">T</span><span id=""_COMPSCI400343"">o present a broad range of algorithm design methods, with examples chosen to reflect practical applications;</span><span id=""_COMPSCI400344"">&nbsp;</span><span id=""_COMPSCI400345"">to enable students to make educated choices between strategies for algorithmic problem-solving;</span><span id=""_COMPSCI400346"">&nbsp;</span><span id=""_COMPSCI400347"">to convey the significance of computational complexity, and to present a range of methods for dealing with it in practice.</span></p><h2>ilo</h2><p id=""_COMPSCI400348""><span id=""_COMPSCI400349"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI400350""><span id=""_COMPSCI400351"">1. </span><span id=""_COMPSCI400352"">Describe a wide range of efficient algorithms for problems with important applications in domains such as computational geometry, string processing and graph theory;</span></p><p id=""_COMPSCI400353""><span id=""_COMPSCI400354"">2. </span><span id=""_COMPSCI400355"">Discuss why these algorithms are correct, and prove their correctness;</span></p><p id=""_COMPSCI400356""><span id=""_COMPSCI400357"">3. </span><span id=""_COMPSCI400358"">Demonstrate the execution of such algorithms as applied to typical problem instances;</span></p><p id=""_COMPSCI400359""><span id=""_COMPSCI400360"">4. </span><span id=""_COMPSCI400361"">Characterise and manipulate advanced data structures such as the suffix tree;</span></p><p id=""_COMPSCI400362""><span id=""_COMPSCI400363"">5. </span><span id=""_COMPSCI400364"">Apply algorithmic techniques to specific problems motivated by practical applications;</span></p><p id=""_COMPSCI400365""><span id=""_COMPSCI400366"">6. </span><span id=""_COMPSCI400367"">Analyse the worst-case complexity of algorithms using a variety of mathematical techniques;</span></p><p id=""_COMPSCI400368""><span id=""_COMPSCI400369"">7. </span><span id=""_COMPSCI400370"">Discuss the theory and practical implications of NP-completeness;</span></p><p id=""_COMPSCI400371""><span id=""_COMPSCI400372"">8. </span><span id=""_COMPSCI400373"">Explain techniques for coping with complexity, such as backtracking algorithms, pseudo-polynomial-time algorithms, constant-factor approximation algorithms, and polynomial-time approximation schemes;</span></p><p id=""_COMPSCI400374""><span id=""_COMPSCI400375"">9. </span><span id=""_COMPSCI400376"">Construct proofs of NP-completeness and </span><span id=""_COMPSCI400377"">inapproximability</span><span id=""_COMPSCI400378"">&nbsp;results.</span></p>",Algorithmics II (H) COMPSCI4003,"<p id=""_COMPSCI40030""><span id=""_COMPSCI40031"">The aims of the course are: </span></p><p id=""_COMPSCI40032""><span id=""_COMPSCI40033"">To present a broad range of algorithm design methods, with examples chosen to reflect practical applications;</span></p><p id=""_COMPSCI40034""><span id=""_COMPSCI40035"">To enable students to make educated choices between strategies for algorithmic problem-solving;</span></p><p id=""_COMPSCI40036""><span id=""_COMPSCI40037"">To convey the significance of computational complexity, and to present a range of methods for dealing with it in practice.</span></p>","<p id=""_COMPSCI400339""><span id=""_COMPSCI400340"">The aims of the course are: </span></p><p id=""_COMPSCI400341""><span id=""_COMPSCI400342"">T</span><span id=""_COMPSCI400343"">o present a broad range of algorithm design methods, with examples chosen to reflect practical applications;</span><span id=""_COMPSCI400344"">&nbsp;</span><span id=""_COMPSCI400345"">to enable students to make educated choices between strategies for algorithmic problem-solving;</span><span id=""_COMPSCI400346"">&nbsp;</span><span id=""_COMPSCI400347"">to convey the significance of computational complexity, and to present a range of methods for dealing with it in practice.</span></p>","<p id=""_COMPSCI400348""><span id=""_COMPSCI400349"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI400350""><span id=""_COMPSCI400351"">1. </span><span id=""_COMPSCI400352"">Describe a wide range of efficient algorithms for problems with important applications in domains such as computational geometry, string processing and graph theory;</span></p><p id=""_COMPSCI400353""><span id=""_COMPSCI400354"">2. </span><span id=""_COMPSCI400355"">Discuss why these algorithms are correct, and prove their correctness;</span></p><p id=""_COMPSCI400356""><span id=""_COMPSCI400357"">3. </span><span id=""_COMPSCI400358"">Demonstrate the execution of such algorithms as applied to typical problem instances;</span></p><p id=""_COMPSCI400359""><span id=""_COMPSCI400360"">4. </span><span id=""_COMPSCI400361"">Characterise and manipulate advanced data structures such as the suffix tree;</span></p><p id=""_COMPSCI400362""><span id=""_COMPSCI400363"">5. </span><span id=""_COMPSCI400364"">Apply algorithmic techniques to specific problems motivated by practical applications;</span></p><p id=""_COMPSCI400365""><span id=""_COMPSCI400366"">6. </span><span id=""_COMPSCI400367"">Analyse the worst-case complexity of algorithms using a variety of mathematical techniques;</span></p><p id=""_COMPSCI400368""><span id=""_COMPSCI400369"">7. </span><span id=""_COMPSCI400370"">Discuss the theory and practical implications of NP-completeness;</span></p><p id=""_COMPSCI400371""><span id=""_COMPSCI400372"">8. </span><span id=""_COMPSCI400373"">Explain techniques for coping with complexity, such as backtracking algorithms, pseudo-polynomial-time algorithms, constant-factor approximation algorithms, and polynomial-time approximation schemes;</span></p><p id=""_COMPSCI400374""><span id=""_COMPSCI400375"">9. </span><span id=""_COMPSCI400376"">Construct proofs of NP-completeness and </span><span id=""_COMPSCI400377"">inapproximability</span><span id=""_COMPSCI400378"">&nbsp;results.</span></p>"
Glasgow_Scotland,COMPSCI4004,"<h2>title</h2>Artificial Intelligence (H) COMPSCI4004<h2>summary</h2><p id=""_COMPSCI40040""><span id=""_COMPSCI40041"">Artificial Intelligence </span><span id=""_COMPSCI40042"">(</span><span id=""_COMPSCI40043"">H</span><span id=""_COMPSCI40044"">)</span><span id=""_COMPSCI40045"">&nbsp;is an introduction to Artificial Intelligence, giving the students an overview of intelligent agent design.</span></p><h2>content</h2><p id=""_COMPSCI400466""><span id=""_COMPSCI400467"">The aim of this course is to provide an overview of intelligent agent design, where agents perceive their environment and act rationally to fulfil their goals.  </span><span id=""_COMPSCI400468"">Students will gain practical experience in labs, programming various aspects of intelligent systems.</span></p><h2>ilo</h2><p id=""_COMPSCI400472""><span id=""_COMPSCI400473"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI400474""><span id=""_COMPSCI400475"">1. </span><span id=""_COMPSCI400476"">Demonstrate familiarity with the history of AI, philosophical debates, and understand the potential and limitations of</span><span id=""_COMPSCI400477"">&nbsp;</span><span id=""_COMPSCI400478"">the subject in its current form;</span></p><p id=""_COMPSCI400479""><span id=""_COMPSCI400480"">2. </span><span id=""_COMPSCI400481"">Explain the basic components of an intelligent agent, and be able to map these onto other advanced subjects such as information retrieval, computer vision, database systems, robotics, human-computer interaction, reactive systems etc</span></p><p id=""_COMPSCI400482""><span id=""_COMPSCI400483"">3. </span><span id=""_COMPSCI400484"">Discuss difficulties in computer perception;</span></p><p id=""_COMPSCI400485""><span id=""_COMPSCI400486"">4. </span><span id=""_COMPSCI400487"">Discuss basic issues in planning;</span></p><p id=""_COMPSCI400488""><span id=""_COMPSCI400489"">5. </span><span id=""_COMPSCI400490"">Explain and apply search-based problem-solving techniques;</span></p><p id=""_COMPSCI400491""><span id=""_COMPSCI400492"">6. </span><span id=""_COMPSCI400493"">Formulate and apply Bayesian networks in modelling and planning;</span></p><p id=""_COMPSCI400494""><span id=""_COMPSCI400495"">7. </span><span id=""_COMPSCI400496"">Explain and apply utility theory as a probabilistic framework for rational decision making;</span></p><p id=""_COMPSCI400497""><span id=""_COMPSCI400498"">8. </span><span id=""_COMPSCI400499"">Explain and apply basic machine learning techniques to learn from rewards and observations</span><span id=""_COMPSCI4004100"">.</span></p>",Artificial Intelligence (H) COMPSCI4004,"<p id=""_COMPSCI40040""><span id=""_COMPSCI40041"">Artificial Intelligence </span><span id=""_COMPSCI40042"">(</span><span id=""_COMPSCI40043"">H</span><span id=""_COMPSCI40044"">)</span><span id=""_COMPSCI40045"">&nbsp;is an introduction to Artificial Intelligence, giving the students an overview of intelligent agent design.</span></p>","<p id=""_COMPSCI400466""><span id=""_COMPSCI400467"">The aim of this course is to provide an overview of intelligent agent design, where agents perceive their environment and act rationally to fulfil their goals.  </span><span id=""_COMPSCI400468"">Students will gain practical experience in labs, programming various aspects of intelligent systems.</span></p>","<p id=""_COMPSCI400472""><span id=""_COMPSCI400473"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI400474""><span id=""_COMPSCI400475"">1. </span><span id=""_COMPSCI400476"">Demonstrate familiarity with the history of AI, philosophical debates, and understand the potential and limitations of</span><span id=""_COMPSCI400477"">&nbsp;</span><span id=""_COMPSCI400478"">the subject in its current form;</span></p><p id=""_COMPSCI400479""><span id=""_COMPSCI400480"">2. </span><span id=""_COMPSCI400481"">Explain the basic components of an intelligent agent, and be able to map these onto other advanced subjects such as information retrieval, computer vision, database systems, robotics, human-computer interaction, reactive systems etc</span></p><p id=""_COMPSCI400482""><span id=""_COMPSCI400483"">3. </span><span id=""_COMPSCI400484"">Discuss difficulties in computer perception;</span></p><p id=""_COMPSCI400485""><span id=""_COMPSCI400486"">4. </span><span id=""_COMPSCI400487"">Discuss basic issues in planning;</span></p><p id=""_COMPSCI400488""><span id=""_COMPSCI400489"">5. </span><span id=""_COMPSCI400490"">Explain and apply search-based problem-solving techniques;</span></p><p id=""_COMPSCI400491""><span id=""_COMPSCI400492"">6. </span><span id=""_COMPSCI400493"">Formulate and apply Bayesian networks in modelling and planning;</span></p><p id=""_COMPSCI400494""><span id=""_COMPSCI400495"">7. </span><span id=""_COMPSCI400496"">Explain and apply utility theory as a probabilistic framework for rational decision making;</span></p><p id=""_COMPSCI400497""><span id=""_COMPSCI400498"">8. </span><span id=""_COMPSCI400499"">Explain and apply basic machine learning techniques to learn from rewards and observations</span><span id=""_COMPSCI4004100"">.</span></p>"
Glasgow_Scotland,COMPSCI4064,"<h2>title</h2>Big Data: Systems, Programming, and Management (H) COMPSCI4064<h2>summary</h2><p id=""_COMPSCI40640""><span id=""_COMPSCI40641"">Big Da</span><span id=""_COMPSCI40642"">ta is nowadays manifested in a </span><span id=""_COMPSCI40643"">very large number of environments and application fields pertaining to our education, entertainment, health, public governance, enterprising, etc. The course will endow students with the understanding of the new challenges big data introduces and the currently available solutions. These include (i) challenges pertaining to the modelling, accessing, and storing of big data, (ii) an understanding of the fundamentals of systems designed to store and access big data, and (iii) programming paradigms for efficient scalable access to big data.</span></p><h2>content</h2><p id=""_COMPSCI406427""><span id=""_COMPSCI406428"">The course aims to endow students with:</span></p><p id=""_COMPSCI406429""><span id=""_COMPSCI406430"">An understanding of the new challenges posed by the advent for big data, as they refer to its modelling, storage, and access, paying particular emphasis on the impact of the desiderata of scalability and efficiency in big data infrastructures.</span></p><p id=""_COMPSCI406431""><span id=""_COMPSCI406432"">Exposure to a number of different cloud </span><span id=""_COMPSCI406433"">data stores</span><span id=""_COMPSCI406434"">&nbsp;and their design and implementation details, showing how they can achieve efficiency and scalability, while also addressing design trade-offs and their impacts.</span></p><p id=""_COMPSCI406435""><span id=""_COMPSCI406436"">Familiarity with </span><span id=""_COMPSCI406437"">modern </span><span id=""_COMPSCI406438"">programming paradigm</span><span id=""_COMPSCI406439"">s (e.g., MapReduce, RDDs, etc.)</span><span id=""_COMPSCI406440"">, so to enable them to write programs which can execute in massively parallel infrastructures in the cloud.</span></p><p id=""_COMPSCI406441""><span id=""_COMPSCI406442"">The ability to understand the internals of </span><span id=""_COMPSCI406443"">(</span><span id=""_COMPSCI406444"">NoSQL</span><span id=""_COMPSCI406445"">)</span><span id=""_COMPSCI406446"">&nbsp;cloud </span><span id=""_COMPSCI406447"">data </span><span id=""_COMPSCI406448"">storage systems and the ability to enrich these systems with additional functionality.</span></p><h2>ilo</h2><p id=""_COMPSCI406450""><span id=""_COMPSCI406451"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI406452""><span id=""_COMPSCI406453"">1. </span><span id=""_COMPSCI406454"">Design</span><span id=""_COMPSCI406455"">,</span><span id=""_COMPSCI406456"">&nbsp;employ </span><span id=""_COMPSCI406457"">and evaluate </span><span id=""_COMPSCI406458"">programs to access big data repositories in a massively parallel manner</span><span id=""_COMPSCI406459"">;</span></p><p id=""_COMPSCI406460""><span id=""_COMPSCI406461"">2. </span><span id=""_COMPSCI406462"">D</span><span id=""_COMPSCI406463"">escribe and </span><span id=""_COMPSCI406464"">contrast</span><span id=""_COMPSCI406465"">&nbsp;the internals of the design and implementation</span><span id=""_COMPSCI406466"">&nbsp;of current cloud </span><span id=""_COMPSCI406467"">data storage </span><span id=""_COMPSCI406468"">and processing </span><span id=""_COMPSCI406469"">systems; </span></p><p id=""_COMPSCI406470""><span id=""_COMPSCI406471"">3. </span><span id=""_COMPSCI406472"">Identify and discuss </span><span id=""_COMPSCI406473"">issues related to the scalability and efficiency challenges when processing complex queries</span><span id=""_COMPSCI406474"">/algorithms</span><span id=""_COMPSCI406475"">&nbsp;against big data systems</span><span id=""_COMPSCI406476"">, and propose ways of addressing said challenges;</span></p><p id=""_COMPSCI406477""><span id=""_COMPSCI406478"">4. </span><span id=""_COMPSCI406479"">D</span><span id=""_COMPSCI406480"">emonstrate that they have mastered the required background knowledge to pursue graduate studies in the fields of cloud systems and big data.</span></p>","Big Data: Systems, Programming, and Management (H) COMPSCI4064","<p id=""_COMPSCI40640""><span id=""_COMPSCI40641"">Big Da</span><span id=""_COMPSCI40642"">ta is nowadays manifested in a </span><span id=""_COMPSCI40643"">very large number of environments and application fields pertaining to our education, entertainment, health, public governance, enterprising, etc. The course will endow students with the understanding of the new challenges big data introduces and the currently available solutions. These include (i) challenges pertaining to the modelling, accessing, and storing of big data, (ii) an understanding of the fundamentals of systems designed to store and access big data, and (iii) programming paradigms for efficient scalable access to big data.</span></p>","<p id=""_COMPSCI406427""><span id=""_COMPSCI406428"">The course aims to endow students with:</span></p><p id=""_COMPSCI406429""><span id=""_COMPSCI406430"">An understanding of the new challenges posed by the advent for big data, as they refer to its modelling, storage, and access, paying particular emphasis on the impact of the desiderata of scalability and efficiency in big data infrastructures.</span></p><p id=""_COMPSCI406431""><span id=""_COMPSCI406432"">Exposure to a number of different cloud </span><span id=""_COMPSCI406433"">data stores</span><span id=""_COMPSCI406434"">&nbsp;and their design and implementation details, showing how they can achieve efficiency and scalability, while also addressing design trade-offs and their impacts.</span></p><p id=""_COMPSCI406435""><span id=""_COMPSCI406436"">Familiarity with </span><span id=""_COMPSCI406437"">modern </span><span id=""_COMPSCI406438"">programming paradigm</span><span id=""_COMPSCI406439"">s (e.g., MapReduce, RDDs, etc.)</span><span id=""_COMPSCI406440"">, so to enable them to write programs which can execute in massively parallel infrastructures in the cloud.</span></p><p id=""_COMPSCI406441""><span id=""_COMPSCI406442"">The ability to understand the internals of </span><span id=""_COMPSCI406443"">(</span><span id=""_COMPSCI406444"">NoSQL</span><span id=""_COMPSCI406445"">)</span><span id=""_COMPSCI406446"">&nbsp;cloud </span><span id=""_COMPSCI406447"">data </span><span id=""_COMPSCI406448"">storage systems and the ability to enrich these systems with additional functionality.</span></p>","<p id=""_COMPSCI406450""><span id=""_COMPSCI406451"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI406452""><span id=""_COMPSCI406453"">1. </span><span id=""_COMPSCI406454"">Design</span><span id=""_COMPSCI406455"">,</span><span id=""_COMPSCI406456"">&nbsp;employ </span><span id=""_COMPSCI406457"">and evaluate </span><span id=""_COMPSCI406458"">programs to access big data repositories in a massively parallel manner</span><span id=""_COMPSCI406459"">;</span></p><p id=""_COMPSCI406460""><span id=""_COMPSCI406461"">2. </span><span id=""_COMPSCI406462"">D</span><span id=""_COMPSCI406463"">escribe and </span><span id=""_COMPSCI406464"">contrast</span><span id=""_COMPSCI406465"">&nbsp;the internals of the design and implementation</span><span id=""_COMPSCI406466"">&nbsp;of current cloud </span><span id=""_COMPSCI406467"">data storage </span><span id=""_COMPSCI406468"">and processing </span><span id=""_COMPSCI406469"">systems; </span></p><p id=""_COMPSCI406470""><span id=""_COMPSCI406471"">3. </span><span id=""_COMPSCI406472"">Identify and discuss </span><span id=""_COMPSCI406473"">issues related to the scalability and efficiency challenges when processing complex queries</span><span id=""_COMPSCI406474"">/algorithms</span><span id=""_COMPSCI406475"">&nbsp;against big data systems</span><span id=""_COMPSCI406476"">, and propose ways of addressing said challenges;</span></p><p id=""_COMPSCI406477""><span id=""_COMPSCI406478"">4. </span><span id=""_COMPSCI406479"">D</span><span id=""_COMPSCI406480"">emonstrate that they have mastered the required background knowledge to pursue graduate studies in the fields of cloud systems and big data.</span></p>"
Glasgow_Scotland,COMPSCI4094,"<h2>title</h2>Coaching Software Teams (H) COMPSCI4094<h2>summary</h2><p id=""_COMPSCI40940""><span id=""_COMPSCI40941"">This course gives students the opportunity to learn and practice principles, practices and methods used in coaching Software Engineering teams.  The course is intended for students who have experience of software development through a summer internship or similar. The course covers interpersonal and management skills that are needed for mentoring and leading teams of software developers. The course focuses on whole-team coaching and how to introduce and embed software engineering practices in existing teams. The course is delivered in collaboration with an established software industry partner (JP Morgan).</span></p><h2>content</h2><p id=""_COMPSCI409431""><span id=""_COMPSCI409432"">To introduce advanced principles, practices and methods used in whole-team coaching of Software Engineering teams.</span></p><p id=""_COMPSCI409433""><span id=""_COMPSCI409434"">To introduce techniques for effective working in software teams in a mentoring role, </span></p><p id=""_COMPSCI409435""><span id=""_COMPSCI409436"">To expose students to the practicalities and reality of software engineering in industry.</span></p><h2>ilo</h2><p id=""_COMPSCI409437""><span id=""_COMPSCI409438"">By the end of this course students will be able to:</span><span id=""_COMPSCI409439"">&nbsp;</span></p><p id=""_COMPSCI409440""><span id=""_COMPSCI409441"">1. </span><span id=""_COMPSCI409442"">Explain a range of advanced practices in large-scale collaborative software engineering including agile project management, stakeholder management, user research and product discovery;</span></p><p id=""_COMPSCI409443""><span id=""_COMPSCI409444"">2. </span><span id=""_COMPSCI409445"">Apply and adapt mentoring techniques for working with less experienced colleagues;</span></p><p id=""_COMPSCI409446""><span id=""_COMPSCI409447"">3. </span><span id=""_COMPSCI409448"">Identify, plan, implement and evaluate improvements to team software processes;</span></p><p id=""_COMPSCI409449""><span id=""_COMPSCI409450"">4. </span><span id=""_COMPSCI409451"">Be aware of the limitations of existing software engineering practices in large scale systems development.</span></p>",Coaching Software Teams (H) COMPSCI4094,"<p id=""_COMPSCI40940""><span id=""_COMPSCI40941"">This course gives students the opportunity to learn and practice principles, practices and methods used in coaching Software Engineering teams.  The course is intended for students who have experience of software development through a summer internship or similar. The course covers interpersonal and management skills that are needed for mentoring and leading teams of software developers. The course focuses on whole-team coaching and how to introduce and embed software engineering practices in existing teams. The course is delivered in collaboration with an established software industry partner (JP Morgan).</span></p>","<p id=""_COMPSCI409431""><span id=""_COMPSCI409432"">To introduce advanced principles, practices and methods used in whole-team coaching of Software Engineering teams.</span></p><p id=""_COMPSCI409433""><span id=""_COMPSCI409434"">To introduce techniques for effective working in software teams in a mentoring role, </span></p><p id=""_COMPSCI409435""><span id=""_COMPSCI409436"">To expose students to the practicalities and reality of software engineering in industry.</span></p>","<p id=""_COMPSCI409437""><span id=""_COMPSCI409438"">By the end of this course students will be able to:</span><span id=""_COMPSCI409439"">&nbsp;</span></p><p id=""_COMPSCI409440""><span id=""_COMPSCI409441"">1. </span><span id=""_COMPSCI409442"">Explain a range of advanced practices in large-scale collaborative software engineering including agile project management, stakeholder management, user research and product discovery;</span></p><p id=""_COMPSCI409443""><span id=""_COMPSCI409444"">2. </span><span id=""_COMPSCI409445"">Apply and adapt mentoring techniques for working with less experienced colleagues;</span></p><p id=""_COMPSCI409446""><span id=""_COMPSCI409447"">3. </span><span id=""_COMPSCI409448"">Identify, plan, implement and evaluate improvements to team software processes;</span></p><p id=""_COMPSCI409449""><span id=""_COMPSCI409450"">4. </span><span id=""_COMPSCI409451"">Be aware of the limitations of existing software engineering practices in large scale systems development.</span></p>"
Glasgow_Scotland,COMPSCI4080,"<h2>title</h2>Computational Social Intelligence (H) COMPSCI4080<h2>summary</h2><p id=""_COMPSCI40800""><span id=""_COMPSCI40801"">The course introduces the core methodologies behind automatic approaches </span><span id=""_COMPSCI40802"">aimed at making</span><span id=""_COMPSCI40803"">&nbsp;sense of social and psychological aspects of human behaviour. </span><span id=""_COMPSCI40804"">In particular, the course shows 1) how to design and organise the observation of human behaviour in view of the application of automatic approaches, 2) how to apply psychometric instruments for the quantitative analysis of social and psychological phenomena, and 3) how to apply basic statistical techniques</span><span id=""_COMPSCI40805"">&nbsp;to human behaviour analysis and understanding</span><span id=""_COMPSCI40806"">. The course is interdisciplinary and it requires the acquisition of both computing and </span><span id=""_COMPSCI40807"">social </span><span id=""_COMPSCI40808"">psychological notions.</span><span id=""_COMPSCI40809"">&nbsp;</span><span id=""_COMPSCI408010"">The application areas to which the course is relevant include, </span><span id=""_COMPSCI408011"">e.g.</span><span id=""_COMPSCI408012"">, social robotics, user experience analysis, social media analytics, surveillance </span><span id=""_COMPSCI408013"">and</span><span id=""_COMPSCI408014"">&nbsp;e-health</span><span id=""_COMPSCI408015"">&nbsp;(the list is not exhaustive)</span><span id=""_COMPSCI408016"">.</span></p><h2>content</h2><p id=""_COMPSCI408033""><span id=""_COMPSCI408034"">The aim of the course is to introduce the students to the main computational methodologies </span><span id=""_COMPSCI408035"">for automatic</span><span id=""_COMPSCI408036"">&nbsp;</span><span id=""_COMPSCI408037"">analysis </span><span id=""_COMPSCI408038"">of human behaviour. </span><span id=""_COMPSCI408039"">In particular the course teaches how to design and organise the observation of human behaviour in view </span><span id=""_COMPSCI408040"">of the application of </span><span id=""_COMPSCI408041"">computational approaches</span><span id=""_COMPSCI408042"">. Furthermore, it shows how to quantify social and psychological phenomena through the </span><span id=""_COMPSCI408043"">application</span><span id=""_COMPSCI408044"">&nbsp;of </span><span id=""_COMPSCI408045"">standard psychometric questionnaires. Finally, it introduces basic methodologies - based on machine learning and statistics - aimed at mapping beh</span><span id=""_COMPSCI408046"">avioural observations into high-</span><span id=""_COMPSCI408047"">level interpretations of human behaviour</span><span id=""_COMPSCI408048"">&nbsp;that take into account social and psychological </span><span id=""_COMPSCI408049"">aspects of human-human and human-machine interactions</span><span id=""_COMPSCI408050"">.</span></p><h2>ilo</h2><p id=""_COMPSCI408052""><span id=""_COMPSCI408053"">By the end</span><span id=""_COMPSCI408054"">&nbsp;of this </span><span id=""_COMPSCI408055"">course, the students will be </span><span id=""_COMPSCI408056"">able to:</span></p><p id=""_COMPSCI408057""><span id=""_COMPSCI408058"">1. </span><span id=""_COMPSCI408059"">Design and organise the collection of behavioural data in view of the application of statistical and computational methodologies</span><span id=""_COMPSCI408060"">&nbsp;for human behaviour understanding</span><span id=""_COMPSCI408061"">;</span></p><p id=""_COMPSCI408062""><span id=""_COMPSCI408063"">2. </span><span id=""_COMPSCI408064"">Measure social and psychological </span><span id=""_COMPSCI408065"">constructs</span><span id=""_COMPSCI408066"">&nbsp;- in quantitative terms - through the adoption of standard psychometric questionnaires;</span><span id=""_COMPSCI408067"">&nbsp;</span></p><p id=""_COMPSCI408068""><span id=""_COMPSCI408069"">3. </span><span id=""_COMPSCI408070"">Apply </span><span id=""_COMPSCI408071"">basic </span><span id=""_COMPSCI408072"">statistical methodologies (</span><span id=""_COMPSCI408073"">e.g., </span><span id=""_COMPSCI408074"">k-Means and Naïve Bayes Classifier) to </span><span id=""_COMPSCI408075"">automatically </span><span id=""_COMPSCI408076"">map behavioural observations into social and psychological constructs.</span></p>",Computational Social Intelligence (H) COMPSCI4080,"<p id=""_COMPSCI40800""><span id=""_COMPSCI40801"">The course introduces the core methodologies behind automatic approaches </span><span id=""_COMPSCI40802"">aimed at making</span><span id=""_COMPSCI40803"">&nbsp;sense of social and psychological aspects of human behaviour. </span><span id=""_COMPSCI40804"">In particular, the course shows 1) how to design and organise the observation of human behaviour in view of the application of automatic approaches, 2) how to apply psychometric instruments for the quantitative analysis of social and psychological phenomena, and 3) how to apply basic statistical techniques</span><span id=""_COMPSCI40805"">&nbsp;to human behaviour analysis and understanding</span><span id=""_COMPSCI40806"">. The course is interdisciplinary and it requires the acquisition of both computing and </span><span id=""_COMPSCI40807"">social </span><span id=""_COMPSCI40808"">psychological notions.</span><span id=""_COMPSCI40809"">&nbsp;</span><span id=""_COMPSCI408010"">The application areas to which the course is relevant include, </span><span id=""_COMPSCI408011"">e.g.</span><span id=""_COMPSCI408012"">, social robotics, user experience analysis, social media analytics, surveillance </span><span id=""_COMPSCI408013"">and</span><span id=""_COMPSCI408014"">&nbsp;e-health</span><span id=""_COMPSCI408015"">&nbsp;(the list is not exhaustive)</span><span id=""_COMPSCI408016"">.</span></p>","<p id=""_COMPSCI408033""><span id=""_COMPSCI408034"">The aim of the course is to introduce the students to the main computational methodologies </span><span id=""_COMPSCI408035"">for automatic</span><span id=""_COMPSCI408036"">&nbsp;</span><span id=""_COMPSCI408037"">analysis </span><span id=""_COMPSCI408038"">of human behaviour. </span><span id=""_COMPSCI408039"">In particular the course teaches how to design and organise the observation of human behaviour in view </span><span id=""_COMPSCI408040"">of the application of </span><span id=""_COMPSCI408041"">computational approaches</span><span id=""_COMPSCI408042"">. Furthermore, it shows how to quantify social and psychological phenomena through the </span><span id=""_COMPSCI408043"">application</span><span id=""_COMPSCI408044"">&nbsp;of </span><span id=""_COMPSCI408045"">standard psychometric questionnaires. Finally, it introduces basic methodologies - based on machine learning and statistics - aimed at mapping beh</span><span id=""_COMPSCI408046"">avioural observations into high-</span><span id=""_COMPSCI408047"">level interpretations of human behaviour</span><span id=""_COMPSCI408048"">&nbsp;that take into account social and psychological </span><span id=""_COMPSCI408049"">aspects of human-human and human-machine interactions</span><span id=""_COMPSCI408050"">.</span></p>","<p id=""_COMPSCI408052""><span id=""_COMPSCI408053"">By the end</span><span id=""_COMPSCI408054"">&nbsp;of this </span><span id=""_COMPSCI408055"">course, the students will be </span><span id=""_COMPSCI408056"">able to:</span></p><p id=""_COMPSCI408057""><span id=""_COMPSCI408058"">1. </span><span id=""_COMPSCI408059"">Design and organise the collection of behavioural data in view of the application of statistical and computational methodologies</span><span id=""_COMPSCI408060"">&nbsp;for human behaviour understanding</span><span id=""_COMPSCI408061"">;</span></p><p id=""_COMPSCI408062""><span id=""_COMPSCI408063"">2. </span><span id=""_COMPSCI408064"">Measure social and psychological </span><span id=""_COMPSCI408065"">constructs</span><span id=""_COMPSCI408066"">&nbsp;- in quantitative terms - through the adoption of standard psychometric questionnaires;</span><span id=""_COMPSCI408067"">&nbsp;</span></p><p id=""_COMPSCI408068""><span id=""_COMPSCI408069"">3. </span><span id=""_COMPSCI408070"">Apply </span><span id=""_COMPSCI408071"">basic </span><span id=""_COMPSCI408072"">statistical methodologies (</span><span id=""_COMPSCI408073"">e.g., </span><span id=""_COMPSCI408074"">k-Means and Naïve Bayes Classifier) to </span><span id=""_COMPSCI408075"">automatically </span><span id=""_COMPSCI408076"">map behavioural observations into social and psychological constructs.</span></p>"
Glasgow_Scotland,COMPSCI4007,"<h2>title</h2>Computer Architecture (H) COMPSCI4007<h2>summary</h2><p id=""_COMPSCI40070""><span id=""_COMPSCI40071"">The course explains in depth how a computer works, by developing a digital circuit that implements an instruction set architecture.  Topics include cache, virtual memory, support by the architecture for the operating system, and instruction level parallelism.</span></p><h2>content</h2><p id=""_COMPSCI400725""><span id=""_COMPSCI400726"">This course provides a working understanding of the fundamental principles of computer systems.  It answers the question ""How do computers work?"" at a substantive level, as well as giving a foundation needed for other areas in computer systems.  The course reviews the behaviour of digital circuits and introduces a functional hardware description language for specifying and simulating synchronous circuits.  Using the hardware description language, a complete and precise design of </span><span id=""_COMPSCI400727"">a simple</span><span id=""_COMPSCI400728"">&nbsp;but realistic computer architecture is developed.  Advanced topics include the memory system, pipelining, superscalar organisation, and interaction between the architecture and operating system, and the use of formal methods in hardware design.  Current trends are introduced, in particular parallelism and reconfigurable computing.</span></p><h2>ilo</h2><p id=""_COMPSCI400730""><span id=""_COMPSCI400731"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI400732""><span id=""_COMPSCI400733"">1. </span><span id=""_COMPSCI400734"">Demonstrate understanding of a processor </span><span id=""_COMPSCI400735"">datapath</span><span id=""_COMPSCI400736"">&nbsp;design, and be able to derive the control signal settings required to make the </span><span id=""_COMPSCI400737"">datapath</span><span id=""_COMPSCI400738"">&nbsp;perform an operation;</span></p><p id=""_COMPSCI400739""><span id=""_COMPSCI400740"">2. </span><span id=""_COMPSCI400741"">Implement the </span><span id=""_COMPSCI400742"">datapath</span><span id=""_COMPSCI400743"">&nbsp;and the control as digital circuits;</span></p><p id=""_COMPSCI400744""><span id=""_COMPSCI400745"">3. </span><span id=""_COMPSCI400746"">Use simulation to explore properties of a processor circuit;</span></p><p id=""_COMPSCI400747""><span id=""_COMPSCI400748"">4. </span><span id=""_COMPSCI400749"">Analyse the behaviour of a processor pipeline as the processor executes various sequences of instructions;</span></p><p id=""_COMPSCI400750""><span id=""_COMPSCI400751"">5. </span><span id=""_COMPSCI400752"">Predict</span><span id=""_COMPSCI400753"">&nbsp;the impact of the memory hierarchy on system performance;</span></p><p id=""_COMPSCI400754""><span id=""_COMPSCI400755"">6. </span><span id=""_COMPSCI400756"">Describe how the operating system utilizes the architecture's support </span><span id=""_COMPSCI400757"">in order to</span><span id=""_COMPSCI400758"">&nbsp;provide processes, protection, virtual memory, and input/output;</span></p><p id=""_COMPSCI400759""><span id=""_COMPSCI400760"">7. </span><span id=""_COMPSCI400761"">Discuss the role of parallelism in current and future architectures.</span></p>",Computer Architecture (H) COMPSCI4007,"<p id=""_COMPSCI40070""><span id=""_COMPSCI40071"">The course explains in depth how a computer works, by developing a digital circuit that implements an instruction set architecture.  Topics include cache, virtual memory, support by the architecture for the operating system, and instruction level parallelism.</span></p>","<p id=""_COMPSCI400725""><span id=""_COMPSCI400726"">This course provides a working understanding of the fundamental principles of computer systems.  It answers the question ""How do computers work?"" at a substantive level, as well as giving a foundation needed for other areas in computer systems.  The course reviews the behaviour of digital circuits and introduces a functional hardware description language for specifying and simulating synchronous circuits.  Using the hardware description language, a complete and precise design of </span><span id=""_COMPSCI400727"">a simple</span><span id=""_COMPSCI400728"">&nbsp;but realistic computer architecture is developed.  Advanced topics include the memory system, pipelining, superscalar organisation, and interaction between the architecture and operating system, and the use of formal methods in hardware design.  Current trends are introduced, in particular parallelism and reconfigurable computing.</span></p>","<p id=""_COMPSCI400730""><span id=""_COMPSCI400731"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI400732""><span id=""_COMPSCI400733"">1. </span><span id=""_COMPSCI400734"">Demonstrate understanding of a processor </span><span id=""_COMPSCI400735"">datapath</span><span id=""_COMPSCI400736"">&nbsp;design, and be able to derive the control signal settings required to make the </span><span id=""_COMPSCI400737"">datapath</span><span id=""_COMPSCI400738"">&nbsp;perform an operation;</span></p><p id=""_COMPSCI400739""><span id=""_COMPSCI400740"">2. </span><span id=""_COMPSCI400741"">Implement the </span><span id=""_COMPSCI400742"">datapath</span><span id=""_COMPSCI400743"">&nbsp;and the control as digital circuits;</span></p><p id=""_COMPSCI400744""><span id=""_COMPSCI400745"">3. </span><span id=""_COMPSCI400746"">Use simulation to explore properties of a processor circuit;</span></p><p id=""_COMPSCI400747""><span id=""_COMPSCI400748"">4. </span><span id=""_COMPSCI400749"">Analyse the behaviour of a processor pipeline as the processor executes various sequences of instructions;</span></p><p id=""_COMPSCI400750""><span id=""_COMPSCI400751"">5. </span><span id=""_COMPSCI400752"">Predict</span><span id=""_COMPSCI400753"">&nbsp;the impact of the memory hierarchy on system performance;</span></p><p id=""_COMPSCI400754""><span id=""_COMPSCI400755"">6. </span><span id=""_COMPSCI400756"">Describe how the operating system utilizes the architecture's support </span><span id=""_COMPSCI400757"">in order to</span><span id=""_COMPSCI400758"">&nbsp;provide processes, protection, virtual memory, and input/output;</span></p><p id=""_COMPSCI400759""><span id=""_COMPSCI400760"">7. </span><span id=""_COMPSCI400761"">Discuss the role of parallelism in current and future architectures.</span></p>"
Glasgow_Scotland,COMPSCI4066,"<h2>title</h2>Computer Vision Methods and Applications (H) COMPSCI4066<h2>summary</h2><p id=""_COMPSCI40660""></p><p id=""_COMPSCI40661""><span id=""_COMPSCI40662"">The Computer Vision Methods and Applications (CVMA) course is intended to equip students with the necessary theoretical and practical understanding of image processing and computer vision techniques to enable them to meet the challenges of</span><span id=""_COMPSCI40663"">&nbsp;</span><span id=""_COMPSCI40664"">building advanced image-based applications. Examples of potential vision-based applications include: </span><span id=""_COMPSCI40665"">image understanding in </span><span id=""_COMPSCI40666"">mobile devices (cameras, phones, tablet computers etc.), robot vision systems, autonomous vehicle guidance and road monitoring, driver attention monitoring, image database query systems, creative media production</span><span id=""_COMPSCI40667"">&nbsp;tools</span><span id=""_COMPSCI40668"">, interactive gaming, augmented reality and visual biometrics</span><span id=""_COMPSCI40669"">, forensic image analysis, security and surveillance, </span><span id=""_COMPSCI406610"">and medical imaging. </span><span id=""_COMPSCI406611"">The course will focus on the application of recent advances in Computer Vision techniques that underpin a wide variety of systems and products based on methods such as:</span><span id=""_COMPSCI406612"">&nbsp;face detection,</span><span id=""_COMPSCI406613"">&nbsp;object recognition, tracking, segmentation and 3D imaging.</span></p><h2>content</h2><p id=""_COMPSCI406643""><span id=""_COMPSCI406644"">■&nbsp;</span><span id=""_COMPSCI406645"">To provide a theoretical and practical understanding of 2D and 3D visual perception based on current image analysis techniques and currently available vision software libraries.</span></p><p id=""_COMPSCI406646""><span id=""_COMPSCI406647"">■&nbsp;</span><span id=""_COMPSCI406648"">To equip the student with the ability to tackle the practical aspects of developing algorithms for vision-based applications as listed above</span><span id=""_COMPSCI406649"">&nbsp;(section 13)</span><span id=""_COMPSCI406650"">. Therefore, CVMA will provide the student with the basic tools to undertake Level 4 and Masters projects that require vision to be applied within in these related disciplines. </span></p><p id=""_COMPSCI406651""><span id=""_COMPSCI406652"">■&nbsp;</span><span id=""_COMPSCI406653"">To prepare the student for a career in Industry as a Computer Vision specialist in areas such as Research &amp; Development, Technical Marketing and Intellectual Property Management; or for an Academic career, e.g. PhD research or Research Assistantship.</span></p><h2>ilo</h2><p id=""_COMPSCI406655""><span id=""_COMPSCI406656"">By the end of the course students </span><span id=""_COMPSCI406657"">will </span><span id=""_COMPSCI406658"">be able to: </span></p><p id=""_COMPSCI406659""><span id=""_COMPSCI406660"">1. </span><span id=""_COMPSCI406661"">Analyse</span><span id=""_COMPSCI406662"">&nbsp;critically computer vision algorithms and applications based on knowledge of image representation, image formation and basic processing techniques;</span></p><p id=""_COMPSCI406663""><span id=""_COMPSCI406664"">2. </span><span id=""_COMPSCI406665"">Implement feature extraction and object recognition algorithms;</span></p><p id=""_COMPSCI406666""><span id=""_COMPSCI406667"">3. </span><span id=""_COMPSCI406668"">Critically evaluate the basic geometric concepts in 3D computer vision and employed in recovery of 3D </span><span id=""_COMPSCI406669"">surfaces from stereo-pair images, or motion fields from image sequences;</span></p><p id=""_COMPSCI406670""><span id=""_COMPSCI406671"">4. </span><span id=""_COMPSCI406672"">Demonstrate the ability to apply the rudiments of information theory and basic image compression </span><span id=""_COMPSCI406673"">&nbsp;                                   </span><span id=""_COMPSCI406674"">techniques to the design of image coding/decoding algorithms;</span></p><p id=""_COMPSCI406675""><span id=""_COMPSCI406676"">5. </span><span id=""_COMPSCI406677"">Demonstrate competence in the use of the </span><span id=""_COMPSCI406678"">programming languages for vision-based applications prototyping.  Demonstrate competence in the application of the key current image analysis libraries.</span></p>",Computer Vision Methods and Applications (H) COMPSCI4066,"<p id=""_COMPSCI40660""></p><p id=""_COMPSCI40661""><span id=""_COMPSCI40662"">The Computer Vision Methods and Applications (CVMA) course is intended to equip students with the necessary theoretical and practical understanding of image processing and computer vision techniques to enable them to meet the challenges of</span><span id=""_COMPSCI40663"">&nbsp;</span><span id=""_COMPSCI40664"">building advanced image-based applications. Examples of potential vision-based applications include: </span><span id=""_COMPSCI40665"">image understanding in </span><span id=""_COMPSCI40666"">mobile devices (cameras, phones, tablet computers etc.), robot vision systems, autonomous vehicle guidance and road monitoring, driver attention monitoring, image database query systems, creative media production</span><span id=""_COMPSCI40667"">&nbsp;tools</span><span id=""_COMPSCI40668"">, interactive gaming, augmented reality and visual biometrics</span><span id=""_COMPSCI40669"">, forensic image analysis, security and surveillance, </span><span id=""_COMPSCI406610"">and medical imaging. </span><span id=""_COMPSCI406611"">The course will focus on the application of recent advances in Computer Vision techniques that underpin a wide variety of systems and products based on methods such as:</span><span id=""_COMPSCI406612"">&nbsp;face detection,</span><span id=""_COMPSCI406613"">&nbsp;object recognition, tracking, segmentation and 3D imaging.</span></p>","<p id=""_COMPSCI406643""><span id=""_COMPSCI406644"">■&nbsp;</span><span id=""_COMPSCI406645"">To provide a theoretical and practical understanding of 2D and 3D visual perception based on current image analysis techniques and currently available vision software libraries.</span></p><p id=""_COMPSCI406646""><span id=""_COMPSCI406647"">■&nbsp;</span><span id=""_COMPSCI406648"">To equip the student with the ability to tackle the practical aspects of developing algorithms for vision-based applications as listed above</span><span id=""_COMPSCI406649"">&nbsp;(section 13)</span><span id=""_COMPSCI406650"">. Therefore, CVMA will provide the student with the basic tools to undertake Level 4 and Masters projects that require vision to be applied within in these related disciplines. </span></p><p id=""_COMPSCI406651""><span id=""_COMPSCI406652"">■&nbsp;</span><span id=""_COMPSCI406653"">To prepare the student for a career in Industry as a Computer Vision specialist in areas such as Research &amp; Development, Technical Marketing and Intellectual Property Management; or for an Academic career, e.g. PhD research or Research Assistantship.</span></p>","<p id=""_COMPSCI406655""><span id=""_COMPSCI406656"">By the end of the course students </span><span id=""_COMPSCI406657"">will </span><span id=""_COMPSCI406658"">be able to: </span></p><p id=""_COMPSCI406659""><span id=""_COMPSCI406660"">1. </span><span id=""_COMPSCI406661"">Analyse</span><span id=""_COMPSCI406662"">&nbsp;critically computer vision algorithms and applications based on knowledge of image representation, image formation and basic processing techniques;</span></p><p id=""_COMPSCI406663""><span id=""_COMPSCI406664"">2. </span><span id=""_COMPSCI406665"">Implement feature extraction and object recognition algorithms;</span></p><p id=""_COMPSCI406666""><span id=""_COMPSCI406667"">3. </span><span id=""_COMPSCI406668"">Critically evaluate the basic geometric concepts in 3D computer vision and employed in recovery of 3D </span><span id=""_COMPSCI406669"">surfaces from stereo-pair images, or motion fields from image sequences;</span></p><p id=""_COMPSCI406670""><span id=""_COMPSCI406671"">4. </span><span id=""_COMPSCI406672"">Demonstrate the ability to apply the rudiments of information theory and basic image compression </span><span id=""_COMPSCI406673"">&nbsp;                                   </span><span id=""_COMPSCI406674"">techniques to the design of image coding/decoding algorithms;</span></p><p id=""_COMPSCI406675""><span id=""_COMPSCI406676"">5. </span><span id=""_COMPSCI406677"">Demonstrate competence in the use of the </span><span id=""_COMPSCI406678"">programming languages for vision-based applications prototyping.  Demonstrate competence in the application of the key current image analysis libraries.</span></p>"
Glasgow_Scotland,COMPSCI4013,"<h2>title</h2>Database Systems (H) COMPSCI4013<h2>summary</h2><p id=""_COMPSCI40130""><span id=""_COMPSCI40131"">From the basic skills derived in CS</span><span id=""_COMPSCI40132"">1F</span><span id=""_COMPSCI40133"">, to develop the software engineering and database administration skills required for designing, creating, running and developing a relational database application and its associated application software suite. </span></p><p id=""_COMPSCI40134""><span id=""_COMPSCI40135"">Understanding of how conventional programming languages </span><span id=""_COMPSCI40136"">(e.g., Java/JDBC) </span><span id=""_COMPSCI40137"">interact with databases;</span></p><p id=""_COMPSCI40138""><span id=""_COMPSCI40139"">Understanding of the fundamental concepts, functional dependency and normalization theories and methods of the relational data model;</span></p><p id=""_COMPSCI401310""><span id=""_COMPSCI401311"">Understanding the principles of database indexing, file structures, hash-based file structures, tree-based indexes;</span></p><p id=""_COMPSCI401312""><span id=""_COMPSCI401313"">Understanding the cost-based query optimization methods;</span></p><p id=""_COMPSCI401314""><span id=""_COMPSCI401315"">Understanding the principles of selection selectivity and joint selectivity using histograms in query optimization;</span></p><p id=""_COMPSCI401316""><span id=""_COMPSCI401317"">Introduction to data analytics tasks and advanced methods &amp; techniques.</span></p><h2>content</h2><p id=""_COMPSCI401355""><span id=""_COMPSCI401356"">From the basic skills derived in CS1</span><span id=""_COMPSCI401357"">F</span><span id=""_COMPSCI401358"">, to develop the software engineering and database administration skills required for designing, creating, running and developing a relational database application and its associated application software suite. </span></p><p id=""_COMPSCI401359""><span id=""_COMPSCI401360"">Understanding of how conventional programming languages interact with databases;</span></p><p id=""_COMPSCI401361""><span id=""_COMPSCI401362"">Understanding of the fundamental concepts, functional dependency and normalization theories and methods of the relational data model;</span></p><p id=""_COMPSCI401363""><span id=""_COMPSCI401364"">Understanding the principles of database indexing, file structures, hash-based file structures, tree-based indexes;</span></p><p id=""_COMPSCI401365""><span id=""_COMPSCI401366"">Understanding the cost-based query optimization methods;</span></p><p id=""_COMPSCI401367""><span id=""_COMPSCI401368"">Understanding the principles of selection selectivity and joint selectivity using histograms in query optimization;</span></p><p id=""_COMPSCI401369""><span id=""_COMPSCI401370"">Introduction to data analytics tasks and advanced methods &amp; techniques.</span></p><h2>ilo</h2><p id=""_COMPSCI401372""><span id=""_COMPSCI401373"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI401374""><span id=""_COMPSCI401375"">1. </span><span id=""_COMPSCI401376"">Demonstrate competence in performing sophisticated queries and updates against an existing RDBMS using most of the advanced features of SQL standard;</span></p><p id=""_COMPSCI401377""><span id=""_COMPSCI401378"">2. </span><span id=""_COMPSCI401379"">Demonstrate skills in designing, writing, changing and testing programs </span><span id=""_COMPSCI401380"">(</span><span id=""_COMPSCI401381"">e.g., Java/JDBC</span><span id=""_COMPSCI401382"">) </span><span id=""_COMPSCI401383"">that use an RDB</span><span id=""_COMPSCI401384"">MS</span><span id=""_COMPSCI401385"">;</span></p><p id=""_COMPSCI401386""><span id=""_COMPSCI401387"">3. </span><span id=""_COMPSCI401388"">Interpret and optimize SQL queries based on the principles of the cost-based query optimization;</span></p><p id=""_COMPSCI401389""><span id=""_COMPSCI401390"">4. </span><span id=""_COMPSCI401391"">Provide an explanation of the database indexing techniques including File Hashing, Search Trees, Multi-level Indexes, B Trees and B+ Trees;</span></p><p id=""_COMPSCI401392""><span id=""_COMPSCI401393"">5. </span><span id=""_COMPSCI401394"">Specify advanced constraints on the DB scheme </span><span id=""_COMPSCI401395"">based on Functional Dependencies &amp; Normalization</span><span id=""_COMPSCI401396"">;</span></p><p id=""_COMPSCI401397""><span id=""_COMPSCI401398"">6. </span><span id=""_COMPSCI401399"">Appreciate </span><span id=""_COMPSCI4013100"">Data analytics and aggregation tasks and t</span><span id=""_COMPSCI4013101"">echniques</span><span id=""_COMPSCI4013102"">;</span></p><p id=""_COMPSCI4013103""><span id=""_COMPSCI4013104"">7. </span><span id=""_COMPSCI4013105"">Provide an explanation of the selection selectivity and join selectivity using histograms for query optimization.</span></p>",Database Systems (H) COMPSCI4013,"<p id=""_COMPSCI40130""><span id=""_COMPSCI40131"">From the basic skills derived in CS</span><span id=""_COMPSCI40132"">1F</span><span id=""_COMPSCI40133"">, to develop the software engineering and database administration skills required for designing, creating, running and developing a relational database application and its associated application software suite. </span></p><p id=""_COMPSCI40134""><span id=""_COMPSCI40135"">Understanding of how conventional programming languages </span><span id=""_COMPSCI40136"">(e.g., Java/JDBC) </span><span id=""_COMPSCI40137"">interact with databases;</span></p><p id=""_COMPSCI40138""><span id=""_COMPSCI40139"">Understanding of the fundamental concepts, functional dependency and normalization theories and methods of the relational data model;</span></p><p id=""_COMPSCI401310""><span id=""_COMPSCI401311"">Understanding the principles of database indexing, file structures, hash-based file structures, tree-based indexes;</span></p><p id=""_COMPSCI401312""><span id=""_COMPSCI401313"">Understanding the cost-based query optimization methods;</span></p><p id=""_COMPSCI401314""><span id=""_COMPSCI401315"">Understanding the principles of selection selectivity and joint selectivity using histograms in query optimization;</span></p><p id=""_COMPSCI401316""><span id=""_COMPSCI401317"">Introduction to data analytics tasks and advanced methods &amp; techniques.</span></p>","<p id=""_COMPSCI401355""><span id=""_COMPSCI401356"">From the basic skills derived in CS1</span><span id=""_COMPSCI401357"">F</span><span id=""_COMPSCI401358"">, to develop the software engineering and database administration skills required for designing, creating, running and developing a relational database application and its associated application software suite. </span></p><p id=""_COMPSCI401359""><span id=""_COMPSCI401360"">Understanding of how conventional programming languages interact with databases;</span></p><p id=""_COMPSCI401361""><span id=""_COMPSCI401362"">Understanding of the fundamental concepts, functional dependency and normalization theories and methods of the relational data model;</span></p><p id=""_COMPSCI401363""><span id=""_COMPSCI401364"">Understanding the principles of database indexing, file structures, hash-based file structures, tree-based indexes;</span></p><p id=""_COMPSCI401365""><span id=""_COMPSCI401366"">Understanding the cost-based query optimization methods;</span></p><p id=""_COMPSCI401367""><span id=""_COMPSCI401368"">Understanding the principles of selection selectivity and joint selectivity using histograms in query optimization;</span></p><p id=""_COMPSCI401369""><span id=""_COMPSCI401370"">Introduction to data analytics tasks and advanced methods &amp; techniques.</span></p>","<p id=""_COMPSCI401372""><span id=""_COMPSCI401373"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI401374""><span id=""_COMPSCI401375"">1. </span><span id=""_COMPSCI401376"">Demonstrate competence in performing sophisticated queries and updates against an existing RDBMS using most of the advanced features of SQL standard;</span></p><p id=""_COMPSCI401377""><span id=""_COMPSCI401378"">2. </span><span id=""_COMPSCI401379"">Demonstrate skills in designing, writing, changing and testing programs </span><span id=""_COMPSCI401380"">(</span><span id=""_COMPSCI401381"">e.g., Java/JDBC</span><span id=""_COMPSCI401382"">) </span><span id=""_COMPSCI401383"">that use an RDB</span><span id=""_COMPSCI401384"">MS</span><span id=""_COMPSCI401385"">;</span></p><p id=""_COMPSCI401386""><span id=""_COMPSCI401387"">3. </span><span id=""_COMPSCI401388"">Interpret and optimize SQL queries based on the principles of the cost-based query optimization;</span></p><p id=""_COMPSCI401389""><span id=""_COMPSCI401390"">4. </span><span id=""_COMPSCI401391"">Provide an explanation of the database indexing techniques including File Hashing, Search Trees, Multi-level Indexes, B Trees and B+ Trees;</span></p><p id=""_COMPSCI401392""><span id=""_COMPSCI401393"">5. </span><span id=""_COMPSCI401394"">Specify advanced constraints on the DB scheme </span><span id=""_COMPSCI401395"">based on Functional Dependencies &amp; Normalization</span><span id=""_COMPSCI401396"">;</span></p><p id=""_COMPSCI401397""><span id=""_COMPSCI401398"">6. </span><span id=""_COMPSCI401399"">Appreciate </span><span id=""_COMPSCI4013100"">Data analytics and aggregation tasks and t</span><span id=""_COMPSCI4013101"">echniques</span><span id=""_COMPSCI4013102"">;</span></p><p id=""_COMPSCI4013103""><span id=""_COMPSCI4013104"">7. </span><span id=""_COMPSCI4013105"">Provide an explanation of the selection selectivity and join selectivity using histograms for query optimization.</span></p>"
Glasgow_Scotland,COMPSCI4082,"<h2>title</h2>Distributed and Parallel Technologies (H) COMPSCI4082<h2>summary</h2><p id=""_COMPSCI40820""><span id=""_COMPSCI40821"">This course aims to develop in students a better understanding of the computing science challenges posed by the dominant highly concurrent architectures. These include engineering scalable and reliable systems. Students will gain both a broad overview of emerging technologies for engineering reliable and scalable systems, together with practical experience using a small number of key technologies for designing, implementing and evaluating scalable parallel systems and reliable distributed systems.</span></p><h2>content</h2><p id=""_COMPSCI408231""><span id=""_COMPSCI408232"">The many</span><span id=""_COMPSCI408233"">&nbsp;</span><span id=""_COMPSCI408234"">core revolution means that almost all </span><span id=""_COMPSCI408235"">hardware platforms contain </span><span id=""_COMPSCI408236"">multiple cores</span><span id=""_COMPSCI408237"">, and that the architectures evolve rapidly as the number of cores increases. </span></p><p id=""_COMPSCI408238"">&nbsp;</p><p id=""_COMPSCI408239""><span id=""_COMPSCI408240"">Software on such platforms</span><span id=""_COMPSCI408241"">&nbsp;must be</span><span id=""_COMPSCI408242"">&nbsp;</span></p><p id=""_COMPSCI408243"">&nbsp;</p><p id=""_COMPSCI408244""><span id=""_COMPSCI408245"">Scalable:</span><span id=""_COMPSCI408246"">&nbsp;emergent computing platforms operate at unprecedented scale, with commodity servers already commonly comprising hundreds of hosts, tens of thousands of cores, and thousands of storage devices.  The trend towards large distributed systems is driven by Moore's law and is powering transformative developments in areas like sensor networks, the Internet of Things, and big data infrastructures and analytics. </span></p><p id=""_COMPSCI408247"">&nbsp;</p><p id=""_COMPSCI408248""><span id=""_COMPSCI408249"">Reliable:</span><span id=""_COMPSCI408250"">&nbsp;systems must tolerate and recover from hardware, software and network failures.  </span><span id=""_COMPSCI408251"">Moreover the semantics of highly concurrent and fault tolerant systems is complex, and specialised techniques are required to reasoning about these systems so as to be confident that they are reliable in the sense of being correct.  </span></p><p id=""_COMPSCI408252"">&nbsp;</p><p id=""_COMPSCI408253""><span id=""_COMPSCI408254"">This course aims to provide both a broad overview of emerging technologies for engineering reliable and scalable systems, together with practical experience using a small number of key technologies for designing, implementing and evaluating scalable parallel systems and reliable distributed systems.</span></p><h2>ilo</h2><p id=""_COMPSCI408256""><span id=""_COMPSCI408257"">By the end of the course students will be able to: </span></p><p id=""_COMPSCI408258""><span id=""_COMPSCI408259"">1. </span><span id=""_COMPSCI408260"">Articulate the key computing science challenges posed by many</span><span id=""_COMPSCI408261"">&nbsp;</span><span id=""_COMPSCI408262"">core architectures, the technologies available to address them</span><span id=""_COMPSCI408263"">, and </span><span id=""_COMPSCI408264"">the challenges of building reliable and scalable systems</span><span id=""_COMPSCI408265"">;</span></p><p id=""_COMPSCI408266""><span id=""_COMPSCI408267"">2. </span><span id=""_COMPSCI408268"">Design and implement simple parallel applications on shared and distributed memory architectures</span><span id=""_COMPSCI408269"">;</span></p><p id=""_COMPSCI408270""><span id=""_COMPSCI408271"">3. </span><span id=""_COMPSCI408272"">Evaluate the scaling properties of simple parallel applications</span><span id=""_COMPSCI408273"">;</span></p><p id=""_COMPSCI408274""><span id=""_COMPSCI408275"">4. </span><span id=""_COMPSCI408276"">Design and implement simple reliable distributed applications, selecting </span><span id=""_COMPSCI408277"">appropriately from various families of algorithm used in distributed systems, based on specific system requirements</span><span id=""_COMPSCI408278"">;</span></p><p id=""_COMPSCI408279""><span id=""_COMPSCI408280"">5. </span><span id=""_COMPSCI408281"">Evaluate the reliability properties of simple distributed applications</span><span id=""_COMPSCI408282"">.</span></p>",Distributed and Parallel Technologies (H) COMPSCI4082,"<p id=""_COMPSCI40820""><span id=""_COMPSCI40821"">This course aims to develop in students a better understanding of the computing science challenges posed by the dominant highly concurrent architectures. These include engineering scalable and reliable systems. Students will gain both a broad overview of emerging technologies for engineering reliable and scalable systems, together with practical experience using a small number of key technologies for designing, implementing and evaluating scalable parallel systems and reliable distributed systems.</span></p>","<p id=""_COMPSCI408231""><span id=""_COMPSCI408232"">The many</span><span id=""_COMPSCI408233"">&nbsp;</span><span id=""_COMPSCI408234"">core revolution means that almost all </span><span id=""_COMPSCI408235"">hardware platforms contain </span><span id=""_COMPSCI408236"">multiple cores</span><span id=""_COMPSCI408237"">, and that the architectures evolve rapidly as the number of cores increases. </span></p><p id=""_COMPSCI408238"">&nbsp;</p><p id=""_COMPSCI408239""><span id=""_COMPSCI408240"">Software on such platforms</span><span id=""_COMPSCI408241"">&nbsp;must be</span><span id=""_COMPSCI408242"">&nbsp;</span></p><p id=""_COMPSCI408243"">&nbsp;</p><p id=""_COMPSCI408244""><span id=""_COMPSCI408245"">Scalable:</span><span id=""_COMPSCI408246"">&nbsp;emergent computing platforms operate at unprecedented scale, with commodity servers already commonly comprising hundreds of hosts, tens of thousands of cores, and thousands of storage devices.  The trend towards large distributed systems is driven by Moore's law and is powering transformative developments in areas like sensor networks, the Internet of Things, and big data infrastructures and analytics. </span></p><p id=""_COMPSCI408247"">&nbsp;</p><p id=""_COMPSCI408248""><span id=""_COMPSCI408249"">Reliable:</span><span id=""_COMPSCI408250"">&nbsp;systems must tolerate and recover from hardware, software and network failures.  </span><span id=""_COMPSCI408251"">Moreover the semantics of highly concurrent and fault tolerant systems is complex, and specialised techniques are required to reasoning about these systems so as to be confident that they are reliable in the sense of being correct.  </span></p><p id=""_COMPSCI408252"">&nbsp;</p><p id=""_COMPSCI408253""><span id=""_COMPSCI408254"">This course aims to provide both a broad overview of emerging technologies for engineering reliable and scalable systems, together with practical experience using a small number of key technologies for designing, implementing and evaluating scalable parallel systems and reliable distributed systems.</span></p>","<p id=""_COMPSCI408256""><span id=""_COMPSCI408257"">By the end of the course students will be able to: </span></p><p id=""_COMPSCI408258""><span id=""_COMPSCI408259"">1. </span><span id=""_COMPSCI408260"">Articulate the key computing science challenges posed by many</span><span id=""_COMPSCI408261"">&nbsp;</span><span id=""_COMPSCI408262"">core architectures, the technologies available to address them</span><span id=""_COMPSCI408263"">, and </span><span id=""_COMPSCI408264"">the challenges of building reliable and scalable systems</span><span id=""_COMPSCI408265"">;</span></p><p id=""_COMPSCI408266""><span id=""_COMPSCI408267"">2. </span><span id=""_COMPSCI408268"">Design and implement simple parallel applications on shared and distributed memory architectures</span><span id=""_COMPSCI408269"">;</span></p><p id=""_COMPSCI408270""><span id=""_COMPSCI408271"">3. </span><span id=""_COMPSCI408272"">Evaluate the scaling properties of simple parallel applications</span><span id=""_COMPSCI408273"">;</span></p><p id=""_COMPSCI408274""><span id=""_COMPSCI408275"">4. </span><span id=""_COMPSCI408276"">Design and implement simple reliable distributed applications, selecting </span><span id=""_COMPSCI408277"">appropriately from various families of algorithm used in distributed systems, based on specific system requirements</span><span id=""_COMPSCI408278"">;</span></p><p id=""_COMPSCI408279""><span id=""_COMPSCI408280"">5. </span><span id=""_COMPSCI408281"">Evaluate the reliability properties of simple distributed applications</span><span id=""_COMPSCI408282"">.</span></p>"
Glasgow_Scotland,COMPSCI4021,"<h2>title</h2>Functional Programming (H) COMPSCI4021<h2>summary</h2><p id=""_COMPSCI40210""><span id=""_COMPSCI40211"">Functional programming is introduced using Haskell.  The standard programming techniques, as well as some advanced topics, are covered and applied to realistic programming problems.</span></p><h2>content</h2><p id=""_COMPSCI402127""><span id=""_COMPSCI402128"">Functional programming languages are one of the central focuses of modern research in programming languages, and they are also of immense practical utility.  This course presents the concepts of functional programming using Haskell, which is one of the most widely used functional languages.  The emphasis is on developing practical programming skills, </span><span id=""_COMPSCI402129"">applying</span><span id=""_COMPSCI402130"">&nbsp;advanced techniques such as monads, parallelism, metaprogramming, and formal methods.</span></p><p id=""_COMPSCI402131""><span id=""_COMPSCI402132"">The aims are to understand the principles of functional programming, including functions, expressions, types, type inference, equational reasoning, and monads, and to develop the ability to solve substantial programming problems using Haskell.</span></p><h2>ilo</h2><p id=""_COMPSCI402134""><span id=""_COMPSCI402135"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI402136""><span id=""_COMPSCI402137"">1. </span><span id=""_COMPSCI402138"">Write simple programs involving elementary Haskell techniques, including pure function definitions; </span></p><p id=""_COMPSCI402139""><span id=""_COMPSCI402140"">2. </span><span id=""_COMPSCI402141"">Use standard </span><span id=""_COMPSCI402142"">combinators</span><span id=""_COMPSCI402143"">&nbsp;for operating on lists;</span></p><p id=""_COMPSCI402144""><span id=""_COMPSCI402145"">3. </span><span id=""_COMPSCI402146"">Define new algebraic data types and use recursion to define functions that traverse recursive types;</span></p><p id=""_COMPSCI402147""><span id=""_COMPSCI402148"">4. </span><span id=""_COMPSCI402149"">Demonstrate understanding of how to express data structures and function interfaces using types, and how to infer types;</span></p><p id=""_COMPSCI402150""><span id=""_COMPSCI402151"">5. </span><span id=""_COMPSCI402152"">Demonstrate understanding of how to structure programs using monads, how to use the most common standard monads (including IO, Maybe, and State), and how to use a monad transformer;</span></p><p id=""_COMPSCI402153""><span id=""_COMPSCI402154"">6. </span><span id=""_COMPSCI402155"">Develop substantial software applications including GUIs and system interaction;</span></p><p id=""_COMPSCI402156""><span id=""_COMPSCI402157"">7. </span><span id=""_COMPSCI402158"">Use formal methods to prove properties of functional programs;</span></p><p id=""_COMPSCI402159""><span id=""_COMPSCI402160"">8. </span><span id=""_COMPSCI402161"">Construct, adapt, and analyse </span><span id=""_COMPSCI402162"">code using standard Haskell platform tools.</span><span id=""_COMPSCI402163"">&nbsp;</span></p>",Functional Programming (H) COMPSCI4021,"<p id=""_COMPSCI40210""><span id=""_COMPSCI40211"">Functional programming is introduced using Haskell.  The standard programming techniques, as well as some advanced topics, are covered and applied to realistic programming problems.</span></p>","<p id=""_COMPSCI402127""><span id=""_COMPSCI402128"">Functional programming languages are one of the central focuses of modern research in programming languages, and they are also of immense practical utility.  This course presents the concepts of functional programming using Haskell, which is one of the most widely used functional languages.  The emphasis is on developing practical programming skills, </span><span id=""_COMPSCI402129"">applying</span><span id=""_COMPSCI402130"">&nbsp;advanced techniques such as monads, parallelism, metaprogramming, and formal methods.</span></p><p id=""_COMPSCI402131""><span id=""_COMPSCI402132"">The aims are to understand the principles of functional programming, including functions, expressions, types, type inference, equational reasoning, and monads, and to develop the ability to solve substantial programming problems using Haskell.</span></p>","<p id=""_COMPSCI402134""><span id=""_COMPSCI402135"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI402136""><span id=""_COMPSCI402137"">1. </span><span id=""_COMPSCI402138"">Write simple programs involving elementary Haskell techniques, including pure function definitions; </span></p><p id=""_COMPSCI402139""><span id=""_COMPSCI402140"">2. </span><span id=""_COMPSCI402141"">Use standard </span><span id=""_COMPSCI402142"">combinators</span><span id=""_COMPSCI402143"">&nbsp;for operating on lists;</span></p><p id=""_COMPSCI402144""><span id=""_COMPSCI402145"">3. </span><span id=""_COMPSCI402146"">Define new algebraic data types and use recursion to define functions that traverse recursive types;</span></p><p id=""_COMPSCI402147""><span id=""_COMPSCI402148"">4. </span><span id=""_COMPSCI402149"">Demonstrate understanding of how to express data structures and function interfaces using types, and how to infer types;</span></p><p id=""_COMPSCI402150""><span id=""_COMPSCI402151"">5. </span><span id=""_COMPSCI402152"">Demonstrate understanding of how to structure programs using monads, how to use the most common standard monads (including IO, Maybe, and State), and how to use a monad transformer;</span></p><p id=""_COMPSCI402153""><span id=""_COMPSCI402154"">6. </span><span id=""_COMPSCI402155"">Develop substantial software applications including GUIs and system interaction;</span></p><p id=""_COMPSCI402156""><span id=""_COMPSCI402157"">7. </span><span id=""_COMPSCI402158"">Use formal methods to prove properties of functional programs;</span></p><p id=""_COMPSCI402159""><span id=""_COMPSCI402160"">8. </span><span id=""_COMPSCI402161"">Construct, adapt, and analyse </span><span id=""_COMPSCI402162"">code using standard Haskell platform tools.</span><span id=""_COMPSCI402163"">&nbsp;</span></p>"
Glasgow_Scotland,COMPSCI4023,"<h2>title</h2>Human-Computer Interaction (H) COMPSCI4023<h2>summary</h2><p id=""_COMPSCI40230""><span id=""_COMPSCI40231"">The aim of this course is to introduce stude</span><span id=""_COMPSCI40232"">nts to advanced topics in Human-</span><span id=""_COMPSCI40233"">Computer Interaction. I</span><span id=""_COMPSCI40234"">n technical terms, i</span><span id=""_COMPSCI40235"">t focuses on </span><span id=""_COMPSCI40236"">data visualisation, collaborative systems and multimodal interaction. It also introduces other </span><span id=""_COMPSCI40237"">novel forms in interaction</span><span id=""_COMPSCI40238"">&nbsp;and evaluation, and legal and ethical issues around interactive and data-centred systems</span><span id=""_COMPSCI40239"">.</span></p><h2>content</h2><p id=""_COMPSCI402347""><span id=""_COMPSCI402348"">This course will bring depth and breadth to the material covered in Interactive Systems H.  Human-Computer Interaction has moved away from a narrow focus on textual windows on a desktop, operated by one person using a keyboard and mouse.  In terms of devices, phones and other mobile systems lead to ubiquitous use and also ubiquitous sharing of data about us. In terms of data, such systems are often used to manipulate and explore complex data, including individual and social data.  They are used at a scale that pervades and changes our society, and legal and ethical issues (e.g. GDPR) are influencing what we design and how we design them. The aim of Human-Computer Interaction H will be to equip our students with skills to design for this broad use of technology. It will also to feed into Mobile Human-Computer Interaction H, which concentrates on mobile systems.</span></p><p id=""_COMPSCI402349"">&nbsp;</p><p id=""_COMPSCI402350""><span id=""_COMPSCI402351"">The aim of </span><span id=""_COMPSCI402352"">this </span><span id=""_COMPSCI402353"">course is to give the students an o</span><span id=""_COMPSCI402354"">verview of advanced topics in Human-Computer </span><span id=""_COMPSCI402355"">I</span><span id=""_COMPSCI402356"">nteraction, covering the</span><span id=""_COMPSCI402357"">&nbsp;key areas of </span><span id=""_COMPSCI402358"">interaction with complex, personal and social data, via data analytics (in particular, visual analytics), and via multimodal interaction. It will address the ways that we design and evaluate such systems</span><span id=""_COMPSCI402359"">. There will also be a significant piece of coursework where the students will have </span><span id=""_COMPSCI402360"">to design, implement and evaluate an </span><span id=""_COMPSCI402361"">interactive application. This will give them valuable experience in </span><span id=""_COMPSCI402362"">development and justification of</span><span id=""_COMPSCI402363"">&nbsp;</span><span id=""_COMPSCI402364"">such systems</span><span id=""_COMPSCI402365"">.</span></p><h2>ilo</h2><p id=""_COMPSCI402367""><span id=""_COMPSCI402368"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI402369""><span id=""_COMPSCI402370"">1. </span><span id=""_COMPSCI402371"">Identify the </span><span id=""_COMPSCI402372"">key</span><span id=""_COMPSCI402373"">&nbsp;</span><span id=""_COMPSCI402374"">concepts</span><span id=""_COMPSCI402375"">&nbsp;and </span><span id=""_COMPSCI402376"">exemplars</span><span id=""_COMPSCI402377"">&nbsp;in </span><span id=""_COMPSCI402378"">the design of</span><span id=""_COMPSCI402379"">&nbsp;novel </span><span id=""_COMPSCI402380"">visualisation systems, collaborative systems, and </span><span id=""_COMPSCI402381"">multimodal </span><span id=""_COMPSCI402382"">systems, and in ethical system design</span><span id=""_COMPSCI402383"">;</span></p><p id=""_COMPSCI402384""><span id=""_COMPSCI402385"">2. </span><span id=""_COMPSCI402386"">Identify the</span><span id=""_COMPSCI402387"">&nbsp;main</span><span id=""_COMPSCI402388"">&nbsp;issues </span><span id=""_COMPSCI402389"">and key concepts in evaluating such systems, in terms of immediate functionality and utility as well as in terms of wider social, legal and ethical criteria</span><span id=""_COMPSCI402390"">;</span></p><p id=""_COMPSCI402391""><span id=""_COMPSCI402392"">3. </span><span id=""_COMPSCI402393"">Have</span><span id=""_COMPSCI402394"">&nbsp;experience designing </span><span id=""_COMPSCI402395"">such systems, by d</span><span id=""_COMPSCI402396"">esign</span><span id=""_COMPSCI402397"">ing</span><span id=""_COMPSCI402398"">, develop</span><span id=""_COMPSCI402399"">ing and evaluating</span><span id=""_COMPSCI4023100"">&nbsp;a significant piece of interactive software embodying key aspects of the course.</span></p>",Human-Computer Interaction (H) COMPSCI4023,"<p id=""_COMPSCI40230""><span id=""_COMPSCI40231"">The aim of this course is to introduce stude</span><span id=""_COMPSCI40232"">nts to advanced topics in Human-</span><span id=""_COMPSCI40233"">Computer Interaction. I</span><span id=""_COMPSCI40234"">n technical terms, i</span><span id=""_COMPSCI40235"">t focuses on </span><span id=""_COMPSCI40236"">data visualisation, collaborative systems and multimodal interaction. It also introduces other </span><span id=""_COMPSCI40237"">novel forms in interaction</span><span id=""_COMPSCI40238"">&nbsp;and evaluation, and legal and ethical issues around interactive and data-centred systems</span><span id=""_COMPSCI40239"">.</span></p>","<p id=""_COMPSCI402347""><span id=""_COMPSCI402348"">This course will bring depth and breadth to the material covered in Interactive Systems H.  Human-Computer Interaction has moved away from a narrow focus on textual windows on a desktop, operated by one person using a keyboard and mouse.  In terms of devices, phones and other mobile systems lead to ubiquitous use and also ubiquitous sharing of data about us. In terms of data, such systems are often used to manipulate and explore complex data, including individual and social data.  They are used at a scale that pervades and changes our society, and legal and ethical issues (e.g. GDPR) are influencing what we design and how we design them. The aim of Human-Computer Interaction H will be to equip our students with skills to design for this broad use of technology. It will also to feed into Mobile Human-Computer Interaction H, which concentrates on mobile systems.</span></p><p id=""_COMPSCI402349"">&nbsp;</p><p id=""_COMPSCI402350""><span id=""_COMPSCI402351"">The aim of </span><span id=""_COMPSCI402352"">this </span><span id=""_COMPSCI402353"">course is to give the students an o</span><span id=""_COMPSCI402354"">verview of advanced topics in Human-Computer </span><span id=""_COMPSCI402355"">I</span><span id=""_COMPSCI402356"">nteraction, covering the</span><span id=""_COMPSCI402357"">&nbsp;key areas of </span><span id=""_COMPSCI402358"">interaction with complex, personal and social data, via data analytics (in particular, visual analytics), and via multimodal interaction. It will address the ways that we design and evaluate such systems</span><span id=""_COMPSCI402359"">. There will also be a significant piece of coursework where the students will have </span><span id=""_COMPSCI402360"">to design, implement and evaluate an </span><span id=""_COMPSCI402361"">interactive application. This will give them valuable experience in </span><span id=""_COMPSCI402362"">development and justification of</span><span id=""_COMPSCI402363"">&nbsp;</span><span id=""_COMPSCI402364"">such systems</span><span id=""_COMPSCI402365"">.</span></p>","<p id=""_COMPSCI402367""><span id=""_COMPSCI402368"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI402369""><span id=""_COMPSCI402370"">1. </span><span id=""_COMPSCI402371"">Identify the </span><span id=""_COMPSCI402372"">key</span><span id=""_COMPSCI402373"">&nbsp;</span><span id=""_COMPSCI402374"">concepts</span><span id=""_COMPSCI402375"">&nbsp;and </span><span id=""_COMPSCI402376"">exemplars</span><span id=""_COMPSCI402377"">&nbsp;in </span><span id=""_COMPSCI402378"">the design of</span><span id=""_COMPSCI402379"">&nbsp;novel </span><span id=""_COMPSCI402380"">visualisation systems, collaborative systems, and </span><span id=""_COMPSCI402381"">multimodal </span><span id=""_COMPSCI402382"">systems, and in ethical system design</span><span id=""_COMPSCI402383"">;</span></p><p id=""_COMPSCI402384""><span id=""_COMPSCI402385"">2. </span><span id=""_COMPSCI402386"">Identify the</span><span id=""_COMPSCI402387"">&nbsp;main</span><span id=""_COMPSCI402388"">&nbsp;issues </span><span id=""_COMPSCI402389"">and key concepts in evaluating such systems, in terms of immediate functionality and utility as well as in terms of wider social, legal and ethical criteria</span><span id=""_COMPSCI402390"">;</span></p><p id=""_COMPSCI402391""><span id=""_COMPSCI402392"">3. </span><span id=""_COMPSCI402393"">Have</span><span id=""_COMPSCI402394"">&nbsp;experience designing </span><span id=""_COMPSCI402395"">such systems, by d</span><span id=""_COMPSCI402396"">esign</span><span id=""_COMPSCI402397"">ing</span><span id=""_COMPSCI402398"">, develop</span><span id=""_COMPSCI402399"">ing and evaluating</span><span id=""_COMPSCI4023100"">&nbsp;a significant piece of interactive software embodying key aspects of the course.</span></p>"
Glasgow_Scotland,COMPSCI4069,"<h2>title</h2>Information Retrieval (H) COMPSCI4069<h2>summary</h2><p id=""_COMPSCI40690""><span id=""_COMPSCI40691"">To present students with an in-depth examination of the theoretical and practical issues involved in providing tools to access large collections of documents, especially in the context of the World Wide Web.</span></p><p id=""_COMPSCI40692""><span id=""_COMPSCI40693"">To present students with the practical engineering issues raised by the design and implementation of an information retrieval system.</span></p><h2>content</h2><p id=""_COMPSCI406928""><span id=""_COMPSCI406929"">To present students with an in-depth examination of the theoretical and practical issues involved in providing tools to access large collections of documents, especially in the context of the World Wide Web.</span></p><p id=""_COMPSCI406930""><span id=""_COMPSCI406931"">To present students with the practical engineering issues raised by the design and implementation of an information retrieval system.</span></p><h2>ilo</h2><p id=""_COMPSCI406934""><span id=""_COMPSCI406935"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI406936""><span id=""_COMPSCI406937"">1. </span><span id=""_COMPSCI406938"">Implement a standard information retrieval (IR) system;</span></p><p id=""_COMPSCI406939""><span id=""_COMPSCI406940"">2. </span><span id=""_COMPSCI406941"">Discuss the theoretical basis behind the standard models of IR (e.g. Boolean, Vector-space, and Probabilistic models);</span></p><p id=""_COMPSCI406942""><span id=""_COMPSCI406943"">3. </span><span id=""_COMPSCI406944"">Discuss how an IR system should be evaluated in terms of the system's performance and the user's satisfaction with the system;</span></p><p id=""_COMPSCI406945""><span id=""_COMPSCI406946"">4. </span><span id=""_COMPSCI406947"">Describe the techniques in organising information;</span></p><p id=""_COMPSCI406948""><span id=""_COMPSCI406949"">5. </span><span id=""_COMPSCI406950"">Describe the techniques involved in retrieving information from the World Wide Web;</span></p><p id=""_COMPSCI406951""><span id=""_COMPSCI406952"">6. </span><span id=""_COMPSCI406953"">Describe the practical engineering issues raised by the implementation of a search engine for the Web</span><span id=""_COMPSCI406954"">.</span></p>",Information Retrieval (H) COMPSCI4069,"<p id=""_COMPSCI40690""><span id=""_COMPSCI40691"">To present students with an in-depth examination of the theoretical and practical issues involved in providing tools to access large collections of documents, especially in the context of the World Wide Web.</span></p><p id=""_COMPSCI40692""><span id=""_COMPSCI40693"">To present students with the practical engineering issues raised by the design and implementation of an information retrieval system.</span></p>","<p id=""_COMPSCI406928""><span id=""_COMPSCI406929"">To present students with an in-depth examination of the theoretical and practical issues involved in providing tools to access large collections of documents, especially in the context of the World Wide Web.</span></p><p id=""_COMPSCI406930""><span id=""_COMPSCI406931"">To present students with the practical engineering issues raised by the design and implementation of an information retrieval system.</span></p>","<p id=""_COMPSCI406934""><span id=""_COMPSCI406935"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI406936""><span id=""_COMPSCI406937"">1. </span><span id=""_COMPSCI406938"">Implement a standard information retrieval (IR) system;</span></p><p id=""_COMPSCI406939""><span id=""_COMPSCI406940"">2. </span><span id=""_COMPSCI406941"">Discuss the theoretical basis behind the standard models of IR (e.g. Boolean, Vector-space, and Probabilistic models);</span></p><p id=""_COMPSCI406942""><span id=""_COMPSCI406943"">3. </span><span id=""_COMPSCI406944"">Discuss how an IR system should be evaluated in terms of the system's performance and the user's satisfaction with the system;</span></p><p id=""_COMPSCI406945""><span id=""_COMPSCI406946"">4. </span><span id=""_COMPSCI406947"">Describe the techniques in organising information;</span></p><p id=""_COMPSCI406948""><span id=""_COMPSCI406949"">5. </span><span id=""_COMPSCI406950"">Describe the techniques involved in retrieving information from the World Wide Web;</span></p><p id=""_COMPSCI406951""><span id=""_COMPSCI406952"">6. </span><span id=""_COMPSCI406953"">Describe the practical engineering issues raised by the implementation of a search engine for the Web</span><span id=""_COMPSCI406954"">.</span></p>"
Glasgow_Scotland,COMPSCI4061,"<h2>title</h2>Machine Learning (H) COMPSCI4061<h2>summary</h2><p id=""_COMPSCI40610""><span id=""_COMPSCI40611"">A practical introduction to the foundations of machine learning.</span></p><h2>content</h2><p id=""_COMPSCI406132""><span id=""_COMPSCI406133"">To present students with an introduction to the general theory of learning from data and to a number of popular Machine Learning methods.</span></p><h2>ilo</h2><p id=""_COMPSCI406134""><span id=""_COMPSCI406135"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI406136""><span id=""_COMPSCI406137"">1. </span><span id=""_COMPSCI406138"">Discuss the principle of learning from data;</span></p><p id=""_COMPSCI406139""><span id=""_COMPSCI406140"">2. </span><span id=""_COMPSCI406141"">Describe the main machine learning methods: regression, classification, clustering, probability density estimation and dimensionality reduction;</span></p><p id=""_COMPSCI406142""><span id=""_COMPSCI406143"">3. </span><span id=""_COMPSCI406144"">Use a selection of common machine learning algorithms and be aware of when one is to be favoured over other;</span></p><p id=""_COMPSCI406145""><span id=""_COMPSCI406146"">4. </span><span id=""_COMPSCI406147"">Implement and use machine learning algorithms in </span><span id=""_COMPSCI406148"">Matlab</span><span id=""_COMPSCI406149"">;</span></p><p id=""_COMPSCI406150""><span id=""_COMPSCI406151"">5. </span><span id=""_COMPSCI406152"">Discuss the major machine learning application area in, for example, Information Retrieval,</span></p><p id=""_COMPSCI406153""><span id=""_COMPSCI406154"">6. </span><span id=""_COMPSCI406155"">Human Computer Interaction, Bioinformatics and Computer Visions &amp; Graphics;</span></p><p id=""_COMPSCI406156""><span id=""_COMPSCI406157"">7. </span><span id=""_COMPSCI406158"">Detail emerging machine learning approaches such as non-parametric methods and sampling techniques</span><span id=""_COMPSCI406159"">;</span></p><p id=""_COMPSCI406160""><span id=""_COMPSCI406161"">8. </span><span id=""_COMPSCI406162"">Produce a Multimedia System.</span></p>",Machine Learning (H) COMPSCI4061,"<p id=""_COMPSCI40610""><span id=""_COMPSCI40611"">A practical introduction to the foundations of machine learning.</span></p>","<p id=""_COMPSCI406132""><span id=""_COMPSCI406133"">To present students with an introduction to the general theory of learning from data and to a number of popular Machine Learning methods.</span></p>","<p id=""_COMPSCI406134""><span id=""_COMPSCI406135"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI406136""><span id=""_COMPSCI406137"">1. </span><span id=""_COMPSCI406138"">Discuss the principle of learning from data;</span></p><p id=""_COMPSCI406139""><span id=""_COMPSCI406140"">2. </span><span id=""_COMPSCI406141"">Describe the main machine learning methods: regression, classification, clustering, probability density estimation and dimensionality reduction;</span></p><p id=""_COMPSCI406142""><span id=""_COMPSCI406143"">3. </span><span id=""_COMPSCI406144"">Use a selection of common machine learning algorithms and be aware of when one is to be favoured over other;</span></p><p id=""_COMPSCI406145""><span id=""_COMPSCI406146"">4. </span><span id=""_COMPSCI406147"">Implement and use machine learning algorithms in </span><span id=""_COMPSCI406148"">Matlab</span><span id=""_COMPSCI406149"">;</span></p><p id=""_COMPSCI406150""><span id=""_COMPSCI406151"">5. </span><span id=""_COMPSCI406152"">Discuss the major machine learning application area in, for example, Information Retrieval,</span></p><p id=""_COMPSCI406153""><span id=""_COMPSCI406154"">6. </span><span id=""_COMPSCI406155"">Human Computer Interaction, Bioinformatics and Computer Visions &amp; Graphics;</span></p><p id=""_COMPSCI406156""><span id=""_COMPSCI406157"">7. </span><span id=""_COMPSCI406158"">Detail emerging machine learning approaches such as non-parametric methods and sampling techniques</span><span id=""_COMPSCI406159"">;</span></p><p id=""_COMPSCI406160""><span id=""_COMPSCI406161"">8. </span><span id=""_COMPSCI406162"">Produce a Multimedia System.</span></p>"
Glasgow_Scotland,COMPSCI4068,"<h2>title</h2>Mobile Human-Computer Interaction (H) COMPSCI4068<h2>summary</h2><p id=""_COMPSCI40680""><span id=""_COMPSCI40681"">Mobile Human-Computer Interaction </span><span id=""_COMPSCI40682"">(H) </span><span id=""_COMPSCI40683"">gives students an overview of the interaction challenges and opportunities associated with mobile and ubiquitous computing.</span></p><h2>content</h2><p id=""_COMPSCI406827""><span id=""_COMPSCI406828"">This course aims to introduce the challenges of developing interactive systems for mobile computing devices, e.g., mobile phones and wearable computers. Students will learn about challenging aspects of mobile interaction contexts, e.g., device movement, situational impairments, social acceptability. This course will introduce interaction design concepts like prototyping and evaluation through user studies. This is not intended as a mobile application development course but will briefly introduce core concepts and </span><span id=""_COMPSCI406829"">methods</span><span id=""_COMPSCI406830"">&nbsp;</span><span id=""_COMPSCI406831"">for</span><span id=""_COMPSCI406832"">&nbsp;prototyping novel interactions.</span></p><h2>ilo</h2><p id=""_COMPSCI406833""><span id=""_COMPSCI406834"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI406835""><span id=""_COMPSCI406836"">1. </span><span id=""_COMPSCI406837"">Explain problems associated with human-computer interaction in mobile and ubiquitous usage contexts.</span></p><p id=""_COMPSCI406838""><span id=""_COMPSCI406839"">2. </span><span id=""_COMPSCI406840"">Critically analyse a proposed mobile interactive system considering its intended usage context.</span></p><p id=""_COMPSCI406841""><span id=""_COMPSCI406842"">3. </span><span id=""_COMPSCI406843"">Design usable mobile interactive systems for a given problem or application area.</span></p><p id=""_COMPSCI406844""><span id=""_COMPSCI406845"">4. </span><span id=""_COMPSCI406846"">Develop and evaluate prototypes of mobile interactive systems using a variety of prototyping methods and evaluation techniques.</span></p><p id=""_COMPSCI406847""><span id=""_COMPSCI406848"">5. </span><span id=""_COMPSCI406849"">Discuss cutting edge developments in mobile human-computer interaction, such as context-aware systems, sensor-based interaction, location-based interaction, and mixed reality.</span></p>",Mobile Human-Computer Interaction (H) COMPSCI4068,"<p id=""_COMPSCI40680""><span id=""_COMPSCI40681"">Mobile Human-Computer Interaction </span><span id=""_COMPSCI40682"">(H) </span><span id=""_COMPSCI40683"">gives students an overview of the interaction challenges and opportunities associated with mobile and ubiquitous computing.</span></p>","<p id=""_COMPSCI406827""><span id=""_COMPSCI406828"">This course aims to introduce the challenges of developing interactive systems for mobile computing devices, e.g., mobile phones and wearable computers. Students will learn about challenging aspects of mobile interaction contexts, e.g., device movement, situational impairments, social acceptability. This course will introduce interaction design concepts like prototyping and evaluation through user studies. This is not intended as a mobile application development course but will briefly introduce core concepts and </span><span id=""_COMPSCI406829"">methods</span><span id=""_COMPSCI406830"">&nbsp;</span><span id=""_COMPSCI406831"">for</span><span id=""_COMPSCI406832"">&nbsp;prototyping novel interactions.</span></p>","<p id=""_COMPSCI406833""><span id=""_COMPSCI406834"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI406835""><span id=""_COMPSCI406836"">1. </span><span id=""_COMPSCI406837"">Explain problems associated with human-computer interaction in mobile and ubiquitous usage contexts.</span></p><p id=""_COMPSCI406838""><span id=""_COMPSCI406839"">2. </span><span id=""_COMPSCI406840"">Critically analyse a proposed mobile interactive system considering its intended usage context.</span></p><p id=""_COMPSCI406841""><span id=""_COMPSCI406842"">3. </span><span id=""_COMPSCI406843"">Design usable mobile interactive systems for a given problem or application area.</span></p><p id=""_COMPSCI406844""><span id=""_COMPSCI406845"">4. </span><span id=""_COMPSCI406846"">Develop and evaluate prototypes of mobile interactive systems using a variety of prototyping methods and evaluation techniques.</span></p><p id=""_COMPSCI406847""><span id=""_COMPSCI406848"">5. </span><span id=""_COMPSCI406849"">Discuss cutting edge developments in mobile human-computer interaction, such as context-aware systems, sensor-based interaction, location-based interaction, and mixed reality.</span></p>"
Glasgow_Scotland,COMPSCI4031,"<h2>title</h2>Modelling Reactive Systems (H) COMPSCI4031<h2>summary</h2><p id=""_COMPSCI40310""><span id=""_COMPSCI40311"">Modelling concurrent, communicating systems using non-probabilistic and probabilistic techniques, verification us</span><span id=""_COMPSCI40312"">ing the SPIN and PRISM model checkers</span><span id=""_COMPSCI40313"">, </span><span id=""_COMPSCI40314"">and </span><span id=""_COMPSCI40315"">introduction to reactive </span><span id=""_COMPSCI40316"">synthesis.</span></p><h2>content</h2><p id=""_COMPSCI403126""><span id=""_COMPSCI403127"">Reactive systems are widely and increasingly used throughout society (e.g. telecommunications, flight control, railway signalling, medical devices).  An understanding of the fundamentals of these systems, at an abstract level, is essential for the developm</span><span id=""_COMPSCI403128"">ent of process control systems and should be a pre-requisite for anyone developing software for such applications.  This course provides in-depth study of key formal techniques used in designing and analysing concurrent, reactive systems; and to </span><span id=""_COMPSCI403129"">present th</span><span id=""_COMPSCI403130"">e practical issues raised by using </span><span id=""_COMPSCI403131"">a number of</span><span id=""_COMPSCI403132"">&nbsp;such formalisms and associated software tools, particularly within the context of developing communi</span><span id=""_COMPSCI403133"">cations protocols and other </span><span id=""_COMPSCI403134"">communications applications.</span><span id=""_COMPSCI403135"">&nbsp;</span></p><p id=""_COMPSCI403136""><span id=""_COMPSCI403137"">Students will learn to model systems using the Pro</span><span id=""_COMPSCI403138"">mela specification language and associated verification tool SPIN. In addition, probabilistic systems will be modelled as Discrete Time Markov Chains using the PRISM language and tool. </span></p><p id=""_COMPSCI403139""><span id=""_COMPSCI403140"">L</span><span id=""_COMPSCI403141"">astly, students will</span><span id=""_COMPSCI403142"">&nbsp;be made aware of </span><span id=""_COMPSCI403143"">fundamental</span><span id=""_COMPSCI403144"">&nbsp;concepts</span><span id=""_COMPSCI403145"">&nbsp;of</span><span id=""_COMPSCI403146"">&nbsp;</span><span id=""_COMPSCI403147"">reactive</span><span id=""_COMPSCI403148"">&nbsp;synthesis</span><span id=""_COMPSCI403149"">.</span></p><h2>ilo</h2><p id=""_COMPSCI403150""><span id=""_COMPSCI403151"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI403152"">&nbsp;</p><p id=""_COMPSCI403153""><span id=""_COMPSCI403154"">1: Clearly differentiate issues that arise in concurrent, reactive, and distributed systems;</span></p><p id=""_COMPSCI403155""><span id=""_COMPSCI403156"">2: Explain the various concepts of concurrency and communication that arise </span><span id=""_COMPSCI403157"">in such systems;</span></p><p id=""_COMPSCI403158""><span id=""_COMPSCI403159"">3: Demonstrate understanding of the concepts of signalling and control and associated modelling issues;</span></p><p id=""_COMPSCI403160""><span id=""_COMPSCI403161"">4: Develop message sequence charts for a reactive system;</span></p><p id=""_COMPSCI403162""><span id=""_COMPSCI403163"">5: Enumerate the differences between non-probabilistic and probabilistic form</span><span id=""_COMPSCI403164"">alisms;</span></p><p id=""_COMPSCI403165""><span id=""_COMPSCI403166"">6: Design and analyse a reactive system, including a communication protocol, using appropriate design techniques and mechanised analysis tools (SPIN and PRISM)</span><span id=""_COMPSCI403167"">;</span></p><p id=""_COMPSCI403168""><span id=""_COMPSCI403169"">7:</span><span id=""_COMPSCI403170"">&nbsp;Explain concepts </span><span id=""_COMPSCI403171"">of</span><span id=""_COMPSCI403172"">&nbsp;</span><span id=""_COMPSCI403173"">reactive </span><span id=""_COMPSCI403174"">synthesis</span><span id=""_COMPSCI403175"">.</span></p>",Modelling Reactive Systems (H) COMPSCI4031,"<p id=""_COMPSCI40310""><span id=""_COMPSCI40311"">Modelling concurrent, communicating systems using non-probabilistic and probabilistic techniques, verification us</span><span id=""_COMPSCI40312"">ing the SPIN and PRISM model checkers</span><span id=""_COMPSCI40313"">, </span><span id=""_COMPSCI40314"">and </span><span id=""_COMPSCI40315"">introduction to reactive </span><span id=""_COMPSCI40316"">synthesis.</span></p>","<p id=""_COMPSCI403126""><span id=""_COMPSCI403127"">Reactive systems are widely and increasingly used throughout society (e.g. telecommunications, flight control, railway signalling, medical devices).  An understanding of the fundamentals of these systems, at an abstract level, is essential for the developm</span><span id=""_COMPSCI403128"">ent of process control systems and should be a pre-requisite for anyone developing software for such applications.  This course provides in-depth study of key formal techniques used in designing and analysing concurrent, reactive systems; and to </span><span id=""_COMPSCI403129"">present th</span><span id=""_COMPSCI403130"">e practical issues raised by using </span><span id=""_COMPSCI403131"">a number of</span><span id=""_COMPSCI403132"">&nbsp;such formalisms and associated software tools, particularly within the context of developing communi</span><span id=""_COMPSCI403133"">cations protocols and other </span><span id=""_COMPSCI403134"">communications applications.</span><span id=""_COMPSCI403135"">&nbsp;</span></p><p id=""_COMPSCI403136""><span id=""_COMPSCI403137"">Students will learn to model systems using the Pro</span><span id=""_COMPSCI403138"">mela specification language and associated verification tool SPIN. In addition, probabilistic systems will be modelled as Discrete Time Markov Chains using the PRISM language and tool. </span></p><p id=""_COMPSCI403139""><span id=""_COMPSCI403140"">L</span><span id=""_COMPSCI403141"">astly, students will</span><span id=""_COMPSCI403142"">&nbsp;be made aware of </span><span id=""_COMPSCI403143"">fundamental</span><span id=""_COMPSCI403144"">&nbsp;concepts</span><span id=""_COMPSCI403145"">&nbsp;of</span><span id=""_COMPSCI403146"">&nbsp;</span><span id=""_COMPSCI403147"">reactive</span><span id=""_COMPSCI403148"">&nbsp;synthesis</span><span id=""_COMPSCI403149"">.</span></p>","<p id=""_COMPSCI403150""><span id=""_COMPSCI403151"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI403152"">&nbsp;</p><p id=""_COMPSCI403153""><span id=""_COMPSCI403154"">1: Clearly differentiate issues that arise in concurrent, reactive, and distributed systems;</span></p><p id=""_COMPSCI403155""><span id=""_COMPSCI403156"">2: Explain the various concepts of concurrency and communication that arise </span><span id=""_COMPSCI403157"">in such systems;</span></p><p id=""_COMPSCI403158""><span id=""_COMPSCI403159"">3: Demonstrate understanding of the concepts of signalling and control and associated modelling issues;</span></p><p id=""_COMPSCI403160""><span id=""_COMPSCI403161"">4: Develop message sequence charts for a reactive system;</span></p><p id=""_COMPSCI403162""><span id=""_COMPSCI403163"">5: Enumerate the differences between non-probabilistic and probabilistic form</span><span id=""_COMPSCI403164"">alisms;</span></p><p id=""_COMPSCI403165""><span id=""_COMPSCI403166"">6: Design and analyse a reactive system, including a communication protocol, using appropriate design techniques and mechanised analysis tools (SPIN and PRISM)</span><span id=""_COMPSCI403167"">;</span></p><p id=""_COMPSCI403168""><span id=""_COMPSCI403169"">7:</span><span id=""_COMPSCI403170"">&nbsp;Explain concepts </span><span id=""_COMPSCI403171"">of</span><span id=""_COMPSCI403172"">&nbsp;</span><span id=""_COMPSCI403173"">reactive </span><span id=""_COMPSCI403174"">synthesis</span><span id=""_COMPSCI403175"">.</span></p>"
Glasgow_Scotland,COMPSCI4012,"<h2>title</h2>Networked Systems (H) COMPSCI4012<h2>summary</h2><p id=""_COMPSCI40120""><span id=""_COMPSCI40121"">To introduce the fundamental concepts and theory of communications;</span></p><p id=""_COMPSCI40122""><span id=""_COMPSCI40123"">To provide a solid understanding of the technologies that support modern networked computer systems;</span></p><p id=""_COMPSCI40124""><span id=""_COMPSCI40125"">To introduce low-level network programming concepts, and give students practice with systems programming in C;</span></p><p id=""_COMPSCI40126""><span id=""_COMPSCI40127"">To provide our students with the ability to evaluate and advise industry on the use and deployment of networked systems.</span></p><h2>content</h2><p id=""_COMPSCI401247""><span id=""_COMPSCI401248"">■&nbsp;</span><span id=""_COMPSCI401249"">To introduce the fundamental concepts and theory of communications;</span></p><p id=""_COMPSCI401250""><span id=""_COMPSCI401251"">■&nbsp;</span><span id=""_COMPSCI401252"">To provide a solid understanding of the technologies that support modern networked computer systems;</span></p><p id=""_COMPSCI401253""><span id=""_COMPSCI401254"">■&nbsp;</span><span id=""_COMPSCI401255"">To introduce low-level network </span><span id=""_COMPSCI401256"">programming concepts, and give students practice with systems programming in C</span><span id=""_COMPSCI401257"">;</span></p><p id=""_COMPSCI401258""><span id=""_COMPSCI401259"">■&nbsp;</span><span id=""_COMPSCI401260"">To provide our students with the ability to evaluate and advise industry on the use and deployment of networked systems.</span></p><h2>ilo</h2><p id=""_COMPSCI401262""><span id=""_COMPSCI401263"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI401264""><span id=""_COMPSCI401265"">1. </span><span id=""_COMPSCI401266"">Describe and compare capabilities of various communication technologies and techniques;</span></p><p id=""_COMPSCI401267""><span id=""_COMPSCI401268"">2. </span><span id=""_COMPSCI401269"">Point out differences between networks of different scale, and how these affect their design;</span></p><p id=""_COMPSCI401270""><span id=""_COMPSCI401271"">3. </span><span id=""_COMPSCI401272"">Describe the issues in connecting heterogeneous networks;</span></p><p id=""_COMPSCI401273""><span id=""_COMPSCI401274"">4. </span><span id=""_COMPSCI401275"">Describe importance of layering, and the OSI reference model;</span></p><p id=""_COMPSCI401276""><span id=""_COMPSCI401277"">5. </span><span id=""_COMPSCI401278"">Detail demands of different applications on quality of service requirements for the underlying communication network;</span></p><p id=""_COMPSCI401279""><span id=""_COMPSCI401280"">6. </span><span id=""_COMPSCI401281"">Demonstrate an understanding of the design and operation of an IP network, such as the Internet, and explain the purpose and function of its various components;</span></p><p id=""_COMPSCI401282""><span id=""_COMPSCI401283"">7. </span><span id=""_COMPSCI401284"">Write simple l</span><span id=""_COMPSCI401285"">ow-level communication software, showing awareness of good practice for correct and secure programming.</span></p>",Networked Systems (H) COMPSCI4012,"<p id=""_COMPSCI40120""><span id=""_COMPSCI40121"">To introduce the fundamental concepts and theory of communications;</span></p><p id=""_COMPSCI40122""><span id=""_COMPSCI40123"">To provide a solid understanding of the technologies that support modern networked computer systems;</span></p><p id=""_COMPSCI40124""><span id=""_COMPSCI40125"">To introduce low-level network programming concepts, and give students practice with systems programming in C;</span></p><p id=""_COMPSCI40126""><span id=""_COMPSCI40127"">To provide our students with the ability to evaluate and advise industry on the use and deployment of networked systems.</span></p>","<p id=""_COMPSCI401247""><span id=""_COMPSCI401248"">■&nbsp;</span><span id=""_COMPSCI401249"">To introduce the fundamental concepts and theory of communications;</span></p><p id=""_COMPSCI401250""><span id=""_COMPSCI401251"">■&nbsp;</span><span id=""_COMPSCI401252"">To provide a solid understanding of the technologies that support modern networked computer systems;</span></p><p id=""_COMPSCI401253""><span id=""_COMPSCI401254"">■&nbsp;</span><span id=""_COMPSCI401255"">To introduce low-level network </span><span id=""_COMPSCI401256"">programming concepts, and give students practice with systems programming in C</span><span id=""_COMPSCI401257"">;</span></p><p id=""_COMPSCI401258""><span id=""_COMPSCI401259"">■&nbsp;</span><span id=""_COMPSCI401260"">To provide our students with the ability to evaluate and advise industry on the use and deployment of networked systems.</span></p>","<p id=""_COMPSCI401262""><span id=""_COMPSCI401263"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI401264""><span id=""_COMPSCI401265"">1. </span><span id=""_COMPSCI401266"">Describe and compare capabilities of various communication technologies and techniques;</span></p><p id=""_COMPSCI401267""><span id=""_COMPSCI401268"">2. </span><span id=""_COMPSCI401269"">Point out differences between networks of different scale, and how these affect their design;</span></p><p id=""_COMPSCI401270""><span id=""_COMPSCI401271"">3. </span><span id=""_COMPSCI401272"">Describe the issues in connecting heterogeneous networks;</span></p><p id=""_COMPSCI401273""><span id=""_COMPSCI401274"">4. </span><span id=""_COMPSCI401275"">Describe importance of layering, and the OSI reference model;</span></p><p id=""_COMPSCI401276""><span id=""_COMPSCI401277"">5. </span><span id=""_COMPSCI401278"">Detail demands of different applications on quality of service requirements for the underlying communication network;</span></p><p id=""_COMPSCI401279""><span id=""_COMPSCI401280"">6. </span><span id=""_COMPSCI401281"">Demonstrate an understanding of the design and operation of an IP network, such as the Internet, and explain the purpose and function of its various components;</span></p><p id=""_COMPSCI401282""><span id=""_COMPSCI401283"">7. </span><span id=""_COMPSCI401284"">Write simple l</span><span id=""_COMPSCI401285"">ow-level communication software, showing awareness of good practice for correct and secure programming.</span></p>"
Glasgow_Scotland,COMPSCI4011,"<h2>title</h2>Operating Systems (H) COMPSCI4011<h2>summary</h2><p id=""_COMPSCI40110""><span id=""_COMPSCI40111"">To introduce the students to the styles of coding required with an OS; </span></p><p id=""_COMPSCI40112""><span id=""_COMPSCI40113"">To give a thorough presentation of the contents of a traditional OS, including the key abstractions;</span></p><p id=""_COMPSCI40114""><span id=""_COMPSCI40115"">To show the range of algorithms and techniques available for specific OS problems, and the implications of selection specific algorithms for application behaviour; </span></p><p id=""_COMPSCI40116""><span id=""_COMPSCI40117"">To develop an integrated understanding of what the computer is doing, from a non-naive view of hardware to the behaviour of multi-threaded application processes; present the alternatives and clarify the trade-offs that drive OS and hardware design.</span></p><h2>content</h2><p id=""_COMPSCI401155""><span id=""_COMPSCI401156"">To introduce the students to the styles of coding required with an OS; </span></p><p id=""_COMPSCI401157""><span id=""_COMPSCI401158"">To give a thorough presentation of the contents of a traditional OS, including the key abstractions;</span></p><p id=""_COMPSCI401159""><span id=""_COMPSCI401160"">To show the range of algorithms and techniques available for specific OS problems, and the implications of selection specific algorithms for application behaviour; </span></p><p id=""_COMPSCI401161""><span id=""_COMPSCI401162"">To develop an integrated understanding of what the computer is doing, from a non-naive view of hardware to the behaviour of multi-threaded application processes; present the alternatives and clarify the trade-offs that drive OS and hardware design.</span></p><h2>ilo</h2><p id=""_COMPSCI401164""><span id=""_COMPSCI401165"">By the end of this course, students will be able to: </span></p><p id=""_COMPSCI401166""><span id=""_COMPSCI401167"">1. </span><span id=""_COMPSCI401168"">Use current operating system terminology in correctly explaining the functions of an OS;</span></p><p id=""_COMPSCI401169""><span id=""_COMPSCI401170"">2. </span><span id=""_COMPSCI401171"">Relate operating system functions to computer hardware;</span></p><p id=""_COMPSCI401172""><span id=""_COMPSCI401173"">3. </span><span id=""_COMPSCI401174"">Describe the mechanisms of interrupts, context switching and address translation;</span></p><p id=""_COMPSCI401175""><span id=""_COMPSCI401176"">4. </span><span id=""_COMPSCI401177"">Describe the relation of operating system functions to language run-time systems;</span></p><p id=""_COMPSCI401178""><span id=""_COMPSCI401179"">5. </span><span id=""_COMPSCI401180"">Explain the significance of concurrency in operating system design;</span></p><p id=""_COMPSCI401181""><span id=""_COMPSCI401182"">6. </span><span id=""_COMPSCI401183"">Demonstrate an understanding of the semantics of operating system functions, including scheduling and memory management, by being able to describe their functioning;</span></p><p id=""_COMPSCI401184""><span id=""_COMPSCI401185"">7. </span><span id=""_COMPSCI401186"">Implement simple operating system components</span><span id=""_COMPSCI401187"">&nbsp;and basic algorithms (CPU scheduling, deadlock detection and avoidance algorithms);</span></p><p id=""_COMPSCI401188""><span id=""_COMPSCI401189"">8. </span><span id=""_COMPSCI401190"">Critique designs and implementations of OS components, </span><span id=""_COMPSCI401191"">eg</span><span id=""_COMPSCI401192"">&nbsp;the Unix file system;</span></p><p id=""_COMPSCI401193""><span id=""_COMPSCI401194"">9. </span><span id=""_COMPSCI401195"">Illustrate the influence of operating system functions on application behaviour;</span></p><p id=""_COMPSCI401196""><span id=""_COMPSCI401197"">10. </span><span id=""_COMPSCI401198"">Compare and contrast alternative approaches to hardware components such as the CPU and bus;</span></p><p id=""_COMPSCI401199""><span id=""_COMPSCI4011100"">11. </span><span id=""_COMPSCI4011101"">Engineer medium-sized (multi-file) software components for integration into larger C </span><span id=""_COMPSCI4011102"">and/or Java programs</span><span id=""_COMPSCI4011103"">.</span></p>",Operating Systems (H) COMPSCI4011,"<p id=""_COMPSCI40110""><span id=""_COMPSCI40111"">To introduce the students to the styles of coding required with an OS; </span></p><p id=""_COMPSCI40112""><span id=""_COMPSCI40113"">To give a thorough presentation of the contents of a traditional OS, including the key abstractions;</span></p><p id=""_COMPSCI40114""><span id=""_COMPSCI40115"">To show the range of algorithms and techniques available for specific OS problems, and the implications of selection specific algorithms for application behaviour; </span></p><p id=""_COMPSCI40116""><span id=""_COMPSCI40117"">To develop an integrated understanding of what the computer is doing, from a non-naive view of hardware to the behaviour of multi-threaded application processes; present the alternatives and clarify the trade-offs that drive OS and hardware design.</span></p>","<p id=""_COMPSCI401155""><span id=""_COMPSCI401156"">To introduce the students to the styles of coding required with an OS; </span></p><p id=""_COMPSCI401157""><span id=""_COMPSCI401158"">To give a thorough presentation of the contents of a traditional OS, including the key abstractions;</span></p><p id=""_COMPSCI401159""><span id=""_COMPSCI401160"">To show the range of algorithms and techniques available for specific OS problems, and the implications of selection specific algorithms for application behaviour; </span></p><p id=""_COMPSCI401161""><span id=""_COMPSCI401162"">To develop an integrated understanding of what the computer is doing, from a non-naive view of hardware to the behaviour of multi-threaded application processes; present the alternatives and clarify the trade-offs that drive OS and hardware design.</span></p>","<p id=""_COMPSCI401164""><span id=""_COMPSCI401165"">By the end of this course, students will be able to: </span></p><p id=""_COMPSCI401166""><span id=""_COMPSCI401167"">1. </span><span id=""_COMPSCI401168"">Use current operating system terminology in correctly explaining the functions of an OS;</span></p><p id=""_COMPSCI401169""><span id=""_COMPSCI401170"">2. </span><span id=""_COMPSCI401171"">Relate operating system functions to computer hardware;</span></p><p id=""_COMPSCI401172""><span id=""_COMPSCI401173"">3. </span><span id=""_COMPSCI401174"">Describe the mechanisms of interrupts, context switching and address translation;</span></p><p id=""_COMPSCI401175""><span id=""_COMPSCI401176"">4. </span><span id=""_COMPSCI401177"">Describe the relation of operating system functions to language run-time systems;</span></p><p id=""_COMPSCI401178""><span id=""_COMPSCI401179"">5. </span><span id=""_COMPSCI401180"">Explain the significance of concurrency in operating system design;</span></p><p id=""_COMPSCI401181""><span id=""_COMPSCI401182"">6. </span><span id=""_COMPSCI401183"">Demonstrate an understanding of the semantics of operating system functions, including scheduling and memory management, by being able to describe their functioning;</span></p><p id=""_COMPSCI401184""><span id=""_COMPSCI401185"">7. </span><span id=""_COMPSCI401186"">Implement simple operating system components</span><span id=""_COMPSCI401187"">&nbsp;and basic algorithms (CPU scheduling, deadlock detection and avoidance algorithms);</span></p><p id=""_COMPSCI401188""><span id=""_COMPSCI401189"">8. </span><span id=""_COMPSCI401190"">Critique designs and implementations of OS components, </span><span id=""_COMPSCI401191"">eg</span><span id=""_COMPSCI401192"">&nbsp;the Unix file system;</span></p><p id=""_COMPSCI401193""><span id=""_COMPSCI401194"">9. </span><span id=""_COMPSCI401195"">Illustrate the influence of operating system functions on application behaviour;</span></p><p id=""_COMPSCI401196""><span id=""_COMPSCI401197"">10. </span><span id=""_COMPSCI401198"">Compare and contrast alternative approaches to hardware components such as the CPU and bus;</span></p><p id=""_COMPSCI401199""><span id=""_COMPSCI4011100"">11. </span><span id=""_COMPSCI4011101"">Engineer medium-sized (multi-file) software components for integration into larger C </span><span id=""_COMPSCI4011102"">and/or Java programs</span><span id=""_COMPSCI4011103"">.</span></p>"
Glasgow_Scotland,COMPSCI4016,"<h2>title</h2>Programming Languages (H) COMPSCI4016<h2>summary</h2><p id=""_COMPSCI40160""><span id=""_COMPSCI40161"">This course aims to:</span></p><p id=""_COMPSCI40162""><span id=""_COMPSCI40163"">P</span><span id=""_COMPSCI40164"">rovide a conceptual framework that will enable students to understand familiar programming languages more deeply and learn new languages more efficiently;</span></p><p id=""_COMPSCI40165""><span id=""_COMPSCI40166"">S</span><span id=""_COMPSCI40167"">how how the syntax of a programming language can be formalized;</span></p><p id=""_COMPSCI40168""><span id=""_COMPSCI40169"">E</span><span id=""_COMPSCI401610"">xplain the functions of compilers and interpreters, how they interact, and how they work;</span></p><p id=""_COMPSCI401611""><span id=""_COMPSCI401612"">S</span><span id=""_COMPSCI401613"">how how to implement a compiler using compiler-generation tools.</span></p><h2>content</h2><p id=""_COMPSCI401644""><span id=""_COMPSCI401645"">This course aims to:</span></p><p id=""_COMPSCI401646""><span id=""_COMPSCI401647"">P</span><span id=""_COMPSCI401648"">rovide a conceptual framework that will enable students to understand familiar programming languages more deeply and learn new languages more efficiently;</span></p><p id=""_COMPSCI401649""><span id=""_COMPSCI401650"">S</span><span id=""_COMPSCI401651"">how how the syntax of a programming language can be formalized;</span></p><p id=""_COMPSCI401652""><span id=""_COMPSCI401653"">E</span><span id=""_COMPSCI401654"">xplain the functions of compilers and interpreters, how they interact, and how they work;</span></p><p id=""_COMPSCI401655""><span id=""_COMPSCI401656"">S</span><span id=""_COMPSCI401657"">how how to implement a compiler using compiler-generation tools.</span></p><h2>ilo</h2><p id=""_COMPSCI401659""><span id=""_COMPSCI401660"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI401661""><span id=""_COMPSCI401662"">1. </span><span id=""_COMPSCI401663"">Describe the relationships between the imperative, object-oriented, and functional programming paradigms;</span></p><p id=""_COMPSCI401664""><span id=""_COMPSCI401665"">2. </span><span id=""_COMPSCI401666"">Explain fundamental programming language concepts such as values and types, variables and lifetime, bindings and scope, procedural abstraction, data abstraction, and generic abstraction;</span></p><p id=""_COMPSCI401667""><span id=""_COMPSCI401668"">3. </span><span id=""_COMPSCI401669"">Explain the distinction between syntax and semantics, and read and write syntactic specifications of programming languages;</span></p><p id=""_COMPSCI401670""><span id=""_COMPSCI401671"">4. </span><span id=""_COMPSCI401672"">Explain the functions of compilers and interpreters, and compiler-interpreter interactions such as multi-stage compilers, interpretive compilers, and just-in-time compilers;</span></p><p id=""_COMPSCI401673""><span id=""_COMPSCI401674"">5. </span><span id=""_COMPSCI401675"">Implement a compiler and interpreter for a very simple programming language using compiler-generation tools.</span></p>",Programming Languages (H) COMPSCI4016,"<p id=""_COMPSCI40160""><span id=""_COMPSCI40161"">This course aims to:</span></p><p id=""_COMPSCI40162""><span id=""_COMPSCI40163"">P</span><span id=""_COMPSCI40164"">rovide a conceptual framework that will enable students to understand familiar programming languages more deeply and learn new languages more efficiently;</span></p><p id=""_COMPSCI40165""><span id=""_COMPSCI40166"">S</span><span id=""_COMPSCI40167"">how how the syntax of a programming language can be formalized;</span></p><p id=""_COMPSCI40168""><span id=""_COMPSCI40169"">E</span><span id=""_COMPSCI401610"">xplain the functions of compilers and interpreters, how they interact, and how they work;</span></p><p id=""_COMPSCI401611""><span id=""_COMPSCI401612"">S</span><span id=""_COMPSCI401613"">how how to implement a compiler using compiler-generation tools.</span></p>","<p id=""_COMPSCI401644""><span id=""_COMPSCI401645"">This course aims to:</span></p><p id=""_COMPSCI401646""><span id=""_COMPSCI401647"">P</span><span id=""_COMPSCI401648"">rovide a conceptual framework that will enable students to understand familiar programming languages more deeply and learn new languages more efficiently;</span></p><p id=""_COMPSCI401649""><span id=""_COMPSCI401650"">S</span><span id=""_COMPSCI401651"">how how the syntax of a programming language can be formalized;</span></p><p id=""_COMPSCI401652""><span id=""_COMPSCI401653"">E</span><span id=""_COMPSCI401654"">xplain the functions of compilers and interpreters, how they interact, and how they work;</span></p><p id=""_COMPSCI401655""><span id=""_COMPSCI401656"">S</span><span id=""_COMPSCI401657"">how how to implement a compiler using compiler-generation tools.</span></p>","<p id=""_COMPSCI401659""><span id=""_COMPSCI401660"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI401661""><span id=""_COMPSCI401662"">1. </span><span id=""_COMPSCI401663"">Describe the relationships between the imperative, object-oriented, and functional programming paradigms;</span></p><p id=""_COMPSCI401664""><span id=""_COMPSCI401665"">2. </span><span id=""_COMPSCI401666"">Explain fundamental programming language concepts such as values and types, variables and lifetime, bindings and scope, procedural abstraction, data abstraction, and generic abstraction;</span></p><p id=""_COMPSCI401667""><span id=""_COMPSCI401668"">3. </span><span id=""_COMPSCI401669"">Explain the distinction between syntax and semantics, and read and write syntactic specifications of programming languages;</span></p><p id=""_COMPSCI401670""><span id=""_COMPSCI401671"">4. </span><span id=""_COMPSCI401672"">Explain the functions of compilers and interpreters, and compiler-interpreter interactions such as multi-stage compilers, interpretive compilers, and just-in-time compilers;</span></p><p id=""_COMPSCI401673""><span id=""_COMPSCI401674"">5. </span><span id=""_COMPSCI401675"">Implement a compiler and interpreter for a very simple programming language using compiler-generation tools.</span></p>"
Glasgow_Scotland,COMPSCI4075,"<h2>title</h2>Recommender Systems (H) COMPSCI4075<h2>summary</h2><p id=""_COMPSCI40750""><span id=""_COMPSCI40751"">This course introduces the concepts, applications, algorithms, programming, and design of recommender systems -- software systems that recommend products or information, often based on extensive personalization. Recommender systems are</span><span id=""_COMPSCI40752"">&nbsp;widely used by many users on a day-to-day basis: </span><span id=""_COMPSCI40753"">while </span><span id=""_COMPSCI40754"">recommender systems </span><span id=""_COMPSCI40755"">have been pioneered by </span><span id=""_COMPSCI40756"">e-commerce sites such</span><span id=""_COMPSCI40757"">&nbsp;as</span><span id=""_COMPSCI40758"">&nbsp;Amazon</span><span id=""_COMPSCI40759"">&nbsp;and Netflix, they are widely used ranging in areas from marketing (e.g. personalized product recommendations </span><span id=""_COMPSCI407510"">with</span><span id=""_COMPSCI407511"">&nbsp;your </span><span id=""_COMPSCI407512"">supermarket loyalty card</span><span id=""_COMPSCI407513"">), education, social media, and financial services. This course discusses various techniques for making recommendations, including non-personalized, content-based, and collaborative recommendation techniques, </span><span id=""_COMPSCI407514"">and their evaluation.</span></p><h2>content</h2><p id=""_COMPSCI407534""><span id=""_COMPSCI407535"">Recommender systems are widely deployed stochastic retrieval systems - a search system that learns what to suggest to a user based upon no explicit user input (i.e. zero query), but make suggestions using what is known about the user or the demogr</span><span id=""_COMPSCI407536"">aphics that the user belongs to</span><span id=""_COMPSCI407537"">.</span><span id=""_COMPSCI407538"">&nbsp;With the prevalence of recommender systems, from e-commerce sites to supermarket loyalty cards, it can be seen </span><span id=""_COMPSCI407539"">recommendation technologies have the potential to be more ubiquitous than search technologies.</span><span id=""_COMPSCI407540"">&nbsp;</span><span id=""_COMPSCI407541"">This course introduces the concepts, applications, algorithms, programming, and design of recommender systems -- software systems that recommend products or information, often based on extensive personalization. This course discusses various techniques for making recommendations that are widely used in industry, including non-personalized, content-based, and collaborative recommendation techniques, and their evaluation.</span></p><h2>ilo</h2><p id=""_COMPSCI407543""><span id=""_COMPSCI407544"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407545""><span id=""_COMPSCI407546"">1. </span><span id=""_COMPSCI407547"">Describe the techniques in making automatic recommendations and </span><span id=""_COMPSCI407548"">personalising</span><span id=""_COMPSCI407549"">&nbsp;them for individual users.</span></p><p id=""_COMPSCI407550""><span id=""_COMPSCI407551"">2. </span><span id=""_COMPSCI407552"">Describe different recommendation system </span><span id=""_COMPSCI407553"">scenarios,</span><span id=""_COMPSCI407554"">&nbsp;and models suitable for deployment therein</span><span id=""_COMPSCI407555"">.</span></p><p id=""_COMPSCI407556""><span id=""_COMPSCI407557"">3. </span><span id=""_COMPSCI407558"">Discuss how a recommender system should be evaluated in terms of the system's performance and the user's satisfaction with the system</span><span id=""_COMPSCI407559"">.</span></p><p id=""_COMPSCI407560""><span id=""_COMPSCI407561"">4. </span><span id=""_COMPSCI407562"">Describe the practical engineering issues raised by the implementation of a recommender system in a real deployment</span><span id=""_COMPSCI407563"">.</span></p><p id=""_COMPSCI407564""><span id=""_COMPSCI407565"">5. </span><span id=""_COMPSCI407566"">Implement </span><span id=""_COMPSCI407567"">and evaluate </span><span id=""_COMPSCI407568"">a standard recommender system.</span></p>",Recommender Systems (H) COMPSCI4075,"<p id=""_COMPSCI40750""><span id=""_COMPSCI40751"">This course introduces the concepts, applications, algorithms, programming, and design of recommender systems -- software systems that recommend products or information, often based on extensive personalization. Recommender systems are</span><span id=""_COMPSCI40752"">&nbsp;widely used by many users on a day-to-day basis: </span><span id=""_COMPSCI40753"">while </span><span id=""_COMPSCI40754"">recommender systems </span><span id=""_COMPSCI40755"">have been pioneered by </span><span id=""_COMPSCI40756"">e-commerce sites such</span><span id=""_COMPSCI40757"">&nbsp;as</span><span id=""_COMPSCI40758"">&nbsp;Amazon</span><span id=""_COMPSCI40759"">&nbsp;and Netflix, they are widely used ranging in areas from marketing (e.g. personalized product recommendations </span><span id=""_COMPSCI407510"">with</span><span id=""_COMPSCI407511"">&nbsp;your </span><span id=""_COMPSCI407512"">supermarket loyalty card</span><span id=""_COMPSCI407513"">), education, social media, and financial services. This course discusses various techniques for making recommendations, including non-personalized, content-based, and collaborative recommendation techniques, </span><span id=""_COMPSCI407514"">and their evaluation.</span></p>","<p id=""_COMPSCI407534""><span id=""_COMPSCI407535"">Recommender systems are widely deployed stochastic retrieval systems - a search system that learns what to suggest to a user based upon no explicit user input (i.e. zero query), but make suggestions using what is known about the user or the demogr</span><span id=""_COMPSCI407536"">aphics that the user belongs to</span><span id=""_COMPSCI407537"">.</span><span id=""_COMPSCI407538"">&nbsp;With the prevalence of recommender systems, from e-commerce sites to supermarket loyalty cards, it can be seen </span><span id=""_COMPSCI407539"">recommendation technologies have the potential to be more ubiquitous than search technologies.</span><span id=""_COMPSCI407540"">&nbsp;</span><span id=""_COMPSCI407541"">This course introduces the concepts, applications, algorithms, programming, and design of recommender systems -- software systems that recommend products or information, often based on extensive personalization. This course discusses various techniques for making recommendations that are widely used in industry, including non-personalized, content-based, and collaborative recommendation techniques, and their evaluation.</span></p>","<p id=""_COMPSCI407543""><span id=""_COMPSCI407544"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407545""><span id=""_COMPSCI407546"">1. </span><span id=""_COMPSCI407547"">Describe the techniques in making automatic recommendations and </span><span id=""_COMPSCI407548"">personalising</span><span id=""_COMPSCI407549"">&nbsp;them for individual users.</span></p><p id=""_COMPSCI407550""><span id=""_COMPSCI407551"">2. </span><span id=""_COMPSCI407552"">Describe different recommendation system </span><span id=""_COMPSCI407553"">scenarios,</span><span id=""_COMPSCI407554"">&nbsp;and models suitable for deployment therein</span><span id=""_COMPSCI407555"">.</span></p><p id=""_COMPSCI407556""><span id=""_COMPSCI407557"">3. </span><span id=""_COMPSCI407558"">Discuss how a recommender system should be evaluated in terms of the system's performance and the user's satisfaction with the system</span><span id=""_COMPSCI407559"">.</span></p><p id=""_COMPSCI407560""><span id=""_COMPSCI407561"">4. </span><span id=""_COMPSCI407562"">Describe the practical engineering issues raised by the implementation of a recommender system in a real deployment</span><span id=""_COMPSCI407563"">.</span></p><p id=""_COMPSCI407564""><span id=""_COMPSCI407565"">5. </span><span id=""_COMPSCI407566"">Implement </span><span id=""_COMPSCI407567"">and evaluate </span><span id=""_COMPSCI407568"">a standard recommender system.</span></p>"
Glasgow_Scotland,COMPSCI4076,"<h2>title</h2>Robotics Foundations (H) COMPSCI4076<h2>summary</h2><p id=""_COMPSCI40760""><span id=""_COMPSCI40761"">This course will introduce students to the computational</span><span id=""_COMPSCI40762"">&nbsp;and mathematical</span><span id=""_COMPSCI40763"">&nbsp;concepts, information processing and software frameworks of robotic systems. It will also consider the sensory and actuation systems required by a robot to sense, understand and interact with its environment. The primary aim is to give students an understanding of how to prototype and implement </span><span id=""_COMPSCI40764"">autonomous </span><span id=""_COMPSCI40765"">robotic systems by making use of </span><span id=""_COMPSCI40766"">a </span><span id=""_COMPSCI40767"">sophisticated robotic middleware (e.g. Robot Operating System (ROS)), its associated data transmission channels</span><span id=""_COMPSCI40768"">, </span><span id=""_COMPSCI40769"">software </span><span id=""_COMPSCI407610"">robotic </span><span id=""_COMPSCI407611"">stacks</span><span id=""_COMPSCI407612"">&nbsp;and the underlying mathematics required to operate a robot</span><span id=""_COMPSCI407613"">. </span><span id=""_COMPSCI407614"">This</span><span id=""_COMPSCI407615"">&nbsp;is a hands-on course, designed to provide </span><span id=""_COMPSCI407616"">student</span><span id=""_COMPSCI407617"">s with the required programming</span><span id=""_COMPSCI407618"">, mathematical</span><span id=""_COMPSCI407619"">&nbsp;and debugging skill-set to implement robotic solutions based on</span><span id=""_COMPSCI407620"">&nbsp;the</span><span id=""_COMPSCI407621"">&nbsp;use of off-the-shelf commercially available real and virtual robots.</span><span id=""_COMPSCI407622"">&nbsp;P</span><span id=""_COMPSCI407623"">ython skills are a requirement for this course</span><span id=""_COMPSCI407624"">; </span><span id=""_COMPSCI407625"">C/C++ skills are desirable but not essential</span><span id=""_COMPSCI407626"">.</span></p><h2>content</h2><p id=""_COMPSCI407653""><span id=""_COMPSCI407654"">The aims of Robotics Foundations are:</span></p><p id=""_COMPSCI407655""><span id=""_COMPSCI407656"">■&nbsp;</span><span id=""_COMPSCI407657"">To facilitate students understanding of </span><span id=""_COMPSCI407658"">core concepts involved in robot</span><span id=""_COMPSCI407659"">ic software </span><span id=""_COMPSCI407660"">development</span><span id=""_COMPSCI407661"">, from perception to planning and action</span><span id=""_COMPSCI407662"">;</span></p><p id=""_COMPSCI407663""><span id=""_COMPSCI407664"">■&nbsp;</span><span id=""_COMPSCI407665"">To </span><span id=""_COMPSCI407666"">understand</span><span id=""_COMPSCI407667"">&nbsp;</span><span id=""_COMPSCI407668"">how sensed data and pre-obtained information, or world/domain ""knowledge"", is used to plan interaction with the environment</span></p><p id=""_COMPSCI407669""><span id=""_COMPSCI407670"">■&nbsp;</span><span id=""_COMPSCI407671"">To understand matrix and </span><span id=""_COMPSCI407672"">transformation </span><span id=""_COMPSCI407673"">mathematical </span><span id=""_COMPSCI407674"">operators to accomplish complex robotic motions.</span></p><p id=""_COMPSCI407675""><span id=""_COMPSCI407676"">■&nbsp;</span><span id=""_COMPSCI407677"">To develop the ability to implement, test</span><span id=""_COMPSCI407678"">, validate and deploy a </span><span id=""_COMPSCI407679"">mobile/manipulation robotic problem, based on </span><span id=""_COMPSCI407680"">the </span><span id=""_COMPSCI407681"">use of </span><span id=""_COMPSCI407682"">the</span><span id=""_COMPSCI407683"">&nbsp;</span><span id=""_COMPSCI407684"">R</span><span id=""_COMPSCI407685"">obot </span><span id=""_COMPSCI407686"">O</span><span id=""_COMPSCI407687"">perating </span><span id=""_COMPSCI407688"">S</span><span id=""_COMPSCI407689"">ystem</span><span id=""_COMPSCI407690"">.</span></p><p id=""_COMPSCI407691""><span id=""_COMPSCI407692"">■&nbsp;</span><span id=""_COMPSCI407693"">The relationship between physical robots and their virtual equivalents required for simulation, development </span><span id=""_COMPSCI407694"">and debugging</span><span id=""_COMPSCI407695"">&nbsp;will also be considered.</span></p><p id=""_COMPSCI407696""><span id=""_COMPSCI407697"">■&nbsp;</span><span id=""_COMPSCI407698"">To develop a complete robotic application using off-the-shelf virtual robotic platforms.</span></p><h2>ilo</h2><p id=""_COMPSCI4076100""><span id=""_COMPSCI4076101"">By the end of this course</span><span id=""_COMPSCI4076102"">,</span><span id=""_COMPSCI4076103"">&nbsp;students will be able to:</span></p><p id=""_COMPSCI4076104"">&nbsp;</p><p id=""_COMPSCI4076105""><span id=""_COMPSCI4076106"">1. </span><span id=""_COMPSCI4076107"">Describe </span><span id=""_COMPSCI4076108"">and understand </span><span id=""_COMPSCI4076109"">what constitutes a robot system</span></p><p id=""_COMPSCI4076110""><span id=""_COMPSCI4076111"">2. </span><span id=""_COMPSCI4076112"">Formulate</span><span id=""_COMPSCI4076113"">&nbsp;robot's information capabilities within robotic middleware and understand how data is transformed </span><span id=""_COMPSCI4076114"">from basic</span><span id=""_COMPSCI4076115"">&nbsp;control, sensor and perception functions to robot actions</span></p><p id=""_COMPSCI4076116""><span id=""_COMPSCI4076117"">3. </span><span id=""_COMPSCI4076118"">Create and implement</span><span id=""_COMPSCI4076119"">&nbsp;robot kinematics and motions in mobile robots and robot manipulators</span></p><p id=""_COMPSCI4076120""><span id=""_COMPSCI4076121"">4. </span><span id=""_COMPSCI4076122"">Apply techniques for path and motion planning that allows a robot to move</span></p><p id=""_COMPSCI4076123""><span id=""_COMPSCI4076124"">5. </span><span id=""_COMPSCI4076125"">Design control/behaviour tasks for mobile robots and robot manipulators</span></p><p id=""_COMPSCI4076126""><span id=""_COMPSCI4076127"">6. </span><span id=""_COMPSCI4076128"">Apply</span><span id=""_COMPSCI4076129"">&nbsp;practical software engineering principles during the development of a robotic application</span></p><p id=""_COMPSCI4076130""><span id=""_COMPSCI4076131"">7. </span><span id=""_COMPSCI4076132"">Understand the facilities provided by ROS and how to structure robot control software systems using ROS and vision systems in </span><span id=""_COMPSCI4076133"">OpenCV</span><span id=""_COMPSCI4076134"">.</span></p><p id=""_COMPSCI4076135""><span id=""_COMPSCI4076136"">8. </span><span id=""_COMPSCI4076137"">Be able to program a data processing pipeline consisting of a robot control system in the ROS environment to carry out a specific task, such as locating an object, grasping it and placing it in another location.</span></p>",Robotics Foundations (H) COMPSCI4076,"<p id=""_COMPSCI40760""><span id=""_COMPSCI40761"">This course will introduce students to the computational</span><span id=""_COMPSCI40762"">&nbsp;and mathematical</span><span id=""_COMPSCI40763"">&nbsp;concepts, information processing and software frameworks of robotic systems. It will also consider the sensory and actuation systems required by a robot to sense, understand and interact with its environment. The primary aim is to give students an understanding of how to prototype and implement </span><span id=""_COMPSCI40764"">autonomous </span><span id=""_COMPSCI40765"">robotic systems by making use of </span><span id=""_COMPSCI40766"">a </span><span id=""_COMPSCI40767"">sophisticated robotic middleware (e.g. Robot Operating System (ROS)), its associated data transmission channels</span><span id=""_COMPSCI40768"">, </span><span id=""_COMPSCI40769"">software </span><span id=""_COMPSCI407610"">robotic </span><span id=""_COMPSCI407611"">stacks</span><span id=""_COMPSCI407612"">&nbsp;and the underlying mathematics required to operate a robot</span><span id=""_COMPSCI407613"">. </span><span id=""_COMPSCI407614"">This</span><span id=""_COMPSCI407615"">&nbsp;is a hands-on course, designed to provide </span><span id=""_COMPSCI407616"">student</span><span id=""_COMPSCI407617"">s with the required programming</span><span id=""_COMPSCI407618"">, mathematical</span><span id=""_COMPSCI407619"">&nbsp;and debugging skill-set to implement robotic solutions based on</span><span id=""_COMPSCI407620"">&nbsp;the</span><span id=""_COMPSCI407621"">&nbsp;use of off-the-shelf commercially available real and virtual robots.</span><span id=""_COMPSCI407622"">&nbsp;P</span><span id=""_COMPSCI407623"">ython skills are a requirement for this course</span><span id=""_COMPSCI407624"">; </span><span id=""_COMPSCI407625"">C/C++ skills are desirable but not essential</span><span id=""_COMPSCI407626"">.</span></p>","<p id=""_COMPSCI407653""><span id=""_COMPSCI407654"">The aims of Robotics Foundations are:</span></p><p id=""_COMPSCI407655""><span id=""_COMPSCI407656"">■&nbsp;</span><span id=""_COMPSCI407657"">To facilitate students understanding of </span><span id=""_COMPSCI407658"">core concepts involved in robot</span><span id=""_COMPSCI407659"">ic software </span><span id=""_COMPSCI407660"">development</span><span id=""_COMPSCI407661"">, from perception to planning and action</span><span id=""_COMPSCI407662"">;</span></p><p id=""_COMPSCI407663""><span id=""_COMPSCI407664"">■&nbsp;</span><span id=""_COMPSCI407665"">To </span><span id=""_COMPSCI407666"">understand</span><span id=""_COMPSCI407667"">&nbsp;</span><span id=""_COMPSCI407668"">how sensed data and pre-obtained information, or world/domain ""knowledge"", is used to plan interaction with the environment</span></p><p id=""_COMPSCI407669""><span id=""_COMPSCI407670"">■&nbsp;</span><span id=""_COMPSCI407671"">To understand matrix and </span><span id=""_COMPSCI407672"">transformation </span><span id=""_COMPSCI407673"">mathematical </span><span id=""_COMPSCI407674"">operators to accomplish complex robotic motions.</span></p><p id=""_COMPSCI407675""><span id=""_COMPSCI407676"">■&nbsp;</span><span id=""_COMPSCI407677"">To develop the ability to implement, test</span><span id=""_COMPSCI407678"">, validate and deploy a </span><span id=""_COMPSCI407679"">mobile/manipulation robotic problem, based on </span><span id=""_COMPSCI407680"">the </span><span id=""_COMPSCI407681"">use of </span><span id=""_COMPSCI407682"">the</span><span id=""_COMPSCI407683"">&nbsp;</span><span id=""_COMPSCI407684"">R</span><span id=""_COMPSCI407685"">obot </span><span id=""_COMPSCI407686"">O</span><span id=""_COMPSCI407687"">perating </span><span id=""_COMPSCI407688"">S</span><span id=""_COMPSCI407689"">ystem</span><span id=""_COMPSCI407690"">.</span></p><p id=""_COMPSCI407691""><span id=""_COMPSCI407692"">■&nbsp;</span><span id=""_COMPSCI407693"">The relationship between physical robots and their virtual equivalents required for simulation, development </span><span id=""_COMPSCI407694"">and debugging</span><span id=""_COMPSCI407695"">&nbsp;will also be considered.</span></p><p id=""_COMPSCI407696""><span id=""_COMPSCI407697"">■&nbsp;</span><span id=""_COMPSCI407698"">To develop a complete robotic application using off-the-shelf virtual robotic platforms.</span></p>","<p id=""_COMPSCI4076100""><span id=""_COMPSCI4076101"">By the end of this course</span><span id=""_COMPSCI4076102"">,</span><span id=""_COMPSCI4076103"">&nbsp;students will be able to:</span></p><p id=""_COMPSCI4076104"">&nbsp;</p><p id=""_COMPSCI4076105""><span id=""_COMPSCI4076106"">1. </span><span id=""_COMPSCI4076107"">Describe </span><span id=""_COMPSCI4076108"">and understand </span><span id=""_COMPSCI4076109"">what constitutes a robot system</span></p><p id=""_COMPSCI4076110""><span id=""_COMPSCI4076111"">2. </span><span id=""_COMPSCI4076112"">Formulate</span><span id=""_COMPSCI4076113"">&nbsp;robot's information capabilities within robotic middleware and understand how data is transformed </span><span id=""_COMPSCI4076114"">from basic</span><span id=""_COMPSCI4076115"">&nbsp;control, sensor and perception functions to robot actions</span></p><p id=""_COMPSCI4076116""><span id=""_COMPSCI4076117"">3. </span><span id=""_COMPSCI4076118"">Create and implement</span><span id=""_COMPSCI4076119"">&nbsp;robot kinematics and motions in mobile robots and robot manipulators</span></p><p id=""_COMPSCI4076120""><span id=""_COMPSCI4076121"">4. </span><span id=""_COMPSCI4076122"">Apply techniques for path and motion planning that allows a robot to move</span></p><p id=""_COMPSCI4076123""><span id=""_COMPSCI4076124"">5. </span><span id=""_COMPSCI4076125"">Design control/behaviour tasks for mobile robots and robot manipulators</span></p><p id=""_COMPSCI4076126""><span id=""_COMPSCI4076127"">6. </span><span id=""_COMPSCI4076128"">Apply</span><span id=""_COMPSCI4076129"">&nbsp;practical software engineering principles during the development of a robotic application</span></p><p id=""_COMPSCI4076130""><span id=""_COMPSCI4076131"">7. </span><span id=""_COMPSCI4076132"">Understand the facilities provided by ROS and how to structure robot control software systems using ROS and vision systems in </span><span id=""_COMPSCI4076133"">OpenCV</span><span id=""_COMPSCI4076134"">.</span></p><p id=""_COMPSCI4076135""><span id=""_COMPSCI4076136"">8. </span><span id=""_COMPSCI4076137"">Be able to program a data processing pipeline consisting of a robot control system in the ROS environment to carry out a specific task, such as locating an object, grasping it and placing it in another location.</span></p>"
Glasgow_Scotland,COMPSCI4087,"<h2>title</h2>Startup Growth Engineering (H) COMPSCI4087<h2>summary</h2><p id=""_COMPSCI40870""><span id=""_COMPSCI40871"">Start-up Growth Engineering comprises the techniques and best practices applied by the world's most successful tech companies to exponentially grow from the start-up phase into large-scale organisations, with millions of users.  These techniques have been distilled from best practices employed across start-ups in the Silicon Valley and elsewhere.   Start-up Growth Engineering moves beyond traditional product development and marketing activities into an integrated, scientific approach to introducing a new product idea into a market and driving viral user growth.    </span></p><p id=""_COMPSCI40872"">&nbsp;</p><p id=""_COMPSCI40873""><span id=""_COMPSCI40874"">The Start-up Growth Engineering course combines theory with a large number of practical examples taken from well-known organisations.  It equips students with the skills to employ their software engineering and product development skills more effectively, in a real-world environment.</span></p><h2>content</h2><p id=""_COMPSCI408740""><span id=""_COMPSCI408741"">To familiarise students with the fundamental techniques used by tech companies to drive exponential user growth, including user retention techniques, the different types of compounding growth mechanisms, and optimization techniques.</span></p><p id=""_COMPSCI408742"">&nbsp;</p><p id=""_COMPSCI408743""><span id=""_COMPSCI408744"">To equip students with the analytical and strategy skills necessary to analyse real-world start-up growth trajectories and construct predictive and optimisation models to drive user growth.    </span></p><p id=""_COMPSCI408745"">&nbsp;</p><p id=""_COMPSCI408746""><span id=""_COMPSCI408747"">To enable students to apply these techniques in team situations and to gain an understanding of the typical Growth Engineering team structures and processes employed in Silicon Valley and other leading start-up incubation areas</span><span id=""_COMPSCI408748"">.</span></p><h2>ilo</h2><p id=""_COMPSCI408750""><span id=""_COMPSCI408751"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI408752""><span id=""_COMPSCI408753"">1. </span><span id=""_COMPSCI408754"">explain and apply the techniques used to create viral user growth in tech companies;</span></p><p id=""_COMPSCI408755""><span id=""_COMPSCI408756"">2. </span><span id=""_COMPSCI408757"">create a growth strategy for a start-up, designed to drive exponential growth.</span></p><p id=""_COMPSCI408758""><span id=""_COMPSCI408759"">3. </span><span id=""_COMPSCI408760"">explain the key metrics involved in driving start-up exponential growth, and how to optimise those metrics;</span></p><p id=""_COMPSCI408761""><span id=""_COMPSCI408762"">4. </span><span id=""_COMPSCI408763"">qualitatively and quantitatively predict the growth performance of a product or start-up based on current growth metrics</span></p><p id=""_COMPSCI408764""><span id=""_COMPSCI408765"">5. </span><span id=""_COMPSCI408766"">analyse and explain why some start-ups grow into very large-scale organisations, while others with similar products fail;</span></p><p id=""_COMPSCI408767""><span id=""_COMPSCI408768"">6. </span><span id=""_COMPSCI408769"">explain how growth teams are configured inside leading start-ups and the development models used by them.</span></p>",Startup Growth Engineering (H) COMPSCI4087,"<p id=""_COMPSCI40870""><span id=""_COMPSCI40871"">Start-up Growth Engineering comprises the techniques and best practices applied by the world's most successful tech companies to exponentially grow from the start-up phase into large-scale organisations, with millions of users.  These techniques have been distilled from best practices employed across start-ups in the Silicon Valley and elsewhere.   Start-up Growth Engineering moves beyond traditional product development and marketing activities into an integrated, scientific approach to introducing a new product idea into a market and driving viral user growth.    </span></p><p id=""_COMPSCI40872"">&nbsp;</p><p id=""_COMPSCI40873""><span id=""_COMPSCI40874"">The Start-up Growth Engineering course combines theory with a large number of practical examples taken from well-known organisations.  It equips students with the skills to employ their software engineering and product development skills more effectively, in a real-world environment.</span></p>","<p id=""_COMPSCI408740""><span id=""_COMPSCI408741"">To familiarise students with the fundamental techniques used by tech companies to drive exponential user growth, including user retention techniques, the different types of compounding growth mechanisms, and optimization techniques.</span></p><p id=""_COMPSCI408742"">&nbsp;</p><p id=""_COMPSCI408743""><span id=""_COMPSCI408744"">To equip students with the analytical and strategy skills necessary to analyse real-world start-up growth trajectories and construct predictive and optimisation models to drive user growth.    </span></p><p id=""_COMPSCI408745"">&nbsp;</p><p id=""_COMPSCI408746""><span id=""_COMPSCI408747"">To enable students to apply these techniques in team situations and to gain an understanding of the typical Growth Engineering team structures and processes employed in Silicon Valley and other leading start-up incubation areas</span><span id=""_COMPSCI408748"">.</span></p>","<p id=""_COMPSCI408750""><span id=""_COMPSCI408751"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI408752""><span id=""_COMPSCI408753"">1. </span><span id=""_COMPSCI408754"">explain and apply the techniques used to create viral user growth in tech companies;</span></p><p id=""_COMPSCI408755""><span id=""_COMPSCI408756"">2. </span><span id=""_COMPSCI408757"">create a growth strategy for a start-up, designed to drive exponential growth.</span></p><p id=""_COMPSCI408758""><span id=""_COMPSCI408759"">3. </span><span id=""_COMPSCI408760"">explain the key metrics involved in driving start-up exponential growth, and how to optimise those metrics;</span></p><p id=""_COMPSCI408761""><span id=""_COMPSCI408762"">4. </span><span id=""_COMPSCI408763"">qualitatively and quantitatively predict the growth performance of a product or start-up based on current growth metrics</span></p><p id=""_COMPSCI408764""><span id=""_COMPSCI408765"">5. </span><span id=""_COMPSCI408766"">analyse and explain why some start-ups grow into very large-scale organisations, while others with similar products fail;</span></p><p id=""_COMPSCI408767""><span id=""_COMPSCI408768"">6. </span><span id=""_COMPSCI408769"">explain how growth teams are configured inside leading start-ups and the development models used by them.</span></p>"
Glasgow_Scotland,COMPSCI4074,"<h2>title</h2>Text as Data - An Introduction to Document Analytics (H) COMPSCI4074<h2>summary</h2><p id=""_COMPSCI40740""><span id=""_COMPSCI40741"">This course will introduce stochastic notions necessary for analysing text/documents, in both unsupervised and supervised approaches.</span><span id=""_COMPSCI40742"">&nbsp;</span><span id=""_COMPSCI40743"">The course is designed to be applied in nature, using various text analytics examples, and introducing students to various toolkits for document processing (e.g. Weka/Spark Mlib).</span></p><h2>content</h2><p id=""_COMPSCI407418""><span id=""_COMPSCI407419"">This course aims to introduce students to </span><span id=""_COMPSCI407420"">language modelling, geometric interpretations of documents, information theory, network models and in general the use of </span><span id=""_COMPSCI407421"">stochastic thinking (including building on the probability theory learned during the </span><span id=""_COMPSCI407422"">Data Fundamentals</span><span id=""_COMPSCI407423"">&nbsp;c</span><span id=""_COMPSCI407424"">ourse). This is</span><span id=""_COMPSCI407425"">&nbsp;illustrated through </span><span id=""_COMPSCI407426"">a number of</span><span id=""_COMPSCI407427"">&nbsp;supervised and unsupervised text processing and analytics approaches</span><span id=""_COMPSCI407428"">&nbsp;as well as their applications such as bibliometric analysis, web link analysis, and social media analytics</span><span id=""_COMPSCI407429"">. </span><span id=""_COMPSCI407430"">&nbsp;</span><span id=""_COMPSCI407431"">The course is designed to be applied in nature, using text analytics as an example, and introducing students to various toolkits for document processing (e.g. Weka/Spark </span><span id=""_COMPSCI407432"">Mlib</span><span id=""_COMPSCI407433"">).</span></p><h2>ilo</h2><p id=""_COMPSCI407436""><span id=""_COMPSCI407437"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407438""><span id=""_COMPSCI407439"">1. </span><span id=""_COMPSCI407440"">Describe classical models</span><span id=""_COMPSCI407441"">&nbsp;for textual representations</span><span id=""_COMPSCI407442"">&nbsp;such as the vector space, network graphs, language modelling.</span></p><p id=""_COMPSCI407443""><span id=""_COMPSCI407444"">2. </span><span id=""_COMPSCI407445"">Identify potential applications of text analytics in practice.  </span></p><p id=""_COMPSCI407446""><span id=""_COMPSCI407447"">3. </span><span id=""_COMPSCI407448"">Describe various common techniques for regression, classification, clustering and topic modelling, and select the appropriate machine learning task for a potential document processing application.</span></p><p id=""_COMPSCI407449""><span id=""_COMPSCI407450"">4. </span><span id=""_COMPSCI407451"">Represent data as features to serve as input to machine learning models. </span></p><p id=""_COMPSCI407452""><span id=""_COMPSCI407453"">5. </span><span id=""_COMPSCI407454"">Assess machine learning model quality in terms</span><span id=""_COMPSCI407455"">&nbsp;of relevant error metrics for</span><span id=""_COMPSCI407456"">&nbsp;document processing tasks, in an appropriate experimental design.</span></p><p id=""_COMPSCI407457""><span id=""_COMPSCI407458"">6. </span><span id=""_COMPSCI407459"">Deploy unsupervised and machine learned approaches for document/text analytics tasks.</span></p>",Text as Data - An Introduction to Document Analytics (H) COMPSCI4074,"<p id=""_COMPSCI40740""><span id=""_COMPSCI40741"">This course will introduce stochastic notions necessary for analysing text/documents, in both unsupervised and supervised approaches.</span><span id=""_COMPSCI40742"">&nbsp;</span><span id=""_COMPSCI40743"">The course is designed to be applied in nature, using various text analytics examples, and introducing students to various toolkits for document processing (e.g. Weka/Spark Mlib).</span></p>","<p id=""_COMPSCI407418""><span id=""_COMPSCI407419"">This course aims to introduce students to </span><span id=""_COMPSCI407420"">language modelling, geometric interpretations of documents, information theory, network models and in general the use of </span><span id=""_COMPSCI407421"">stochastic thinking (including building on the probability theory learned during the </span><span id=""_COMPSCI407422"">Data Fundamentals</span><span id=""_COMPSCI407423"">&nbsp;c</span><span id=""_COMPSCI407424"">ourse). This is</span><span id=""_COMPSCI407425"">&nbsp;illustrated through </span><span id=""_COMPSCI407426"">a number of</span><span id=""_COMPSCI407427"">&nbsp;supervised and unsupervised text processing and analytics approaches</span><span id=""_COMPSCI407428"">&nbsp;as well as their applications such as bibliometric analysis, web link analysis, and social media analytics</span><span id=""_COMPSCI407429"">. </span><span id=""_COMPSCI407430"">&nbsp;</span><span id=""_COMPSCI407431"">The course is designed to be applied in nature, using text analytics as an example, and introducing students to various toolkits for document processing (e.g. Weka/Spark </span><span id=""_COMPSCI407432"">Mlib</span><span id=""_COMPSCI407433"">).</span></p>","<p id=""_COMPSCI407436""><span id=""_COMPSCI407437"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407438""><span id=""_COMPSCI407439"">1. </span><span id=""_COMPSCI407440"">Describe classical models</span><span id=""_COMPSCI407441"">&nbsp;for textual representations</span><span id=""_COMPSCI407442"">&nbsp;such as the vector space, network graphs, language modelling.</span></p><p id=""_COMPSCI407443""><span id=""_COMPSCI407444"">2. </span><span id=""_COMPSCI407445"">Identify potential applications of text analytics in practice.  </span></p><p id=""_COMPSCI407446""><span id=""_COMPSCI407447"">3. </span><span id=""_COMPSCI407448"">Describe various common techniques for regression, classification, clustering and topic modelling, and select the appropriate machine learning task for a potential document processing application.</span></p><p id=""_COMPSCI407449""><span id=""_COMPSCI407450"">4. </span><span id=""_COMPSCI407451"">Represent data as features to serve as input to machine learning models. </span></p><p id=""_COMPSCI407452""><span id=""_COMPSCI407453"">5. </span><span id=""_COMPSCI407454"">Assess machine learning model quality in terms</span><span id=""_COMPSCI407455"">&nbsp;of relevant error metrics for</span><span id=""_COMPSCI407456"">&nbsp;document processing tasks, in an appropriate experimental design.</span></p><p id=""_COMPSCI407457""><span id=""_COMPSCI407458"">6. </span><span id=""_COMPSCI407459"">Deploy unsupervised and machine learned approaches for document/text analytics tasks.</span></p>"
Glasgow_Scotland,COMPSCI4072,"<h2>title</h2>Theory of Computation (H) COMPSCI4072<h2>summary</h2><p id=""_COMPSCI40720""><span id=""_COMPSCI40721"">This course covers the theory of sequential and concurrent computation. The main topics include the lambda calculus as a foundation for functional computation and the pi calculus as a foundation for concurrent computation; the theory of operational semantics and type systems for both these calculi.</span></p><h2>content</h2><p id=""_COMPSCI407222""><span id=""_COMPSCI407223"">The aim of the course is to show how these two models of computation can be formally defined in order to give a rigorous foundation for sequential and concurrent programming paradigms.</span></p><h2>ilo</h2><p id=""_COMPSCI407224""><span id=""_COMPSCI407225"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407226""><span id=""_COMPSCI407227"">1. </span><span id=""_COMPSCI407228"">Express concepts such as syntax, semantics and typing rules in a formal way;</span></p><p id=""_COMPSCI407229""><span id=""_COMPSCI407230"">2. </span><span id=""_COMPSCI407231"">Evaluate expressions in lambda calculus according to the definition of the reduction relation</span><span id=""_COMPSCI407232"">;</span></p><p id=""_COMPSCI407233""><span id=""_COMPSCI407234"">3. </span><span id=""_COMPSCI407235"">Determine whether or not expressions in lambda calculus are typable in the simple type system</span><span id=""_COMPSCI407236"">;</span></p><p id=""_COMPSCI407237""><span id=""_COMPSCI407238"">4. </span><span id=""_COMPSCI407239"">Implement lambda calculus expressions in a functional language such as Haskell or ML, or the functional fragment of Python</span><span id=""_COMPSCI407240"">;</span></p><p id=""_COMPSCI407241""><span id=""_COMPSCI407242"">5. </span><span id=""_COMPSCI407243"">Execute pi calculus processes according to the definition </span><span id=""_COMPSCI407244"">of the reduction relation, and determine </span><span id=""_COMPSCI407245"">bisimulation</span><span id=""_COMPSCI407246"">&nbsp;relationships between processes;</span></p><p id=""_COMPSCI407247""><span id=""_COMPSCI407248"">6. </span><span id=""_COMPSCI407249"">Determine whether or not processes in pi calculus are typable in the simple type system</span><span id=""_COMPSCI407250"">;</span></p><p id=""_COMPSCI407251""><span id=""_COMPSCI407252"">7. </span><span id=""_COMPSCI407253"">Implement pi calculus processes in a simulation environment or in an appropriate fragment of the Go programming language</span><span id=""_COMPSCI407254"">;</span></p><p id=""_COMPSCI407255""><span id=""_COMPSCI407256"">8. </span><span id=""_COMPSCI407257"">Connect both the lambda calculus and the pi calculus to logic under Curry-Howard correspondences, which make the foundation for functional and concurrent programming.</span></p>",Theory of Computation (H) COMPSCI4072,"<p id=""_COMPSCI40720""><span id=""_COMPSCI40721"">This course covers the theory of sequential and concurrent computation. The main topics include the lambda calculus as a foundation for functional computation and the pi calculus as a foundation for concurrent computation; the theory of operational semantics and type systems for both these calculi.</span></p>","<p id=""_COMPSCI407222""><span id=""_COMPSCI407223"">The aim of the course is to show how these two models of computation can be formally defined in order to give a rigorous foundation for sequential and concurrent programming paradigms.</span></p>","<p id=""_COMPSCI407224""><span id=""_COMPSCI407225"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407226""><span id=""_COMPSCI407227"">1. </span><span id=""_COMPSCI407228"">Express concepts such as syntax, semantics and typing rules in a formal way;</span></p><p id=""_COMPSCI407229""><span id=""_COMPSCI407230"">2. </span><span id=""_COMPSCI407231"">Evaluate expressions in lambda calculus according to the definition of the reduction relation</span><span id=""_COMPSCI407232"">;</span></p><p id=""_COMPSCI407233""><span id=""_COMPSCI407234"">3. </span><span id=""_COMPSCI407235"">Determine whether or not expressions in lambda calculus are typable in the simple type system</span><span id=""_COMPSCI407236"">;</span></p><p id=""_COMPSCI407237""><span id=""_COMPSCI407238"">4. </span><span id=""_COMPSCI407239"">Implement lambda calculus expressions in a functional language such as Haskell or ML, or the functional fragment of Python</span><span id=""_COMPSCI407240"">;</span></p><p id=""_COMPSCI407241""><span id=""_COMPSCI407242"">5. </span><span id=""_COMPSCI407243"">Execute pi calculus processes according to the definition </span><span id=""_COMPSCI407244"">of the reduction relation, and determine </span><span id=""_COMPSCI407245"">bisimulation</span><span id=""_COMPSCI407246"">&nbsp;relationships between processes;</span></p><p id=""_COMPSCI407247""><span id=""_COMPSCI407248"">6. </span><span id=""_COMPSCI407249"">Determine whether or not processes in pi calculus are typable in the simple type system</span><span id=""_COMPSCI407250"">;</span></p><p id=""_COMPSCI407251""><span id=""_COMPSCI407252"">7. </span><span id=""_COMPSCI407253"">Implement pi calculus processes in a simulation environment or in an appropriate fragment of the Go programming language</span><span id=""_COMPSCI407254"">;</span></p><p id=""_COMPSCI407255""><span id=""_COMPSCI407256"">8. </span><span id=""_COMPSCI407257"">Connect both the lambda calculus and the pi calculus to logic under Curry-Howard correspondences, which make the foundation for functional and concurrent programming.</span></p>"
Glasgow_Scotland,COMPSCI4077,"<h2>title</h2>Web Science (H) COMPSCI4077<h2>summary</h2><p id=""_COMPSCI40770""><span id=""_COMPSCI40771"">Web Science is the study of the World Wide Web (WWW), its components, facets and characteristics and the impact it has on both society and technology. The World Wide Web changed the way in which we create information, communicate and interact. New models of social networks (LinkedIn, Facebook, etc.) create opportunities, which were not </span><span id=""_COMPSCI40772"">available</span><span id=""_COMPSCI40773"">&nbsp;before. Exploiting such data and networks for the benefit of individuals and organizations has become a key in our knowledge society.</span></p><h2>content</h2><p id=""_COMPSCI407717""><span id=""_COMPSCI407718"">The objective of </span><span id=""_COMPSCI407719"">this course</span><span id=""_COMPSCI407720"">&nbsp;is to </span><span id=""_COMPSCI407721"">introduce students to the field of web science and critically examine methodologies and techniques used in the field.</span></p><h2>ilo</h2><p id=""_COMPSCI407727""><span id=""_COMPSCI407728"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407729""><span id=""_COMPSCI407730"">1. </span><span id=""_COMPSCI407731"">Skills to analyse and implement technical solutions on social web applications</span></p><p id=""_COMPSCI407732""><span id=""_COMPSCI407733"">2. </span><span id=""_COMPSCI407734"">Describe the techniques employed in developing advertising models on the web</span></p><p id=""_COMPSCI407735""><span id=""_COMPSCI407736"">3. </span><span id=""_COMPSCI407737"">Describe the techniques needed to analyse social networks</span></p><p id=""_COMPSCI407738""><span id=""_COMPSCI407739"">4. </span><span id=""_COMPSCI407740"">Ability to understand and rationalise privacy threats and mitigation strategies in online communities</span></p><p id=""_COMPSCI407741""><span id=""_COMPSCI407742"">5. </span><span id=""_COMPSCI407743"">Describe</span><span id=""_COMPSCI407744"">&nbsp;methodologies to conduct large scale data analysis</span><span id=""_COMPSCI407745"">&nbsp;to analyse user behaviour on the web,</span><span id=""_COMPSCI407746"">&nbsp;to predict user demographics and purchase behaviours</span></p><p id=""_COMPSCI407747""><span id=""_COMPSCI407748"">6. </span><span id=""_COMPSCI407749"">Describe</span><span id=""_COMPSCI407750"">&nbsp;sentiment and emotion extraction techniques</span><span id=""_COMPSCI407751"">&nbsp;and employ them.</span></p>",Web Science (H) COMPSCI4077,"<p id=""_COMPSCI40770""><span id=""_COMPSCI40771"">Web Science is the study of the World Wide Web (WWW), its components, facets and characteristics and the impact it has on both society and technology. The World Wide Web changed the way in which we create information, communicate and interact. New models of social networks (LinkedIn, Facebook, etc.) create opportunities, which were not </span><span id=""_COMPSCI40772"">available</span><span id=""_COMPSCI40773"">&nbsp;before. Exploiting such data and networks for the benefit of individuals and organizations has become a key in our knowledge society.</span></p>","<p id=""_COMPSCI407717""><span id=""_COMPSCI407718"">The objective of </span><span id=""_COMPSCI407719"">this course</span><span id=""_COMPSCI407720"">&nbsp;is to </span><span id=""_COMPSCI407721"">introduce students to the field of web science and critically examine methodologies and techniques used in the field.</span></p>","<p id=""_COMPSCI407727""><span id=""_COMPSCI407728"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407729""><span id=""_COMPSCI407730"">1. </span><span id=""_COMPSCI407731"">Skills to analyse and implement technical solutions on social web applications</span></p><p id=""_COMPSCI407732""><span id=""_COMPSCI407733"">2. </span><span id=""_COMPSCI407734"">Describe the techniques employed in developing advertising models on the web</span></p><p id=""_COMPSCI407735""><span id=""_COMPSCI407736"">3. </span><span id=""_COMPSCI407737"">Describe the techniques needed to analyse social networks</span></p><p id=""_COMPSCI407738""><span id=""_COMPSCI407739"">4. </span><span id=""_COMPSCI407740"">Ability to understand and rationalise privacy threats and mitigation strategies in online communities</span></p><p id=""_COMPSCI407741""><span id=""_COMPSCI407742"">5. </span><span id=""_COMPSCI407743"">Describe</span><span id=""_COMPSCI407744"">&nbsp;methodologies to conduct large scale data analysis</span><span id=""_COMPSCI407745"">&nbsp;to analyse user behaviour on the web,</span><span id=""_COMPSCI407746"">&nbsp;to predict user demographics and purchase behaviours</span></p><p id=""_COMPSCI407747""><span id=""_COMPSCI407748"">6. </span><span id=""_COMPSCI407749"">Describe</span><span id=""_COMPSCI407750"">&nbsp;sentiment and emotion extraction techniques</span><span id=""_COMPSCI407751"">&nbsp;and employ them.</span></p>"
