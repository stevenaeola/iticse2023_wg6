Title,Text,[M] elective: ,[M] institution: ,[M] title: ,"[C] Barker, Lecia","[C] Bradley, Steven","[C] Hooshangi, Sara","[C] Kunkeler, Thom","[C] Lennon, Ruth","[C] Parkinson, Jack","[C] Sibia, Naaz (Naaz Sibia)",Annotations
COMP3421: COMPUTER SCIENCE INTO SCHOOLS,"<h2>title</h2>COMP3421: COMPUTER SCIENCE INTO SCHOOLS<h2>summary</h2>   <li>To develop a range of key skills in the student and to offer an early taste of teaching to those interested in pursuing it as a career or for other career pathways where public understanding of science is required.</li>   <li>To help students gain confidence in communicating Computer Science, develop strong organisational and interpersonal skills, and understand how to address the needs of individuals.</li>   <li>To learn to devise and develop Computer Science projects and teaching methods appropriate to engage the relevant age group they are working with.</li>   <li>To help inspire a new generation of Computer Scientists as prospective undergraduates by providing role models for school pupils.</li>   <li>To help teachers convey the excitement of their subject to pupils by showing them the long-term applications of school studies, especially the cross disciplinary relationships of Computer Science.</li>   <li>To help teachers by providing an assistant who can work with and support pupils at any point on the ability spectrum.</li>  <h2>content</h2>   <li>A competitive interview system will be used to match students with appropriate schools and a specific teacher in the local area, and each student selected will be given a chance to visit the school they will be working in before commencement of the placement.  </li>   <li>One day training course on working in schools and with pupils.  </li>   <li>Series of lectures on key transferable skills.  </li>   <li>The student will be required to spend half a day (approx 4hrs) a week in the school every week for at least 10 weeks.  </li>   <li>Tutorials which will provide an opportunity for students to share their experiences.  </li>   <li>The students will be involved in the following activities in support of their learning and teaching:  </li>   <li>Classroom observation and assistance: Initial contact with the teacher and pupils will be as a classroom assistant, watching how the teacher handles the class, observing the level being taught and the structure of the lesson, and offering practical support to the teacher.  </li>   <li>Teaching assistance: The teacher will assign the student with actual teaching tasks, which will vary dependent on specific needs and the student's own ability as it develops over the term. This could include for example offering problem-solving coaching to a smaller group of higher ability pupils, or taking the last ten minutes of the lesson for the whole class. The student will have to demonstrate an understanding of how the level of the knowledge of the pupils they are teaching fits in to their overall learning context in other subjects.  </li>   <li>Whole class teaching: Students will typically be offered, in collaboration with their teachers, at least one opportunity to undertake whole class teaching, albeit that it may be only for a small part of the lesson.  </li>   <li>University awareness: Students will represent and promote their academic discipline as a potential university choice to pupils across the social and academic range represented at their partner schools.  </li>   <li>Special projects: The student will devise a special Computer Science project on the basis of discussion with the teacher and module co-ordinator and their own assessment of what will interest the particular pupils they are working with. The student will implement the special project and evaluate it. The student will be required to show that they can analyse a specific teaching problem and devise and prepare appropriately targeted teaching materials, practical demonstrations and basis 'tests' where appropriate.  </li>   <li>Extra-curricular projects: The student may be supervised by the teacher in helping to run an out-of-timetable activity, such as a lunchtime club or special coaching periods for higher ability pupils. The student will have to demonstrate an ability to think laterally in order to formulate interesting ways to illustrate more difficult scientific concepts.  </li>   <li>Written reports: The student will keep a journal of their own progress in working in the classroom environment, and they will be asked to prepare a written report on the special project.  </li>   <li>The teachers will act as the main source of guidance in the schools but, in addition, the students will also be able to discuss progress with the module co-ordinator or a member of the Science Outreach and Engagement Team whenever necessary.</li>   <li>Solutional methods for computational problems.</li>  <h2>ilo</h2>    <li>On successful completion of this module students: </li>    <li>Will be able to assess and devise appropriate ways to communicate a difficult principle or concept.</li>    <li>Will have gained a broad understanding of many of the key aspects of teaching in schools.</li>    <li>Will have an advanced understanding of Computer Science through having to explain to others.</li>    <li>Will have an advanced understanding of the problems of public perception of science.  </li> ",COMP3421,Durham_England,COMP3421: COMPUTER SCIENCE INTO SCHOOLS,22; SEP,,22,SEP; 22,SDF; 22,22,22; SEP,
COMP3491: CODES AND CRYPTOGRAPHY,"<h2>title</h2>COMP3491: CODES AND CRYPTOGRAPHY<h2>summary</h2>   <li>To give an introduction to the fundamental steps of a digital communication system: compression/decompression, encryption/decryption, error control coding/decoding </li>   <li>To give an introduction to the theoretical limitations of those steps via information theory understand the information theoretic limitations of the three domains above  </li>  <h2>content</h2>   <li>Data compression: lossless compression such as Huffman and Lempel-Ziv, lossy compression such as transform coding and wavelet compression </li>   <li>Cryptography: block ciphers, hash functions, public key cryptography, signature schemes, lattice-based cryptography  </li>   <li>Error-correcting codes: linear codes including Hamming codes, BCH and Reed-Solomon codes, code-based cryptography</li>   <li>Information Theory: Entropy, channel capacity, data compression, information-theoretic cryptography </li>  <h2>ilo</h2>    <li>On completion of the module, students will be able to demonstrate: </li>    <li>an understanding of the theory and practice of data compression, cryptography, and error-correcting codes </li>    <li>an understanding of the main results of information theory  </li> ",COMP3491,Durham_England,COMP3491: CODES AND CRYPTOGRAPHY,SEC,,SEC; NC,SEC; DM; 10,SEC,NC; SEC,AL; SEC,"Annotation: I think this is security because of the encryption; however, I don't know what else to use. Data management? Architecture?; User: Lecia Barker; Timestamp: 6/24/2023 10:26:09 PM; Code(s): ; Trigger: coding/decoding, compression"
COMP3507: COMPUTATIONAL COMPLEXITY,"<h2>title</h2>COMP3507: COMPUTATIONAL COMPLEXITY<h2>summary</h2>   <li>The aim of the module is to equip students with the ability to ability to formalise and reason about the complexity of computational problems as well as to identify barriers to efficient computations.</li>  <h2>content</h2>   <li>The content will be chosen from the following topics:</li>   <li>Time complexity and space complexity of computational problems</li>   <li>Complexity of optimisation and approximation</li>   <li>Parameterised complexity</li>   <li>Circuit complexity</li>   <li>Complexity and cryptography</li>   <li>Complexity of randomised computation</li>   <li>Descriptive complexity</li>  <h2>ilo</h2>    <li>On completion of this module, students will be able to demonstrate:</li>    <li>an understanding of the inherent limitations of computation through appreciation of the topic areas;</li>    <li>an appreciation of different ways to measure and reason about the complexity of computation;</li>    <li>a knowledge about various important problem solving paradigms in the broad area of algorithms and complexity.</li> ",COMP3507,Durham_England,COMP3507: COMPUTATIONAL COMPLEXITY,AL,,AL,AL; 09,AL; SE,AL,AL,Annotation: Low confidence on this. Complexity seems to cut across a lot of areas.; User: Lecia Barker; Timestamp: 6/24/2023 10:29:27 PM; Code(s): ; Trigger: complexity
COMP3567: MULTIMEDIA AND GAME DEVELOPMENT,"<h2>title</h2>COMP3567: MULTIMEDIA AND GAME DEVELOPMENT<h2>summary</h2>   <li>To introduce students to the methods and techniques of effective game development and the principles and practices of modern multimedia technologies.</li>  <h2>content</h2>   <li>Game design and mechanics.</li>   <li>Game engine and programming.</li>   <li>Game physics and autonomous object motions.</li>   <li>Visual and audial media representations.</li>   <li>Media compression, quality optimisation and assessment.</li>  <h2>ilo</h2>    <li>On completion of the module, students will be able to demonstrate: </li>    <li>an understanding of the technologies used in developing different types of games.</li>    <li>an understanding of using suitable programming tools to implement games.</li>    <li>an understanding of the technologies used in representing, processing and optimizing multimedia contents.</li> ",COMP3567,Durham_England,COMP3567: MULTIMEDIA AND GAME DEVELOPMENT,GIT; SPD; 21,,GIT; HCI; 21,GIT; SPD; 21,SE; AL,GIT; SPD; 21,SPD; GIT; 21,
COMP3587: PROJECT MANAGEMENT,"<h2>title</h2>COMP3587: PROJECT MANAGEMENT<h2>summary</h2>   <li>To understand and practice well established project management techniques required for the development of a significant piece of software within a team environment</li>  <h2>content</h2>   <li>Project management frameworks and application</li>   <li>Leadership and innovation</li>   <li>Managing change</li>   <li>Practical management skills</li>  <h2>ilo</h2>    <li>On completion of the module, students will be able to: </li>    <li>Compose a project management plan</li>    <li>Assess project management frameworks and evaluate their appropriateness</li>    <li>Evaluate leadership success</li>    <li>   </li> ",COMP3587,Durham_England,COMP3587: PROJECT MANAGEMENT,SEP,,17,SEP; 17,SEP; 17,17,SE; 17,
COMP3607: RECOMMENDER SYSTEMS,"<h2>title</h2>COMP3607: RECOMMENDER SYSTEMS<h2>summary</h2>   <li>Have you ever wondered how Netflix, YouTube, Amazon or Spotify make suggestions for which content next to view? </li>   <li>In this module, we will look at the inner workings of recommender systems;</li>   <li>explore developing user profiles based on demographics, preferences, context, etc.;</li>   <li>and put to practice approaches to predict the ""best"" content to recommend to an individual user.</li>  <h2>content</h2>   <li>Non-personalised recommenders</li>   <li>Content-based filtering</li>   <li>Collaborative filtering</li>   <li>Context-aware recommenders</li>   <li>Other RS types, e.g.: hybrid and group</li>   <li>Evaluation methods</li>   <li>Ethical issues in recommender systems</li>  <h2>ilo</h2>    <li>On completion of the module, students will be able to demonstrate: </li>    <li>an understanding of the different types of recommender systems, their purpose and domains of application</li>    <li>an understanding of recommender system users: usage behaviour, demographics, preferences, contextual information</li>    <li>an in-depth knowledge of recommender system algorithms, specifically non-personalised, content-based and collaborative filtering, hybrid techniques and context-aware recommenders</li>    <li>an understanding of recommender system evaluation methods.</li> ",COMP3607,Durham_England,COMP3607: RECOMMENDER SYSTEMS,AI,,SPD; SEP,AL; AI; 10,SE; HCI,AI,AI,
COMP3617: VIRTUAL AND AUGMENTED REALITY,"<h2>title</h2>COMP3617: VIRTUAL AND AUGMENTED REALITY<h2>summary</h2>   <li>This course will introduce the principles of Virtual and Augmented Reality (VR/AR) technologies including optics, displays, rendering techniques, visual perception, tracking, interaction, current challenges, applications and major hardware and software platforms.</li>  <h2>content</h2>   <li>Introduction: history of VR/AR development, overview of computer graphics, the graphics pipeline, applications in education, communication, medical, entertainment, manufacturing, shopping.</li>   <li>VR/AR hardware: displays, physics of light, optics, electronics, microcontrollers, VR head-mounted displays, CAVEs, controllers, interfaces, major hardware platforms.</li>   <li>VR/AR software: stereo rendering for VR/AR, lens distortion shaders, auditory rendering, major software platforms.</li>   <li>Human perception: visual, auditory, vestibular, tactile.</li>   <li>Tracking: head-tracking, inertial measurement units, gyros, accelerometers, magnetometers, sensor fusion, complementary filter, etc.</li>   <li>Interaction and moving in VR: ergonomics, comfort, 3D interaction design, 3DUIs, perceptual requirements, affordances in VR, user input, physical navigation, redirected walking.</li>   <li>Presence: virtual embodiment.</li>   <li>Challenges in VR: simulator sickness, visual discomfort, realism, content, navigation, haptic feedback.</li>   <li>AR specific topics: object tracking, geolocation.</li>  <h2>ilo</h2>    <li>On completion of the module, students will be able to demonstrate: </li>    <li>An in-depth knowledge of theory and techniques driving the design of Virtual and Augmented Reality hardware and software. </li> ",COMP3617,Durham_England,COMP3617: VIRTUAL AND AUGMENTED REALITY,GIT,,HCI; GIT,GIT; SPD; 21,HCI; AR,GIT; HCI,GIT,
COMP3621: Public Engagement in Computer Science,"<h2>title</h2>COMP3621: Public Engagement in Computer Science<h2>summary</h2>   <li>This module is designed primarily for students studying Department of Computer Science or Natural Sciences degree programmes.</li>   <li>To provide experience of a research-led public engagement project in Computer Science.</li>   <li>To allow students to make an in-depth study of a particular topic in Computer Science, to undertake extensive independent research and to write at length on their chosen subject in the context of public engagement.</li>   <li>To develop a range of transferable skills in researching a topic in the context of public engagement and making oral and written presentations on their work.</li>   <li>To learn to devise and develop Computer Science projects and public engagement methods appropriate to the chosen topic and relevant audience(s).  </li>  <h2>content</h2>   <li>Project: A research-led public engagement project, set in collaboration with members of staff from the Department, and possibly with an external partner, allowing students to present the results of individual and independent work (note: an original contribution to scientific knowledge is not required or expected).</li>   <li>The student will implement and evaluate the project. The student will be required to show that they can analyse a specific public engagement problem and devise and develop an appropriate public engagement approach to address that specific problem.</li>   <li>Students will choose from a wide list of broad possible topics. Each student will be assigned a member of staff as supervisor. Students will devise their own approach to researching and communicating their subject with advice from their supervisor. As part of their work they will be expected to address some of the specific aspects of their subject with the agreement of the supervisor. Students will be expected to work independently, to manage the direction of their work and to employ a significant component of self-directed learning.</li>   <li>Reflective practice: The student will keep a reflective journal of activity and produce an executive summary of that journal, summarising and communicating their reflective practice in relation to their project.</li>   <li>Transferable skills including time-management, presentation, communication, organisation, prioritisation and negotiation skills.  </li>  <h2>ilo</h2>    <li>Having studied this module, students:</li>    <li>Will have formed a detailed appreciation of the science related to a particular topic.</li>    <li>Will be able to assess and devise appropriate ways to communicate a difficult principle or concept.</li>    <li>Will have gained a broad understanding of many of the key aspects of public engagement.  </li> ",COMP3621,Durham_England,COMP3621: Public Engagement in Computer Science,SEP,,SEP; 18,SEP; 15; 17,08; SEP,18,,Annotation: This seems like the independent projects; User: Naaz Sibia; Timestamp: 7/5/2023 1:07:59 PM; Code(s): ; Trigger: 
COMP3637: Compiler Design,"<h2>title</h2>COMP3637: Compiler Design<h2>summary</h2>   <li>To understand how a compiler for a high-level programming language works.</li>   <li>Develop implementation skills for writing practical components of a compiler, including parsing, analysis, code generation, and optimisation.</li>   <li>Appreciate how the design of programming languages is affected by compiler considerations.</li>   <li>Implement a compiler for a high-level programming language.</li>  <h2>content</h2>   <li>Compiler frontend: Foundations of compiler theory and techniques for lexical analysis,  syntax analysis and semantic analysis.</li>   <li>Compiler backend: Intermediate representations (IRs), optimisation on IRs, machine  code generation and register allocation.</li>  <h2>ilo</h2>    <li>An understanding of the theory and practice of compiler design.</li> ",COMP3637,Durham_England,COMP3637: Compiler Design,FPL,,OS; FPL,AR; 10,SF,FPL,FPL,
COMP3667: REINFORCEMENT LEARNING,"<h2>title</h2>COMP3667: REINFORCEMENT LEARNING<h2>summary</h2>   <li>To understand computational models of learning in dynamic environments.</li>   <li>Learning how to plan and design agents with intelligent behaviour, taking actions to control the environment and maximise cumulative future rewards. </li>  <h2>content</h2>   <li>Introduction to reinforcement learning.</li>   <li>Markov decision processes and planning by dynamic programming.</li>   <li>Model free prediction and control.</li>   <li>Value-based and policy-based reinforcement learning.</li>   <li>Scaling up reinforcement learning approaches with deep learning.</li>   <li>Integrating learning and planning, and balancing exploration/exploitation.</li>  <h2>ilo</h2>    <li>On completion of the module, students will be able to demonstrate: </li>    <li>an understanding of the key features of reinforcement learning and differences with non-interactive learning.</li>    <li>an understanding of state-of-the-art reinforcement learning algorithms. </li>    <li>an understanding of the issues faced in scaling reinforcement learning approaches using deep learning. </li> ",COMP3667,Durham_England,COMP3667: REINFORCEMENT LEARNING,AI,,AI,AI; 10,22; AL,AI,AI,
COMP3677: NATURAL COMPUTING ALGORITHMS,"<h2>title</h2>COMP3677: NATURAL COMPUTING ALGORITHMS<h2>summary</h2>   <li>To give students an understanding of how systems and phenomena that occur in the natural world can inspire the development of new computational algorithms relevant to modern-day artificial intelligence.     </li>   <li>To equip students with a range of natural algorithmic paradigms and techniques that can be widely applied in real-world problem solving.     </li>   <li>To enable students to implement, apply, analyse and experiment with natural algorithms to solve real-world problems. </li>  <h2>content</h2>   <li>An introduction to some of the facets of Natural Computing.     </li>   <li>Specific algorithms will be drawn from some of the following paradigms (with illustrative examples of the algorithms that these paradigms encompass):     </li>   <li>evolutionary computing (genetic algorithms, evolution strategies, differential evolution)     </li>   <li>social computing (particle swarm optimizations, ant colony algorithms, bee foraging algorithms, glow-worm algorithms, bat algorithms)     </li>   <li>immunocomputing (artificial immune systems, dendritic cell algorithms, clonal expansion algorithms)      </li>   <li>developmental and grammatical computing (Lindenmayer systems, grammatical evolution algorithms, tree-adjoining grammars)     </li>   <li>physical computing (simulated annealing, DNA computing, self-assembly systems). </li>  <h2>ilo</h2>    <li>On completion of the module, students will be able to demonstrate:     </li>    <li>an understanding of how systems and phenomena from the natural world inspire new computational algorithms     </li>    <li>an understanding of a range of different paradigms and algorithms inspired by systems and phenomena from the natural world     </li>    <li>an understanding of the data structures and methodologies required to implement these algorithms. </li> ",COMP3677,Durham_England,COMP3677: NATURAL COMPUTING ALGORITHMS,AI,,AL; 03,AL; 07; 15,AL; 02,AL,AL; 03,"Annotation: This is related to AI, but also to scientific computing. But it could be many sciences. Scientific computing is not mentioned in the ACM2023 document, but physical computing is. However, it's under graphics, and this course is about algorithms.; User: Lecia Barker; Timestamp: 6/24/2023 10:42:01 PM; Code(s): ; Trigger: natural computing"
COMP4087: ADVANCED ALGORITHMS,"<h2>title</h2>COMP4087: ADVANCED ALGORITHMS<h2>summary</h2>   <li>To give students a deeper knowledge of algorithmic solutions for typical computer science problems.</li>   <li>To extend the students' knowledge of the latest advances in understanding the limits of computation and the ways of coping with computational hardness.</li>  <h2>content</h2>   <li>Algorithms: approximation, exact, fixed parameter tractable, polynomial</li>   <li>Input restrictions: hereditary and intersection graph classes</li>   <li>Graph width</li>   <li>Graph containment relations</li>   <li>Graph reconfiguration</li>  <h2>ilo</h2>    <li>On completion of the module, students will be able to demonstrate: </li>    <li>a comprehensive understanding of how the theory of computation is applied in the design of algorithms</li>    <li>a critical evaluation of different approaches to the algorithmic solution for computationally hard problems</li>    <li>a critical awareness of some of the latest advances in research on theoretical aspects of computation</li> ",COMP4087,Durham_England,COMP4087: ADVANCED ALGORITHMS,AL,,AL,AL; 09,AL; 09,AL,AL,
COMP4117: QUANTUM COMPUTING,"<h2>title</h2>COMP4117: QUANTUM COMPUTING<h2>summary</h2>   <li>To introduce students to Quantum Information Processing and Quantum Computing with emphasis on where these may be advantageous over the classical approach. </li>  <h2>content</h2>   <li>Qubits and Quantum Key Distribution     </li>   <li>Computing with Multiple Qubits     </li>   <li>EPR paradox and Quantum State Transformations     </li>   <li>Quantum Gates and Circuits     </li>   <li>Quantum Algorithms     </li>   <li>Quantum Networking </li>  <h2>ilo</h2>    <li>On completion of the module, students will be able to demonstrate:     </li>    <li>an understanding of the fundamental notions from Quantum Information Processing     </li>    <li>an understanding of the workings of Quantum algorithms      </li>    <li>an understanding of the principles of Quantum networking </li> ",COMP4117,Durham_England,COMP4117: QUANTUM COMPUTING,AL,,AL; 07,SF; 10,AL; 09,AR,AR,Annotation: quantum computing; User: Sara Hooshangi; Timestamp: 7/2/2023 8:31:41 PM; Code(s): ; Trigger: ; Annotation: coded as algorithms with low confidence; User: Lecia Barker; Timestamp: 6/24/2023 10:45:14 PM; Code(s): ; Trigger: quantum computing
COMP4127: AUTOMATED REASONING AND VERIFICATION,"<h2>title</h2>COMP4127: AUTOMATED REASONING AND VERIFICATION<h2>summary</h2>   <li>To introduce students to Automated Reasoning through expression and solvability of problems in propositional and first-order logic.</li>   <li>To introduce students to Verification through expression and solvability of problems using temporal logics.</li>   <li>To introduce students to Program Correctness through Hoare Logic.</li>  <h2>content</h2>   <li>Algorithms for Reasoning in Propositional Logic</li>   <li>Principles of Modern SAT Solvers</li>   <li>Algorithms for Reasoning in First Order Logic</li>   <li>Unification and Resolution for First Order Logic</li>   <li>Principles of Inference in Prolog</li>   <li>Transition Systems and Model-Checking</li>   <li>Linear Temporal Logic</li>   <li>Computation Tree Logic</li>   <li>Model-Checking with NuSMV</li>   <li>Hoare Logic</li>  <h2>ilo</h2>    <li>On completion of the module, students will be able to demonstrate:</li>    <li>an understanding of how to express problems in the language of logics and models.</li>    <li>an understanding of satisfiability, entailment and model-checking for a variety of logics.</li>    <li>an understanding of the algorithms underlying modern SAT-solvers.</li>    <li>an understanding of the algorithms underlying verification in temporal logics.</li>    <li>an understanding of how a program can be proved to meet a specification through Hoare Logic.</li> ",COMP4127,Durham_England,COMP4127: AUTOMATED REASONING AND VERIFICATION,AI,,AL,AL; 09,AL; MSF,AI; AL,AL,Annotation: very low confidence; User: Lecia Barker; Timestamp: 6/24/2023 10:47:32 PM; Code(s): ; Trigger: AUTOMATED REASONING
COMP4157: LEARNING ANALYTICS,"<h2>title</h2>COMP4157: LEARNING ANALYTICS<h2>summary</h2>   <li>To give students a fundamental understanding of some of the core approaches and problem-solving principles for Learning Analytics (LA) and the role of LA in current and future learning settings and environments.</li>  <h2>content</h2>   <li>Statistical Learning Analytics and visualisation: data pre-processing; methods for tackling learning analytics based on statistical approaches; the types of LA that can be done with such approaches - e.g. descriptive and beyond. Visualisation of LA data for different stakeholders - e.g. learner, teacher, administrator, etc. </li>   <li>Ethics of Learner Data Usage: discussions on ethical considerations of using learner data, starting from societal view, laws involved, (common) practice, future practice. Algorithmic perspectives, such as (expanded) sensitivity analysis.</li>   <li>Machine Learning based Learning Analytics: shallow and deep Machine Learning methods for LA; numerical versus textual data analytical methods for LA; combined methods; sentiment analysis for LA; the types of LA that can be done with such approaches - e.g. descriptive, diagnostic, predictive, prescriptive.</li>  <h2>ilo</h2>    <li>The key principles and methodologies of data pre-processing for learning analytics, as well as the ability to evaluate and interpret where and how to apply such methods, including in the absence of complete data.</li>    <li>The key principles and methodologies for statistical learning analytics and visualisation, as well as the ability to evaluate and interpret where and how to apply such methods, including in the absence of complete data.</li>    <li>The key principles of machine learning based learning analytics, as well as the ability to evaluate and interpret where and how to apply such methods, including in the absence of complete data.</li> ",COMP4157,Durham_England,COMP4157: LEARNING ANALYTICS,22; AI,,22; AI,22; AI; MSF,22; AI; SEP,AI,AI; DM; 22,
COMP4177: NETWORKS AND THEIR STRUCTURE,"<h2>title</h2>COMP4177: NETWORKS AND THEIR STRUCTURE<h2>summary</h2>   <li>To design structured networks to provide the communications fabric of distributed-memory multi-processors, networks-on-chips and data centre networks.</li>   <li>To introduce the theoretical and practical tools needed to analyse social and technological networks.   </li>  <h2>content</h2>   <li>Core aspects of interconnection networks: topology; routing; switching; flow control; packets; technology.</li>   <li>Graph theory: degree; cuts; bisections; paths; diameter; embeddings; automorphisms; symmetry.</li>   <li>Topologies: hypercubes; tori; k-ary n-cubes; cube-connected cycles.</li>   <li>Performance: traffic patterns; throughput; latency; path diversity; packaging; routing algorithms.</li>   <li>Modelling networks to make comparisons and predictions: random graphs; Milgram's small world experiment; Watts-Strogatz model; Kleinberg model.  </li>   <li>Centrality measures: finding influential nodes in networks; using centrality measures to understand the community structure of networks.  </li>   <li>Epidemics: how contagions spread in networks; models of diffusion; SIR model; epidemic threshold; SIS model.</li>  <h2>ilo</h2>    <li>On completion of the module, students will be able to demonstrate: </li>    <li>an in-depth knowledge of the state-of-the-art in interconnection networks and network science</li>    <li>an awareness of the main open problems of current interest </li>    <li>an understanding of research issues that relate to these problems, including recent developments and research trends and breaking technologies.</li> ",COMP4177,Durham_England,COMP4177: NETWORKS AND THEIR STRUCTURE,NC,,NC,DM; 09,NC; SF,NC,NC,
COMP4187: PARALLEL SCIENTIFIC COMPUTING II,"<h2>title</h2>COMP4187: PARALLEL SCIENTIFIC COMPUTING II<h2>summary</h2>   <li>Introduce advanced scientific computing techniques</li>   <li>Familiarise student with distributed memory programming and MPI</li>  <h2>content</h2>   <li>Basic spatial discretisation techniques for partial differential equations</li>   <li>Implicit time discretisation techniques for ordinary differential equations.</li>   <li>Advanced algorithms of scientific computing</li>   <li>Distributed memory programming paradigms.</li>   <li>Advanced parallel data structures.</li>  <h2>ilo</h2>    <li>On completion of the module, students will be able to demonstrate: </li>    <li>an in-depth knowledge of the state-of-the-art in scientific computing and accelerator programming</li>    <li>a critical awareness of the main open problems of current interest related to these areas</li>    <li>a comprehensive understanding of the research issues that relate to these problems, including recent developments and research trends, breaking technologies and opportunities for industrial innovation. </li> ",COMP4187,Durham_England,COMP4187: PARALLEL SCIENTIFIC COMPUTING II,PDC,,PDC; AL,PDC; AL; 09; 10,PDC,AL; PDC,PDC,Annotation: could be one of many sciences; User: Lecia Barker; Timestamp: 6/24/2023 10:48:34 PM; Code(s): ; Trigger: scientific computing
Undergraduate Course: Informatics 1 - Cognitive Science (INFR08020),"<h2>title</h2>Undergraduate Course: Informatics 1 - Cognitive Science (INFR08020)<h2>summary</h2>This course is designed as a first introduction to Cognitive Science. It will provide a selective but representative overview of the subject, suitable for all interested students, including students on the Cognitive Science degrees and external students.<br><br>The aim of the lecturing team is to present a unified view of the field, based on a computational approach to analysing cognition. The material is organized by cognitive function (e.g., language, vision), rather than by subdiscipline (e.g., psychology, neuroscience).<br><br>The course covers language, vision, memory, control and action, and reasoning and generalization. All topics will be presented from a computational point of view, and this perspective will be reinforced by lab sessions in which students implement simple cognitive models.<h2>content</h2>        The syllabus covers the following topics. <br>They are listed separately here, but in some cases they will be presented in an interleaved fashion: <br> <br>1. Language <br>- cognitive instinct or cognitive technology?<br>- linguistic representations: productivity and reuse<br>- Connectionist and Bayesian models of language <br>- language acquisition: speech segmentation and word learning<br>- categorization and models of word meaning <br><br> 2. Reasoning and generalization <br>- inductive reasoning <br>- fallacies and (ir)rationality <br>- models of abstraction and generalisation <br>- theory formation and the origins of knowledge <br><br>3. Fundamentals of cognitive neuroscience <br>- basic brain anatomy and function <br>- experimental techniques to record brain activity <br>- simple models of neurons <br><br>4. Vision <br>- the anatomy of vision, neural correlates of visual perception <br>- comparison of biological and artificial visual systems <br> <br>5. Memory and Attention <br>- types of memory, memory impairments <br>- computational models of memory <br> <br>6. Actions and behaviour <br>- reinforcement learning <br> <br>Note that this course is intended to give a high-level introduction to the topics listed; subsequent courses (e.g., Computational Cognitive Science) will then provide a more detailed coverage. ",cxinfr08020,Edinburgh_UK,Undergraduate Course: Informatics 1 - Cognitive Science (INFR08020),04; 15,,2,NC; 03; 04,02; HCI,4,4,
Undergraduate Course: Informatics Experiential Learning (Level 8) (INFR08033),"<h2>title</h2>Undergraduate Course: Informatics Experiential Learning (Level 8) (INFR08033)<h2>summary</h2><h2>content</h2>Informatics Experiential Learning is available only with permission to students participating in one of the School's approved IEL activities. Please see the IEL Information Page at https://uoe.sharepoint.com/sites/IEL2 for the current year's approved activities and how to apply.<br><br>This course forms part of the Student-Led Individually Created Course (SLICC) University-wide framework for self-designed experiential learning, where students reflect throughout their chosen extra-curricular experience, by the development of an e-portfolio to provide evidence of their learning. As a participating student, undertaking a SLICC will enable students to create a unique learning experience, while demonstrating their learning and academic achievement against defined learning outcomes. <br><br>This level 8 course will require students to demonstrate the development of their skills and understanding in terms of critical analysis, application, reflection, recognising and developing your skills and mindsets, and evaluation within a defined context of their learning experience. This course will also enable students to demonstrate your ability to exercise autonomy and initiative at a professional level in practice and/or in a subject/discipline (or other approved) area. ",cxinfr08033,Edinburgh_UK,Undergraduate Course: Informatics Experiential Learning (Level 8) (INFR08033),SEP,,,SEC,22,,DM,Annotation: ; User: Jack Parkinson; Timestamp: 7/2/2023 10:57:04 PM; Code(s): ; Trigger: ; Annotation: Struggling to code this one as information and context is limited; User: Jack Parkinson; Timestamp: 7/2/2023 10:56:59 PM; Code(s): ; Trigger: ; Annotation: self-designed experiential learning; User: Sara Hooshangi; Timestamp: 7/2/2023 8:36:08 PM; Code(s): ; Trigger: self-designed experiential learning
Undergraduate Course: Algorithms and Data Structures (INFR10052),"<h2>title</h2>Undergraduate Course: Algorithms and Data Structures (INFR10052)<h2>summary</h2>The course aims to provide general techniques for the design of efficient algorithms and, in parallel, develop appropriate mathematical tools for analysing their performance. In this, it broadens and deepens the study of algorithms and data structures initiated in INF2. The focus is on algorithms, more than data structures. Along the way, problem solving skills are exercised and developed.<h2>content</h2>        Introductory concepts<br>Review of CS2. Models of computation; time and space complexity; upper and lower bounds, big-O and big-Omega notation; average and worst case analysis.<br><br>Divide and conquer<br>Matrix multiplication: Strassen's algorithm; the discrete Fourier transform (DFT), the fast Fourier transform (FFT). Expressing the runtime of a recursive algorithm as a recurrence relation; solving recurrence relations.<br><br>Sorting<br>Quicksort and its analysis; worst-case, best-case and average-case.<br><br>Data structures: Disjoint sets<br>The ""disjoint sets'' (union-find) abstract data type: specification and implementations as lists and trees. Union-by-rank, path-compression, etc., ""heuristics''. Applications to finding minimum spanning trees.<br><br>Dynamic programming<br>Introduction to the technique; examples: Matrix-chain multiplication, Longest common subsequences.<br><br>Graph/Network algorithms<br>Network flow, Max-flow/min-cut theorem, Ford-Fulkerson algorithm.<br><br>Geometric algorithms<br>Convex hull of a set of points (in 2-d).<br><br>Relevant QAA Computing Curriculum Sections: Data Structures and Algorithms ",cxinfr10052,Edinburgh_UK,Undergraduate Course: Algorithms and Data Structures (INFR10052),AL,,AL; FPL,AL; 09,AL; MSF,AL,AL,"Annotation: According to the ACM 2023 curriculum, ""Each area of computer science can be described as ""The study of algorithms and data structures to ...""""I have coded this only as algorithms.; User: Lecia Barker; Timestamp: 6/24/2023 10:53:00 PM; Code(s): ; Trigger: algorithms and data structures"
Undergraduate Course: Computational Cognitive Science (INFR10054),"<h2>title</h2>Undergraduate Course: Computational Cognitive Science (INFR10054)<h2>summary</h2>This course aims to introduce students to the basic concepts and methodology needed to implement and analyse computational models of cognition. It considers the fundamental issues of using a computational approach to explore and model cognition. In particular, we explore the way that computational models relate to, are tested against, and illuminate psychological theories and data.<br><br>The course will introduce both symbolic and subsymbolic modelling methodologies, and provide practical experience with implementing models. The symbolic part will focus on cognitive architectures,while the subsymbolic part will introduce probabilistic models.<h2>content</h2>        - An introduction/review of the idea of computational approaches to studying cognition; the mind as information-processing system; Marr's levels of analysis (computational, algorithmic, implementation).<br><br>- The general motivations underlying the computational modelling of cognition, and different kinds of questions that can be answered (e.g., why do cognitive processes behave as they do, or what algorithms might be used to carry out this behaviour? What kinds of information are used, or how is this information processed/integrated over time?)<br><br>- Mechanistic/algorithmic approaches and issues addressed by these approaches: parallel versus serial processing, flow of information, timing effects.<br><br>- Rational/probabilistic approaches and issues addressed by these approaches: adaptation to the environment, behaviour under uncertainty, learning, timing effects.<br><br>- General issues: top-down versus bottom-up processing, online processing, integration of multiple sources of information.<br><br>- Methodology and issues in the development and evaluation of cognitive models: Which psychological data are relevant? What predictions are made by a model? How could these be tested?<br><br>- Modelling techniques: in the assignments, students will experiment with both symbolic (rulebased) and subsymbolic (probabilistic) cognitive models.<br><br>- Example models: in a number of areas we will look at the theories proposed and different ways of modelling them. Areas discussed will include several of the following: language processing, reasoning, memory, high-level vision, categorization. Specific models will be introduced and analysed with regard to relevant psychological data. ",cxinfr10054,Edinburgh_UK,Undergraduate Course: Computational Cognitive Science (INFR10054),04; AI,,2,NC; 03; 04,AL; AI,4,04; AI,
Undergraduate Course: Computer Architecture and Design (INFR10076),"<h2>title</h2>Undergraduate Course: Computer Architecture and Design (INFR10076)<h2>summary</h2>In this course you will learn how to design a computer and understand the performance characteristics of computers. You will first acquire a working knowledge of digital design, through the Verilog Hardware Description Language, along with a good theoretical grounding in the design of the key components of a microprocessor. You will have an opportunity to learn, both theoretically and practically, how the Quantitative Approach to computer architecture enables computer architects to analyse and optimize microprocessors to maximize performance. Along the way you will design real hardware, and later in the course you will apply your recently-acquired knowledge of quantitative computer architecture to analyse a simulated system and optimize its performance.<h2>content</h2>        This new course presents a logical re-factoring of a sub-set of the material previously contained in the UG3 Computer Architecture and Computer Design courses. The aim of this course is to give students a comparatively deep understanding of computer architecture, to an intermediate level, together with a solid understanding of techniques used to design the logical building blocks from which a computer is constructed. We consider an intermediate level in computer architecture to extend up to the point where students have a good understanding of instruction set architecture, single-issue in-order pipelined execution of instructions, superscalar out-of-order execution, and the memory hierarchies required by those processors. Within a processor, we explore the principles and practice of arithmetic and logic unit design, of the caches from which memory hierarchies are constructed, and the memory and logic gate technologies from which computers are constructed. Throughout the course, there is a strong emphasis on the Quantitative Approach to computer architecture; this informs not only the theoretical topics but also the practical assignments, which always embody some element of the quantitative approach.<br><br>The philosophy of this course is that learning about computer architecture is particularly effective if reinforced by implementing key aspects of processor design, in real hardware when feasible, but also at higher levels of abstraction using simulated systems. This approach has been used very effectively in the previous Computer Design and Computer Architecture courses, and feedback often cites the value placed on the lab exercises by students.<br><br>Outline Contents<br><br>Fundamentals<br>Review of logic design and implementation technologies; from simple combinational logic to state machines for sequential circuits; logic design using Verilog and introduction to FPGAs.<br>Register Transfer Level design principles; registers, clocks, timing budgets, setup and hold margins, clock skew, clock-domain crossing and synchronization, metastability.<br>Quantitative computer architecture; performance evaluation methods and metrics, principles of high-performance design.<br><br>Processor Architecture<br>Instruction Set Architecture (ISA) design; instruction set classes, registers, memory addressing. RISC vs CISC, how the ISA supports high-level languages, quantitative approach to ISA design. Example      ISAs (e.g. MIPS, RISC-V). ISA requirements for embedded systems.<br>Pipelined processor design; pipeline hazards and interlocks, control prediction techniques and their usage.<br>Out-of-order execution; scoreboards, reservation stations, register renaming, quantitative analysis of performance.<br><br>Computer Arithmetic and ALU Design<br>Introduction to binary arithmetic functions; fixed-point addition, subtraction, multiplication and division.<br>Advanced techniques in computer arithmetic; carry-look ahead adders, parallel-prefix adders, Booth-coded multipliers, Wallace and Dadda trees, sub-word parallelism, fractional fixed-point multiply-        accumulate operations.<br>Floating-point computations; IEEE standard, floating-point addition and multiplication, high-performance fused-multiply-add architectures.<br><br>Memory System Design<br>Memory hierarchies; review of principles, quantitative analysis of memory hierarchy performance; exploring the design space of cache parameters.<br>Cache coherence in multi-core architectures; protocols and implementation techniques.<br>Main memory design; Interfacing between processor and memory, synchronous and asynchronous bus protocols.<br>Error detection and correction schemes; parity, Hamming codes, SECDED.<br><br>***This course replaces Computer Design (INFR09046) and Computer Architecture (INFR09009) FROM 2019/20.*** ",cxinfr10076,Edinburgh_UK,Undergraduate Course: Computer Architecture and Design (INFR10076),AR,,AR,AR; SF; 10,AR; SF,AR; SF,AR,
Undergraduate Course: Computing in the Classroom (INFR10077),"<h2>title</h2>Undergraduate Course: Computing in the Classroom (INFR10077)<h2>summary</h2>This course will give fourth year students to opportunity to make a positive contribution to the local community by sharing the knowledge of Informatics with school pupils and teachers. They will work with teachers to design appropriate teaching material and practical projects for computing education in schools, communicate effectively with young people and instil in them passion for computing disciplines, and support them in developing skills necessary in an increasingly digital society. Students will gain a critical understanding of the theory and practice of computer science pedagogy as appropriate for different stages of school learners. In addition, studying this course will enable students to develop a range of communication and organisational skills in a high pressure but supported real world setting. The course offers an in-depth, sustained experience in the classroom to students contemplating a career in education.<h2>content</h2>        Students will contribute to the teaching of computer science and data science in primary/secondary/special schools in Scotland. This could include a diverse range of activities including creating online materials, teaching classes online, developing software to support live events, and where appropriate, visiting classrooms. They will be supported by primary and secondary teachers and by academic mentors from the School of Informatics and School of Education.<br> <br>The aim of the course is for the students to design and deliver a project based on discussions with academic staff and classroom teachers, analysis of the appropriate school curricula, assessment of pupil's interests, and feedback received from an academic mentor. Students will receive formative feedback from an academic mentor based on observation notes and reflective writing recorded throughout the year.<br> <br>Course topics include:<br>* Computer science in schools curricula in Scotland and other countries<br>* Good practice in computer science pedagogy research evidence<br>* Effective teaching techniques<br>* Giving and receiving feedback<br>* Lesson planning<br>* Child protection and appropriate measures for risk management (e.g. infection control)<br><br><br>Assessment: Students will be formally assessed on two written reports and an oral presentation.<br> <br>Report 1 ( (to be submitted at the end of semester 1) (50%): A reflective account of their experiences of teaching so far, how they relate to the educational theory and research papers they have read and plans for the teaching materials they will develop.<br> <br>Report 2 (to be submitted at the end of semester 2) (30%): A summary of the teaching materials which they developed with an explanation of how the materials map to the curriculum and an evaluation of how effective the materials were from the points of view of both learners and class teachers (where appropriate).  <br><br>Oral Presentation (to be assessed at the end of semester 2) (20%): The student will prepare a presentation which reflects on their experiences of working in schools and the extent to which they achieved their personal learning goals during the course. ",cxinfr10077,Edinburgh_UK,Undergraduate Course: Computing in the Classroom (INFR10077),SEP,,22,SEP; 22,22; SDF,22,22,
Undergraduate Course: Informatics Experiential Learning (Level 10) (INFR10084),"<h2>title</h2>Undergraduate Course: Informatics Experiential Learning (Level 10) (INFR10084)<h2>summary</h2><h2>content</h2>Informatics Experiential Learning is available only with permission to students participating in one of the School's approved IEL activities. Please see the IEL Information Page at https://uoe.sharepoint.com/sites/IEL2 for the current year's approved activities and how to apply.<br><br>This course forms part of the Student-Led Individually Created Course (SLICC) University-wide framework for self-designed experiential learning, where students reflect throughout their chosen extra-curricular experience, by the development of an e-portfolio to provide evidence of their learning. As a participating student, undertaking a SLICC will enable students to create a unique learning experience, while demonstrating their learning and academic achievement against defined learning outcomes. <br><br>This level 10 course will require students to demonstrate the development of their skills and understanding in terms of critical analysis, application, reflection, recognising and developing your skills and mindsets, and evaluation within a defined context of their learning experience. This course will also enable students to demonstrate your ability to exercise autonomy and initiative at a professional level in practice and/or in a subject/discipline (or other approved) area. <br><br>This course will require students to specifically demonstrate learning in the context of the higher order skills such as analysis, evaluation, and creation and demonstration of meta-cognitive development. <br><br>It is expected that students taking this course would not only engage in the EUFS team effort, but take on additional responsibility in team management and organisation. ",cxinfr10084,Edinburgh_UK,Undergraduate Course: Informatics Experiential Learning (Level 10) (INFR10084),SEP,,,,22,,DM,"Annotation: As with previous experiential learning module, struggling to code; User: Jack Parkinson; Timestamp: 7/2/2023 11:06:17 PM; Code(s): ; Trigger: ; Annotation: experiential learning; User: Sara Hooshangi; Timestamp: 7/2/2023 8:38:24 PM; Code(s): ; Trigger: "
Undergraduate Course: Introduction to Mobile Robotics (INFR10085),"<h2>title</h2>Undergraduate Course: Introduction to Mobile Robotics (INFR10085)<h2>summary</h2>A mobile robot is a machine controlled by software that uses sensors and other technology to identify its surroundings and move around its environment. This course provides a general understanding of mobile robotics and related concepts, covering topics such as sensing, computer vision (i.e., visual perception), state estimation (e.g., localisation and mapping) and motion planning. The emphasis is on algorithms, probabilistic reasoning, optimization, inference mechanisms, and behavior strategies, as opposed to electromechanical systems design. Practically useful tools and simulators for developing real robotic systems will also be covered in this course. More course information can be found on its corresponding LEARN page here: https://www.learn.ed.ac.uk/ultra/courses/_99697_1/cl/outline<br><br>At the end of the course, students will develop sufficient skills in the analysis of predominant mobile robots, being able to understand the visual perception and navigation system for a self-driving car.<h2>content</h2>        Delivery Method:<br><br>The course will be delivered through a combination of: (1) live lectures, (2) practical labs, (3) tutorials, and (4) an online discussion forum.<br><br>Content/Syllabus:<br>The exact set of methods and algorithms explored in the course will vary slightly from year to year,<br>but will include many of the following topics:<br><br>- Introduction of Robotics: concept, use cases, and system architecture on sensing, perception &amp; control. Ethical and privacy implication of robots.<br>- Math refresher: basic operations of matrix, algebra, probability theory, derivatives.<br>- Robot Motion Model: Coordinate transformations and  Representation of Rotations; Forward kinematics.<br>- Sensor Model and Measurement: Proprioceptive and exteroceptive models; a case study with cameras, lidar, radar, ultrasonic, inertia etc.<br>- Recursive State Estimation: Kalman filters, EKF etc. <br>- Localization &amp; Tracking: Monte Carlo Localization, Ranging based Triangulation, Fingerprinting etc.<br>- Mapping: environment model, grid map.<br>- Robot Operating System: basic principles, use cases, and examples.<br>- SLAM: Framework &amp; systems, loop closing, pose graph optimization.<br>- Planning and Navigation: Obstacle avoidance, Path planning, receding horizon control.<br>- Self-driving Car Development Platform: Basic understanding of usage of CARLA like platform in sensing, perception and navigation.<br>- Basic Control Theory for Robotics: Open-loop and closed-loop control. Basic Idea on PID control. ",cxinfr10085,Edinburgh_UK,Undergraduate Course: Introduction to Mobile Robotics (INFR10085),SPD,,SE; SPD,AR; SPD; 10,HCI; SPD,SPD,SPD; OS,
Undergraduate Course: Machine Learning (INFR10086),"<h2>title</h2>Undergraduate Course: Machine Learning (INFR10086)<h2>summary</h2>***This course is a replacement for Introductory Applied Machine Learning (INFR10069)***<br><br>Since the early days of AI, researchers have been interested in making computers learn, rather than simply programming them to do tasks. This is the field of machine learning.  The main area that will be discussed is supervised learning, which is concerned with learning to predict an output, given in-puts. A second area of study is unsupervised learning, where we wish to discover the structure in a set of patterns, i.e. there is no output ""teacher signal"".<br><br>The aims of the course are to develop knowledge and a critical appreciation of the various techniques covered in the syllabus, and to be able to apply, validate and refine the methods in practice.<h2>content</h2>        The precise set of methods and algorithms used to illustrate and explore the main concepts will change slightly from year to year. However, the main topic headings are expected to be fairly stable.<br><br>-  Classification and Regression:  Linear Regression, logistic regression, Bayes classifiers <br>-  Expanded feature representations: Basis functions, decision trees, neural networks, kernel methods <br>-  Generalization and regularization: Penalised cost functions, Bayesian prediction, under- and over-fitting <br>-  Model selection and performance evaluation: Cross-validation, ROC and PR curves <br>-  Ethics and machine learning: Fairness, accountability, transparency, privacy concerns <br>-  Representation learning: Dimensionality reduction, clustering, feature learning <br>-  More advanced methods<br><br>To support these topics we will also cover: <br>- Optimization and Stochastic gradient descent <br>- Practical issues: Formulating problems as machine learning, adapting methods to fit problems.  Numerical and programming issues important for machine learning. ",cxinfr10086,Edinburgh_UK,Undergraduate Course: Machine Learning (INFR10086),AI,,AI,AI; 09,AI; AL,AI,AI,
Undergraduate Course: Work-Based Professional Practice B in Data Analytics (INFR10075),"<h2>title</h2>Undergraduate Course: Work-Based Professional Practice B in Data Analytics (INFR10075)<h2>summary</h2>This course is work-based and is focused on the real-world application of data science in a workplace environment.  It includes experiencing how statistical modelling , machine learning and relevant algorithms are applied to conduct data science studies on real data in a commercial environment. Students who do this course will obtain practical experience in the design, implementation, and evaluation of data science approaches.<h2>content</h2>        *This course is not a stand-alone introduction to applied data analytics and can only be delivered as part of the BSc Hons Graduate Apprenticeship in Data Science.*<br><br>This course provides Graduate Apprenticeship students with a holistic approach to business problem solving to support decision making and providing business insights. It is a key stage in the learning and development strategy of the graduate apprenticeship programme in Data Science. It is project based, introduced in the university and facilitated in the workplace around team-based projects.<br>This is a work-based learning course worth 40-credits.  Students undertake an eight-month professional practice period in year 3 over semester 2 and the summer and are expected to spend around 400 hours in total on this course. This is in addition to work activities the employer will be setting. The SLICC will be planned to cover the group of graduate apprenticeship students working with a specific employer and the work will directly link to their own contexts in the workplace.  <br>The main topics are: the application of data science tools and techniques, developing an understanding of the application of machine learning, statistical modelling and algorithms to solve business problems. In addition, this course covers the meta skills required to operate in a professional environment including graduate attributes for: lifelong learning, aspiration and personal development, outlook and engagement, research and enquiry, personal and intellectual autonomy, personal effectiveness and communication in both university and the workplace<br>The year 3 taught courses in computing and mathematics, particularly those in statistics and machine learning are applied to real world data science problems and projects.<br>Students will journal their learning using the Student-Led Individually Created Course (SLICC) approach. The SLICC framework requires that students use the generic learning outcomes to articulate their data science learning in the context of their work tasks, reflect frequently in a reflective journal, and collect and curate evidence in an e-portfolio of both their data science learning and metaskills development during their 8 months placement. They will experience different applications of data analytics in different projects during their placement and will have access to a company career coach to aid their professional development.  They will also produce a final report in the format required for their employer. All this is with the guidance of a professional practice academic tutor.<br>The course will encourage appraisal of students' own practical experiences and allow them to reflect on their learning in the context of data analytics. ",cxinfr10075,Edinburgh_UK,Undergraduate Course: Work-Based Professional Practice B in Data Analytics (INFR10075),SEP; AI; 17,,AI,SEP; 17,DM; AI,DM; SE,DM,
Undergraduate Course: Work-Based Professional Practice C in Data Analytics (INFR10083),"<h2>title</h2>Undergraduate Course: Work-Based Professional Practice C in Data Analytics (INFR10083)<h2>summary</h2>This course is work-based and is focused on the real-world application of data analytics and the development of self-analytic skills in a workplace environment. It includes experiencing how computation, analysis, mathematical modelling and statistics are applied to conduct data analysis studies on real data in a commercial environment. Students who do this course will obtain practical experience in the design, implementation, and evaluation of data analysis approaches. They will also learn how to reflect on their personal development throughout their time in the placement and their own professional development as a data scientist.<h2>content</h2>        *This is a work-based course and is only available as part of the Graduate Apprenticeship BSc Hons in Data Science.*<br><br>The aim of this course is to provide data science graduate apprenticeship students with work-based professional practice in the application of data analysis and statistical techniques. It gives students a practical introduction and understanding of the foundations, concepts and techniques applied to data analytics and provides an opportunity to apply the learning gained in the core courses to address data analysis problems and challenges in the workplace. The main topics are: the application of data analysis tools and techniques, an introduction to common data quality problems, and the application of statistics and machine learning. In addition, this course covers the meta-skills required to operate in a professional environment including teamwork, problem-solving and communication skills and personal self-awareness.<br><br>The course is delivered over four months during Semester 2 of Year 4. Students are expected to spend around 200 hours in total on this course on data science activities embedded in the work activities the employer will set. The work will directly link to their own contexts in the workplace. Students will be directed in their learning using the Student-Led Individually Created Course (SLICC) approach. They will reflect on and evaluate data analysis studies from their own work context in data analytics. <br><br>The SLICC framework requires that students use the generic learning outcomes to articulate their learning in their own defined project, reflect frequently using a blog, and collect and curate evidence of their learning in an e-portfolio. The final report which forms the summative assessment will draw together the evidence in the reflective journals and portfolios. All this is carried out with the guidance of a professional practice academic tutor. The course will encourage appraisal of students' own practical experiences and allow them to reflect on their learning, professional and personal development in the context of data analytics. ",cxinfr10083,Edinburgh_UK,Undergraduate Course: Work-Based Professional Practice C in Data Analytics (INFR10083),SEP,,AI,SEP; 17,MSF; DM,DM; SEP,DM,Annotation: data science is not always about AI/machine learning; it's very statistical. It also requires a lot of data management. It's not clear to me how this fits into the ACM curriculum.; User: Lecia Barker; Timestamp: 6/24/2023 11:00:52 PM; Code(s): ; Trigger: data science
Undergraduate Course: Advanced Database Systems (INFR11199),"<h2>title</h2>Undergraduate Course: Advanced Database Systems (INFR11199)<h2>summary</h2>Database management systems are at the core of computer applications that need to store, manipulate, and query data. This course takes a deep dive into how modern database systems function internally, from studying their high-level design to understanding the underlying data structures and algorithms used for efficient data processing. The course covers a range of data management techniques from both commercial systems and cutting-edge research literature, enabling students to apply these techniques to other fields of computer science.<br><br>The covered topics include database architecture, storage manager, data models (row, columnar), indexing (tree-based, hash tables), transaction processing (ACID, concurrency control), crash recovery, parallel architectures (multi-core, distributed), and large-scale data processing systems. These topics will be valuable to students who plan to work in the data science industry but also to students who want to do research in the area of data management. The programming component of this course will allow students to develop first-hand experience working with database systems that goes beyond writing SQL queries.<h2>content</h2>        Lectures will cover roughly the following topics:<br>- Database systems architectures, row stores and column stores, OLTP vs. OLAP, in-memory database systems<br>- Storage: secondary-storage devices<br>- Indexing: tree-based and hash-based techniques, multi-dimensional indexing, learning indices from data<br>- Query evaluation: theory of query evaluation, sorting and join processing, selection, projection, aggregation<br>- Query optimisation: cardinality estimation, cost-based query optimisation, dynamic programming, rule-based optimisation<br>- Transaction management: ACID properties, concurrency control, locking and multi-version protocols, crash recovery<br>- Distributed database systems: parallel query evaluation, distributed transaction processing<br>- Big data and NoSQL systems ",cxinfr11199,Edinburgh_UK,Undergraduate Course: Advanced Database Systems (INFR11199),DM,,DM,DM; 10,DM,DM,DM,
Postgraduate Course: Advanced Robotics (INFR11213),"<h2>title</h2>Postgraduate Course: Advanced Robotics (INFR11213)<h2>summary</h2>***This course replaces Robotics: Science and Systems (INFR11092)***<br><br>Robotics is about turning high level goals into plans for action, i.e. robots sense the environment and produce physical motions and interactions with the environment to achieve a goal. In this course, stu-dents will learn the major algorithmic techniques and practical skills in robotics that can be applied and transferred to many real-world applications, such as manipulation of surgical robotics and robot as-sembly in automobile and manufacturing. <br><br>The course assumes no prior knowledge of robotics, so begins with a high-level overview of the major areas in robotics and then introduces core topics: kinematics, dynamics and control; state estimation and signal processing; digital control systems; optimisation and optimal control; robot motion planning and basics of robot learning. <br><br>Building on these fundamentals, the course then focuses on the advanced control and task planning of articulated robotic systems, e.g. robotic manipulators. Students develop a lab practical in both simulation and on a real robot, so as to consolidate theoretical knowledge and develop practical skills.<br><h2>content</h2>        This is a fast-paced course that starts with the fundamentals and then proceeds to go in-depth with core elements in robotics. The focused topics cover: kinematics, dynamics and control; state estimation and signal processing; digital control systems; optimisation, robot motion planning; and robot learning. <br><br>The aim of the course is to present essentials in robotics, articulated robots in particular, culminating in a robotic lab practical. The lab involves the development of an integrated robotic system which embodies the major algorithmic techniques used in real-world robotic applications. To bridge the lectures on algorithms and lab sessions, the course also provides tutorials dedicated to the practice of programming and the implementation of algorithms - from the equations to code.<br><br>Lectures on these topics will be complemented by labs that exercise knowledge of a cross section of these techniques, based on realistic tasks driven by real-world applications, such as dual-arm robot manipulation. The practical lab consists of 2 parts: individual-based simulation (80%), and group-based real robot demonstration (20%). The lab demonstration will be carried out on an advanced humanoid robot and students will work in groups to deploy their work on the real robot. ",cxinfr11213,Edinburgh_UK,Postgraduate Course: Advanced Robotics (INFR11213),SPD,,AI; 10,AR; 10; SPD,SPD; AL,SPD,OS; SPD,
Undergraduate Course: Algorithmic Game Theory and its Applications (UG) (INFR11218),"<h2>title</h2>Undergraduate Course: Algorithmic Game Theory and its Applications (UG) (INFR11218)<h2>summary</h2>This course follows the delivery and assessment of Algorithmic Game Theory and its Applications (INFR11020) exactly. Undergraduate students must register for this course, while MSc students must register for INFR11020 instead.<h2>content</h2>        This course follows the delivery and assessment of Algorithmic Game Theory and its Applications (INFR11020) exactly. Undergraduate students must register for this course, while MSc students must register for INFR11020 instead. ",cxinfr11218,Edinburgh_UK,Undergraduate Course: Algorithmic Game Theory and its Applications (UG) (INFR11218),AI,,AL; 09,AL; 09; 15,AL,AL,AL,
60,<h2>title</h2><h2>summary</h2><h2>content</h2> ,cxinfr11245,Edinburgh_UK,,,,,,,,,Annotation: empty; User: Naaz Sibia; Timestamp: 7/5/2023 4:35:40 PM; Code(s): ; Trigger: ; Annotation: ; User: Ruth Lennon; Timestamp: 7/4/2023 9:39:06 PM; Code(s): ; Trigger: Empty; Annotation: no content; User: Jack Parkinson; Timestamp: 7/2/2023 11:16:33 PM; Code(s): ; Trigger: empty; Annotation: nothing here; User: Thom Kunkeler; Timestamp: 7/1/2023 3:57:30 PM; Code(s): ; Trigger: ; Annotation: this should be deleted; User: Lecia Barker; Timestamp: 6/25/2023 8:46:00 PM; Code(s): ; Trigger: empty; Annotation: this should be removed from the data set; User: Lecia Barker; Timestamp: 6/24/2023 11:02:29 PM; Code(s): ; Trigger: empty
Undergraduate Course: Computational Neuroscience (INFR11209),"<h2>title</h2>Undergraduate Course: Computational Neuroscience (INFR11209)<h2>summary</h2>In this course we study computation in neural systems. We will consider problems such as: <br> <br>How do neurons work and how do they communicate with one another? <br> <br>How do groups of neurons work together to form representations of the external world? <br> <br>How are memories stored and retrieved in the brain? <br>  <br>We will employ a combination of bottom-up and top-down approaches, meaning that we study these problems both by modelling and simulating the biological hardware, and by taking inspiration from artificial intelligence to try to build theories of the brain.<h2>content</h2>        This course focuses on computation in the nervous system. You will be introduced to basic neuroscience concepts, learn about how computational models are used to simulate processes in the brain, and learn about theories for how the brain processes information and performs computations. <br><br>Course Content:<br><br>1. Introduction to basic neuroscience concepts<br>2. Models of neurons<br>3. Neural encoding<br>4. Neural decoding<br>5. Information theory<br>6. Network Models<br>7. Plasticity/learning<br><br>The course will be delivered through lectures and computer labs. ",cxinfr11209,Edinburgh_UK,Undergraduate Course: Computational Neuroscience (INFR11209),AL; 04; 03,,,NC; 04; 03,02; 07; AI,4,04; AI,"Annotation: Computational Neuroscience; User: Sara Hooshangi; Timestamp: 7/2/2023 8:40:57 PM; Code(s): ; Trigger: Computational Neuroscience; Annotation: Used AL for the technical topic, but have no idea if this is appropriate; for non-CS, used Psych and Biol (i.e., to try to get at cognitive science).; User: Lecia Barker; Timestamp: 6/25/2023 8:49:10 PM; Code(s): ; Trigger: neuroscience; Annotation: very low confidence on this coding (AI and biology); User: Lecia Barker; Timestamp: 6/24/2023 11:05:20 PM; Code(s): ; Trigger: computational neuroscience"
Postgraduate Course: Human-Computer Interaction (Level 11) (INFR11017),"<h2>title</h2>Postgraduate Course: Human-Computer Interaction (Level 11) (INFR11017)<h2>summary</h2>The design and implementation of efficient, effective and user friendly computer systems, including software objects and physical internet-enabled things, depends upon understanding both the technology and its users. Only then can designers be confident that these information appliances will be properly matched to the skills, knowledge and needs of their users. The study of Human-Computer Interaction (HCI) seeks to combine perspectives and methods of enquiry drawn from disciplines such as Interaction Design, Psychology and Sociology with the tools, techniques and technologies of Computer Science to create an approach to design which is both relevant and practical.<h2>content</h2>        * Background -- the development and scope of HCI. Practical goals. <br>* HCI relevant issues in human perception, memory and thinking processes. <br>* Approaches to designing information appliances -- software objects and physical things. <br>* Design methodologies and notations -- levels of interface design, evaluation methodologies. <br>* Techniques and technologies -- dialogue styles, information presentation. <br>* The design process -- user involvement, iterative design, prototyping.  <br>* Evaluation -- methodologies, formative and summative. Performance analysis. <br>* Specific issues in HCI -- for example: internet of things, novel interfaces, accessibility, and privacy. <br><br>Relevant QAA Computing Curriculum Sections: Human-Computer Interaction (HCI), Information Systems, Systems Analysis and Design. ",cxinfr11017,Edinburgh_UK,Postgraduate Course: Human-Computer Interaction (Level 11) (INFR11017),HCI,,HCI,HCI; 15; 14,HCI,HCI,HCI,
Postgraduate Course: Introduction to Quantum Computing (INFR11099),"<h2>title</h2>Postgraduate Course: Introduction to Quantum Computing (INFR11099)<h2>summary</h2>The aim of this course is to give students a basic overview of the rapidly growing field of Quantum Computation (QC). The course will start with a brief introduction of the mathematical framework of QC. The two models of quantum circuit and measurement-based quantum computing will be introduced. We cover the most important quantum subroutines and their application to well-known quantum algorithms and compare their performance with respect to classical computing. We finish the course by surveying few more advanced topics, such as quantum error correction, algorithms for near-term architectures and secure delegated QC.<h2>content</h2>        - Basic concepts from Linear Algebra necessary for understanding the axioms of Quantum Mechanics, <br>- Axioms of Quantum Mechanics, describing quantum system, quantum operators, composition, entanglement and measurements <br>- Quantum Computing via quantum circuit model: Description of qubit and universal set of gates. <br>- The first quantum protocols: Quantum teleportation and super dense coding <br>- Quantum subroutines such as Phase Kick-back, Quantum Fourier Transform or Phase-Estimation <br>- Quantum Algorithms such as Grover's Search, Deutsch-Jozsa, Bernstein-Vazirani or Shor. <br>- Quantum Computing via measurement-based model: Description of graph state and measurement calculus <br>- Advanced Topics: quantum error correction, algorithm for near-term architectures, unconditionally secure quantum cloud computing ",cxinfr11099,Edinburgh_UK,Postgraduate Course: Introduction to Quantum Computing (INFR11099),AL; AI,,AL; 07,AR; 10,AL; 09,AR,AR,"Annotation: Quantum Computing; User: Sara Hooshangi; Timestamp: 7/2/2023 8:41:22 PM; Code(s): ; Trigger: Quantum Computing; Annotation: I used AI and AL, but have low confidence; User: Lecia Barker; Timestamp: 6/25/2023 6:54:25 PM; Code(s): AI, AL; Trigger: quantum computing; Annotation: should this course be included?; User: Lecia Barker; Timestamp: 6/24/2023 11:05:51 PM; Code(s): ; Trigger: postgraduate course"
Undergraduate Course: Machine Learning Theory (INFR11202),"<h2>title</h2>Undergraduate Course: Machine Learning Theory (INFR11202)<h2>summary</h2>This course is an introduction to the theory of learning algorithms and their properties that are relevant to the widespread use of machine learning. The course starts with the standard mathematical concepts in theoretical ML. It then covers classical analytic results about accuracy, confidence, sample complexity and model complexity. Standard learning/optimisation algorithms are described in this context. In modern research areas such as trustworthy machine learning, several properties including privacy, fairness and interpretablity are considered vital for widespread reliable use of machine learning. These topics are discussed in a mathematical perspective.<br><br>The course aims to provide a firm foundation in reading and understanding mathematical ideas so that students are equipped to follow the latest developments and research, and to interpret relevant properties and tradeoffs. Throughout, the course will take the approach of precise mathematical definition and analysis, coupled with easy examples and intuition to aid understanding.<h2>content</h2>        The following is an indicative list of topics in the course:<br><br> 1. Notations, terminology and formal models.<br> 2. Learning theory: Empirical risk minimisation and sampling complexity. Probably approximately correct (PAC) guarantees.<br> 3. Complexity of learning models (e.g. VC dimension) and bias-complexity tradeoff.<br> 4. Optimization algorithms. Regression, SVM, Stochastic gradient descent and its variants.<br> 5. Regularization, convexity, stability, Lipschitzness and other properties<br> 6. Statistical Privacy<br> 7. Mechanisms for privacy preserving machine learning. Differentially private stochastic gradient descent.<br> 8. Interpretable machine learning. (E.g. Feature importance)<br> 9. Fairness.<br><br>The topics will be discussed with reference to standard machine learning techniques, and examples of realistic problems. Our approach will include precise definitions and analysis as well as examples and intuitive explanations. The relevance and domain of applicability of the various concepts will be discussed.<br><br>Tutorials and problem sets will be available to help understanding and exploration of the subject. ",cxinfr11202,Edinburgh_UK,Undergraduate Course: Machine Learning Theory (INFR11202),AI,,AI,AI; 09,AI; 09,AI,AI,
"Undergraduate Course: Natural Language Understanding, Generation, and Machine Translation (INFR11157)","<h2>title</h2>Undergraduate Course: Natural Language Understanding, Generation, and Machine Translation (INFR11157)<h2>summary</h2>This course explores current research on processing natural language: interpreting, generating, and translating. The course will focus mainly on deep learning approaches to various NLP tasks and applications. It will provide an introduction to the main neural network architectures used in NLP and how they are used for tasks such as syntactic and semantic parsing, as well as end-user applications such as machine translation and text summarisation.<br><br>Building on linguistic and algorithmic knowledge taught in prerequisite courses, this course also aims to further develop students' understanding of the strengths and weaknesses of current approaches with respect to linguistic and computational considerations. Practical assignments will provide the opportunity to implement and analyse some of the approaches considered.<h2>content</h2>        The course aims to familiarise students with recent research across a range of topics within NLP, mainly within the framework of neural network models, and with a focus on applications such as machine translation, summarisation, and semantic parsing. As an MSc-level course that assumes previous experience with NLP, it will discuss a range of different issues, including linguistic/representational capacity, computational efficiency, optimisation, etc. There is no textbook for the course; readings will come from recent research literature. ",cxinfr11157,Edinburgh_UK,"Undergraduate Course: Natural Language Understanding, Generation, and Machine Translation (INFR11157)",AI,,AI,AL; 09,AI; AL,AI,AI; 19,
Undergraduate Course: Principles and Design of IoT Systems (INFR11150),"<h2>title</h2>Undergraduate Course: Principles and Design of IoT Systems (INFR11150)<h2>summary</h2>The course is concerned with the emerging discipline of digitising the physical world with networks of wireless sensors, analysing the sensor data using machine learning techniques to extract actionable information, and influencing the physical world via actuators, with an optional human in the loop. <br><br>The course imparts foundational concepts in IoT through personal research distilled in the form of two survey papers on foundational topics in IoT, and students working in pairs gain hands-on experience by realising a healthcare application idea as a demonstratable IoT system using wearable sensors by  the send of the semester.<h2>content</h2>        The course aims to deliver a sound understanding of the design and analysis of Internet of Things systems through personal research and practice. The research in a choice of selected foundational topics in IoT provides the foundational knowledge distilled in the form of two 3000-word survey papers.   <br><br>The students conduct a major piece of coursework working in pairs to develop an IoT application using wearable sensors. Students will experience all the stages in the design and implementation of a complex system, from its specification to the demonstration of a working prototype. They will be exposed to aspects of embedded systems programming, sensor data analytics using machine learning methods, user interface design, system integration and testing. Each pair will demonstrate a working prototype at the end of Semester 1 and deliver a written report at the start of Semester 2. <br><br>Each student pair is given a set of Mbed development board (NRF52-DK), Inertial Measurement Unit (MPU-9250) with 3-axis accelerometer and gyroscope sensors, and an on-line software development environment - the ARM Mbed compiler. The task will be to design, implement and demonstrate a Step Tracker for walking on level ground, running and climbing stairs using the wearable sensor which interfaces to an Android App. ",cxinfr11150,Edinburgh_UK,Undergraduate Course: Principles and Design of IoT Systems (INFR11150),SPD,,NC; SPD,AR; SF; 10,SPD; HCI,SPD,AR; AI,
Postgraduate Course: Probabilistic Modelling and Reasoning (INFR11134),"<h2>title</h2>Postgraduate Course: Probabilistic Modelling and Reasoning (INFR11134)<h2>summary</h2>When dealing with real world data, we often need to deal with uncertainty. For example, short segments of speech may be ambiguous, and we need to take into account context in order to make sense of an utterance. Probability theory provides a rigorous method for representing and reasoning with uncertain knowledge. The course covers two main areas (i) the process of inference with probabilistic models and (ii) learning probabilistic models from data. <br><br>Its aim is to provide a firm grounding in probabilistic modelling and reasoning, and to give a basis which will allow students to go on to develop their interests in more specific areas, such as statistical language modelling, bioinformatics, computational neuroscience, or computer vision, to name a few examples.<h2>content</h2>        The course will cover the most important topics in probabilistic modelling and unsupervised learning, and provide a thorough basis for understanding extensions, further developments and applications.<br><br>While the precise topics will vary slightly from year to year, the core content will revolve around:<br>- probabilistic graphical models<br>- exact inference<br>- learning from data<br>- methods for approximate inference and learning<br><br>The course will be delivered in a series of lectures and exercises. In addition to working through exercises with pencil and paper, the students will be expected to complete some programming exercises to gain experience with implementing and using the material taught in the course. ",cxinfr11134,Edinburgh_UK,Postgraduate Course: Probabilistic Modelling and Reasoning (INFR11134),AI; MSF,,9,MSF; 09,MSF; AI,AI,AL; AI,
Undergraduate Course: Security Engineering (INFR11208),"<h2>title</h2>Undergraduate Course: Security Engineering (INFR11208)<h2>summary</h2>This course aims to give students a thorough understanding of how to engineer security in modern systems. We discuss threat actors from nation states through cybercrime gangs to abuse by family members. We dive into detailed case studies of applications such as payment networks and vehicle systems. We analyse the protection mechanisms of platforms they rely on, such as smartcards, mobile phones and cloud systems. We work through multiple perspectives: classical systems engineering, the psychology of users good and bad, and the incentives facing different actors in the system. This enables students to take a holistic view of security as an emergent property of complex systems, and of related properties such as safety, and to understand how to manage them as systems and their environments evolve.<h2>content</h2>        As ever more devices participate in online systems that become ever more complex, it is ever more important,and more difficult, to manage emergent properties such as security, safety and sustainability. Security engineering is not just about individual mechanisms such as cryptography and access controls but how they work together at scale in real systems. This course will illustrate how to analyse threats and hazards systematically, evolve security policies, integrate them with safety policies and accounting standards as need be, test and certify the resulting systems, and manage their evolution as vulnerabilities are discovered or as their requirements change over time.<br><br>Over the course of 15 lectures we will study how real systems are attacked by a variety of opponents and how their defences evolve to cope. We will look in detail at important applications such as payments, home automation and vehicles. We will look at the psychology of secure design: how we can minimise the risk of attacks involving deception. We will analyse the economics of security: when service providers have adequate incentives to prevent fraud, and where market failure or poor regulation get in the way. <br><br>We will take a deep dive into the protection mechanisms of the underlying platforms, from smartcards through mobile phones to containers, and at whole ecosystems such as phone apps, cloud services and network security. By the end of the course, students should be able to analyse a security problem across the entire systems stack, from the threats and protection goals down through the application and the platforms and if need be to the hardware. They should also appreciate how security interacts with related emergent properties such as safety and sustainability. ",cxinfr11208,Edinburgh_UK,Undergraduate Course: Security Engineering (INFR11208),SEC,,SEC,SEC,04; SE,SEC,SEC,
Undergraduate Course: Social and Technological Networks (INFR11124),"<h2>title</h2>Undergraduate Course: Social and Technological Networks (INFR11124)<h2>summary</h2>In this course, we will study core properties of networks arising in various social, scientific and technological contexts. We will see techniques for their analysis, and applications in social networks, World Wide Web, Internet, IoT etc. The course will cover fundamental theories and techniques from machine learning, algorithms and mathematics. We will see the relevance of these techniques in real networks, as well as use of network-based techniques in more general data analysis. The course will involve theoretical analysis in class, development of algorithms, and writing of programs to analyse network data.<h2>content</h2>        The course will study computational, mathematical and data analysis aspects of networks. Typical topics will include properties of social networks, epidemics, spread of innovation, random graphs, metric properties, preferential attachments and power law networks. It will cover relation to data analysis and machine learning: including clustering and community detection, submodularity, optimization, embedding (dimension reduction) and classification. Other current topics will be covered as appropriate. ",cxinfr11124,Edinburgh_UK,Undergraduate Course: Social and Technological Networks (INFR11124),15; MSF,,AL; MSF,NC; 09; 15,04; AL,,NC; DM,
Advanced Networked Systems (H) COMPSCI4091,"<h2>title</h2>Advanced Networked Systems (H) COMPSCI4091<h2>summary</h2><p id=""_COMPSCI40910""><span id=""_COMPSCI40911"">The course aims to give students a deep understanding of the fundamental design, implementation, management, and evaluation principles that govern large-scale, high-speed networked systems. These include algorithmic and implementation techniques for high-speed networking in routers and end-nodes; systems performance measurement and modelling principles; network and system resource management, allocation and engineering schemes; and research and technological advances that drive the development of a converged, global telecommunications medium of the future.</span></p><h2>content</h2><p id=""_COMPSCI409131""><span id=""_COMPSCI409132"">Computer networks have become an integral part of society - we take for granted the ability to transact commerce over the Internet, to store documents online, and that users can avail themselves of a growing set of communication methods, ranging from file sharing to social networking and video conferencing. Moreover, computer networks underpin a lot of recent paradigm-shifting advances in ICT, from Cloud Computing, to Smart Cities and the Internet of Things.</span></p><p id=""_COMPSCI409133"">&nbsp;</p><p id=""_COMPSCI409134""><span id=""_COMPSCI409135"">To support the seamless provision of all these advanced services, computer networks engage a complex set of interconnected systems and components whose design is governed by principles across the spectrum of Computing Science and Engineering: from hardware and software architecture, to protocols and algorithms, to analysis and modelling. </span></p><p id=""_COMPSCI409136""><span id=""_COMPSCI409137"">This course will therefore adopt a holistic systems thinking instead of the 'black-box' thinking that often results from treating concepts (such as, e.g., algorithms, OS, networking) in isolation.</span></p><p id=""_COMPSCI409138"">&nbsp;</p><p id=""_COMPSCI409139"">&nbsp;</p><p id=""_COMPSCI409140""><span id=""_COMPSCI409141"">1. </span><span id=""_COMPSCI409142"">The course </span><span id=""_COMPSCI409143"">will look at 'network algorithmics' as an interdisciplinary systems approach to streamlining network stack implementations in routers and end-nodes, and understand the bottlenecks that need to be overcome in order to meet strict performance requirements.</span></p><p id=""_COMPSCI409144""><span id=""_COMPSCI409145"">2. </span><span id=""_COMPSCI409146"">The course </span><span id=""_COMPSCI409147"">will </span><span id=""_COMPSCI409148"">cover </span><span id=""_COMPSCI409149"">the importance of high performance in network design and implementation, and understand the need for building networked systems that are on par with ever increasing physical link capacities (you can buy more bandwidth, but cannot buy less delay). In doing so, ways to measure network performance</span><span id=""_COMPSCI409150"">&nbsp;will be explored</span><span id=""_COMPSCI409151"">, and also approaches to evaluating and analysing the performance of networked systems. Students will therefore be able to generalise and reason about the capabilities and limitations of different processing and service models. </span></p><p id=""_COMPSCI409152""><span id=""_COMPSCI409153"">3. </span><span id=""_COMPSCI409154"">In addition, the course</span><span id=""_COMPSCI409155"">&nbsp;will look at algorithms and technologies for efficient and fair resource usage, </span><span id=""_COMPSCI409156"">and students will </span><span id=""_COMPSCI409157"">understand the importance of end-to-end protocol design and traffic engineering. </span><span id=""_COMPSCI409158"">For example, students</span><span id=""_COMPSCI409159"">&nbsp;will understand why, in networks, packet loss is not an isolated incident 'when things go wrong' but the norm: a mechanism based on which the appropriate feedback loops</span><span id=""_COMPSCI409160"">&nbsp;can be created </span><span id=""_COMPSCI409161"">to ensure that the underlying resources are used fully and shared equally.</span></p><p id=""_COMPSCI409162""><span id=""_COMPSCI409163"">4. </span><span id=""_COMPSCI409164"">The course will also </span><span id=""_COMPSCI409165"">look at recent technological and research advances in emerging</span><span id=""_COMPSCI409166"">&nbsp;computer networking technologies and protocols. For example, Data Centre / Cloud networking for achieving </span><span id=""_COMPSCI409167"">full bi-section bandwidth; Software-Defined Networking (SDN) as a transformative paradigm aiming to logically centralise the network control plane; Network Function Virtualisation (NFV) as an approach to embed add-on services on top of connectivity in network infrastructures; </span><span id=""_COMPSCI409168"">Resilient networked systems.</span></p><p id=""_COMPSCI409169"">&nbsp;</p><p id=""_COMPSCI409170"">&nbsp;</p><p id=""_COMPSCI409171""><span id=""_COMPSCI409172"">By the end of this course, students will have a deep understanding of the design and implementation principles for building high-performance inter-connected systems, as well as specialist knowledge in advances in computer networking technology. This course will be particularly suitable for students who aspire to successful careers either in systems research, or in diverse industry sectors ranging from global (e.g., Google, Facebook, Amazon) to local (e.g., the banking sector) infrastructure operators, to equipment vendors (e.g., Cisco, Huawei, Ericson) and Internet Service Providers (e.g., BT).</span></p><h2>ilo</h2><p id=""_COMPSCI409173""><span id=""_COMPSCI409174"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI409175""><span id=""_COMPSCI409176"">1.</span><span id=""_COMPSCI409177""> Articulate the key challenges in building high-speed networked systems </span></p><p id=""_COMPSCI409178""><span id=""_COMPSCI409179"">2.</span><span id=""_COMPSCI409180""> </span><span id=""_COMPSCI409181"">Illustrate </span><span id=""_COMPSCI409182"">the design and im</span><span id=""_COMPSCI409183"">plement</span><span id=""_COMPSCI409184"">ation </span><span id=""_COMPSCI409185"">implications</span><span id=""_COMPSCI409186"">&nbsp;</span><span id=""_COMPSCI409187"">for high-performance networked systems, </span><span id=""_COMPSCI409188""><br></span><span id=""_COMPSCI409189""> p</span><span id=""_COMPSCI409190"">rotocols, and algorithms</span></p><p id=""_COMPSCI409191""><span id=""_COMPSCI409192"">3.</span><span id=""_COMPSCI409193""> Design and conduct experiments over diverse networked infrastructures </span></p><p id=""_COMPSCI409194""><span id=""_COMPSCI409195"">4.</span><span id=""_COMPSCI409196"">Outline and critique advances in networking technology and systems</span></p> ",COMPSCI4091,Glasgow_Scotland,Advanced Networked Systems (H) COMPSCI4091,NC,,NC; SF,NC; 09; 15,NC,NC,NC,
Advanced Software Engineering Practices (H) COMPSCI4071,"<h2>title</h2>Advanced Software Engineering Practices (H) COMPSCI4071<h2>summary</h2><p id=""_COMPSCI40710""><span id=""_COMPSCI40711"">This course </span><span id=""_COMPSCI40712"">gives</span><span id=""_COMPSCI40713"">&nbsp;students</span><span id=""_COMPSCI40714"">&nbsp;</span><span id=""_COMPSCI40715"">the opportunity </span><span id=""_COMPSCI40716"">to learn and practice</span><span id=""_COMPSCI40717"">&nbsp;advanced </span><span id=""_COMPSCI40718"">prin</span><span id=""_COMPSCI40719"">ciples, methods and tools </span><span id=""_COMPSCI407110"">in </span><span id=""_COMPSCI407111"">S</span><span id=""_COMPSCI407112"">oftware </span><span id=""_COMPSCI407113"">Engineering.</span><span id=""_COMPSCI407114"">&nbsp; The course is intended for students who have experience of software development through a summer internship or similar. The course covers technical and management</span><span id=""_COMPSCI407115"">&nbsp;skills that are needed for mentoring and </span><span id=""_COMPSCI407116"">leading teams of software developers.  The course is</span><span id=""_COMPSCI407117"">&nbsp;delivered in collaboration with a</span><span id=""_COMPSCI407118"">n</span><span id=""_COMPSCI407119"">&nbsp;established software industry partner</span><span id=""_COMPSCI407120"">&nbsp;(JP Morgan)</span><span id=""_COMPSCI407121"">.</span></p><h2>content</h2><p id=""_COMPSCI407175""><span id=""_COMPSCI407176"">To introduce advanced principles, methods an</span><span id=""_COMPSCI407177"">d tools in</span><span id=""_COMPSCI407178"">&nbsp;</span><span id=""_COMPSCI407179"">S</span><span id=""_COMPSCI407180"">oftwa</span><span id=""_COMPSCI407181"">re Engineering.</span></p><p id=""_COMPSCI407182""><span id=""_COMPSCI407183"">To introduce techniques for effective working in software teams in a mentoring role, </span></p><p id=""_COMPSCI407184""><span id=""_COMPSCI407185"">To expose students to the practicalities and reality of software engineering in industry.</span></p><h2>ilo</h2><p id=""_COMPSCI407186""><span id=""_COMPSCI407187"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407188""><span id=""_COMPSCI407189"">1. </span><span id=""_COMPSCI407190"">Explain a range of advanced practices in software engineering including change management, requirements negotiation and prioritisation, software architectural decision making, continuous integration and agile project management</span><span id=""_COMPSCI407191"">;</span></p><p id=""_COMPSCI407192""><span id=""_COMPSCI407193"">2. </span><span id=""_COMPSCI407194"">Apply and adapt mentoring techniques for working with less experienced colleagues</span><span id=""_COMPSCI407195"">;</span></p><p id=""_COMPSCI407196""><span id=""_COMPSCI407197"">3. </span><span id=""_COMPSCI407198"">Identify, plan, implement and evaluate improvements to team software processes</span><span id=""_COMPSCI407199"">;</span></p><p id=""_COMPSCI4071100""><span id=""_COMPSCI4071101"">4. </span><span id=""_COMPSCI4071102"">Be aware of the limitations of existing software engineering practices in large scale systems development.</span></p> ",COMPSCI4071,Glasgow_Scotland,Advanced Software Engineering Practices (H) COMPSCI4071,SE,,SE,SE,SE,SE,SE; 17,
"Big Data: Systems, Programming, and Management (H) COMPSCI4064","<h2>title</h2>Big Data: Systems, Programming, and Management (H) COMPSCI4064<h2>summary</h2><p id=""_COMPSCI40640""><span id=""_COMPSCI40641"">Big Da</span><span id=""_COMPSCI40642"">ta is nowadays manifested in a </span><span id=""_COMPSCI40643"">very large number of environments and application fields pertaining to our education, entertainment, health, public governance, enterprising, etc. The course will endow students with the understanding of the new challenges big data introduces and the currently available solutions. These include (i) challenges pertaining to the modelling, accessing, and storing of big data, (ii) an understanding of the fundamentals of systems designed to store and access big data, and (iii) programming paradigms for efficient scalable access to big data.</span></p><h2>content</h2><p id=""_COMPSCI406427""><span id=""_COMPSCI406428"">The course aims to endow students with:</span></p><p id=""_COMPSCI406429""><span id=""_COMPSCI406430"">An understanding of the new challenges posed by the advent for big data, as they refer to its modelling, storage, and access, paying particular emphasis on the impact of the desiderata of scalability and efficiency in big data infrastructures.</span></p><p id=""_COMPSCI406431""><span id=""_COMPSCI406432"">Exposure to a number of different cloud </span><span id=""_COMPSCI406433"">data stores</span><span id=""_COMPSCI406434"">&nbsp;and their design and implementation details, showing how they can achieve efficiency and scalability, while also addressing design trade-offs and their impacts.</span></p><p id=""_COMPSCI406435""><span id=""_COMPSCI406436"">Familiarity with </span><span id=""_COMPSCI406437"">modern </span><span id=""_COMPSCI406438"">programming paradigm</span><span id=""_COMPSCI406439"">s (e.g., MapReduce, RDDs, etc.)</span><span id=""_COMPSCI406440"">, so to enable them to write programs which can execute in massively parallel infrastructures in the cloud.</span></p><p id=""_COMPSCI406441""><span id=""_COMPSCI406442"">The ability to understand the internals of </span><span id=""_COMPSCI406443"">(</span><span id=""_COMPSCI406444"">NoSQL</span><span id=""_COMPSCI406445"">)</span><span id=""_COMPSCI406446"">&nbsp;cloud </span><span id=""_COMPSCI406447"">data </span><span id=""_COMPSCI406448"">storage systems and the ability to enrich these systems with additional functionality.</span></p><h2>ilo</h2><p id=""_COMPSCI406450""><span id=""_COMPSCI406451"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI406452""><span id=""_COMPSCI406453"">1. </span><span id=""_COMPSCI406454"">Design</span><span id=""_COMPSCI406455"">,</span><span id=""_COMPSCI406456"">&nbsp;employ </span><span id=""_COMPSCI406457"">and evaluate </span><span id=""_COMPSCI406458"">programs to access big data repositories in a massively parallel manner</span><span id=""_COMPSCI406459"">;</span></p><p id=""_COMPSCI406460""><span id=""_COMPSCI406461"">2. </span><span id=""_COMPSCI406462"">D</span><span id=""_COMPSCI406463"">escribe and </span><span id=""_COMPSCI406464"">contrast</span><span id=""_COMPSCI406465"">&nbsp;the internals of the design and implementation</span><span id=""_COMPSCI406466"">&nbsp;of current cloud </span><span id=""_COMPSCI406467"">data storage </span><span id=""_COMPSCI406468"">and processing </span><span id=""_COMPSCI406469"">systems; </span></p><p id=""_COMPSCI406470""><span id=""_COMPSCI406471"">3. </span><span id=""_COMPSCI406472"">Identify and discuss </span><span id=""_COMPSCI406473"">issues related to the scalability and efficiency challenges when processing complex queries</span><span id=""_COMPSCI406474"">/algorithms</span><span id=""_COMPSCI406475"">&nbsp;against big data systems</span><span id=""_COMPSCI406476"">, and propose ways of addressing said challenges;</span></p><p id=""_COMPSCI406477""><span id=""_COMPSCI406478"">4. </span><span id=""_COMPSCI406479"">D</span><span id=""_COMPSCI406480"">emonstrate that they have mastered the required background knowledge to pursue graduate studies in the fields of cloud systems and big data.</span></p> ",COMPSCI4064,Glasgow_Scotland,"Big Data: Systems, Programming, and Management (H) COMPSCI4064",DM,,DM,DM; MSF; 09,DM; AI,DM,DM,
Coaching Software Teams (H) COMPSCI4094,"<h2>title</h2>Coaching Software Teams (H) COMPSCI4094<h2>summary</h2><p id=""_COMPSCI40940""><span id=""_COMPSCI40941"">This course gives students the opportunity to learn and practice principles, practices and methods used in coaching Software Engineering teams.  The course is intended for students who have experience of software development through a summer internship or similar. The course covers interpersonal and management skills that are needed for mentoring and leading teams of software developers. The course focuses on whole-team coaching and how to introduce and embed software engineering practices in existing teams. The course is delivered in collaboration with an established software industry partner (JP Morgan).</span></p><h2>content</h2><p id=""_COMPSCI409431""><span id=""_COMPSCI409432"">To introduce advanced principles, practices and methods used in whole-team coaching of Software Engineering teams.</span></p><p id=""_COMPSCI409433""><span id=""_COMPSCI409434"">To introduce techniques for effective working in software teams in a mentoring role, </span></p><p id=""_COMPSCI409435""><span id=""_COMPSCI409436"">To expose students to the practicalities and reality of software engineering in industry.</span></p><h2>ilo</h2><p id=""_COMPSCI409437""><span id=""_COMPSCI409438"">By the end of this course students will be able to:</span><span id=""_COMPSCI409439"">&nbsp;</span></p><p id=""_COMPSCI409440""><span id=""_COMPSCI409441"">1. </span><span id=""_COMPSCI409442"">Explain a range of advanced practices in large-scale collaborative software engineering including agile project management, stakeholder management, user research and product discovery;</span></p><p id=""_COMPSCI409443""><span id=""_COMPSCI409444"">2. </span><span id=""_COMPSCI409445"">Apply and adapt mentoring techniques for working with less experienced colleagues;</span></p><p id=""_COMPSCI409446""><span id=""_COMPSCI409447"">3. </span><span id=""_COMPSCI409448"">Identify, plan, implement and evaluate improvements to team software processes;</span></p><p id=""_COMPSCI409449""><span id=""_COMPSCI409450"">4. </span><span id=""_COMPSCI409451"">Be aware of the limitations of existing software engineering practices in large scale systems development.</span></p> ",COMPSCI4094,Glasgow_Scotland,Coaching Software Teams (H) COMPSCI4094,SE; SEP,,SE; 18,SEP; SDF; 17,17; SEP,SE; SEP,SE; 17,
Computational Social Intelligence (H) COMPSCI4080,"<h2>title</h2>Computational Social Intelligence (H) COMPSCI4080<h2>summary</h2><p id=""_COMPSCI40800""><span id=""_COMPSCI40801"">The course introduces the core methodologies behind automatic approaches </span><span id=""_COMPSCI40802"">aimed at making</span><span id=""_COMPSCI40803"">&nbsp;sense of social and psychological aspects of human behaviour. </span><span id=""_COMPSCI40804"">In particular, the course shows 1) how to design and organise the observation of human behaviour in view of the application of automatic approaches, 2) how to apply psychometric instruments for the quantitative analysis of social and psychological phenomena, and 3) how to apply basic statistical techniques</span><span id=""_COMPSCI40805"">&nbsp;to human behaviour analysis and understanding</span><span id=""_COMPSCI40806"">. The course is interdisciplinary and it requires the acquisition of both computing and </span><span id=""_COMPSCI40807"">social </span><span id=""_COMPSCI40808"">psychological notions.</span><span id=""_COMPSCI40809"">&nbsp;</span><span id=""_COMPSCI408010"">The application areas to which the course is relevant include, </span><span id=""_COMPSCI408011"">e.g.</span><span id=""_COMPSCI408012"">, social robotics, user experience analysis, social media analytics, surveillance </span><span id=""_COMPSCI408013"">and</span><span id=""_COMPSCI408014"">&nbsp;e-health</span><span id=""_COMPSCI408015"">&nbsp;(the list is not exhaustive)</span><span id=""_COMPSCI408016"">.</span></p><h2>content</h2><p id=""_COMPSCI408033""><span id=""_COMPSCI408034"">The aim of the course is to introduce the students to the main computational methodologies </span><span id=""_COMPSCI408035"">for automatic</span><span id=""_COMPSCI408036"">&nbsp;</span><span id=""_COMPSCI408037"">analysis </span><span id=""_COMPSCI408038"">of human behaviour. </span><span id=""_COMPSCI408039"">In particular the course teaches how to design and organise the observation of human behaviour in view </span><span id=""_COMPSCI408040"">of the application of </span><span id=""_COMPSCI408041"">computational approaches</span><span id=""_COMPSCI408042"">. Furthermore, it shows how to quantify social and psychological phenomena through the </span><span id=""_COMPSCI408043"">application</span><span id=""_COMPSCI408044"">&nbsp;of </span><span id=""_COMPSCI408045"">standard psychometric questionnaires. Finally, it introduces basic methodologies - based on machine learning and statistics - aimed at mapping beh</span><span id=""_COMPSCI408046"">avioural observations into high-</span><span id=""_COMPSCI408047"">level interpretations of human behaviour</span><span id=""_COMPSCI408048"">&nbsp;that take into account social and psychological </span><span id=""_COMPSCI408049"">aspects of human-human and human-machine interactions</span><span id=""_COMPSCI408050"">.</span></p><h2>ilo</h2><p id=""_COMPSCI408052""><span id=""_COMPSCI408053"">By the end</span><span id=""_COMPSCI408054"">&nbsp;of this </span><span id=""_COMPSCI408055"">course, the students will be </span><span id=""_COMPSCI408056"">able to:</span></p><p id=""_COMPSCI408057""><span id=""_COMPSCI408058"">1. </span><span id=""_COMPSCI408059"">Design and organise the collection of behavioural data in view of the application of statistical and computational methodologies</span><span id=""_COMPSCI408060"">&nbsp;for human behaviour understanding</span><span id=""_COMPSCI408061"">;</span></p><p id=""_COMPSCI408062""><span id=""_COMPSCI408063"">2. </span><span id=""_COMPSCI408064"">Measure social and psychological </span><span id=""_COMPSCI408065"">constructs</span><span id=""_COMPSCI408066"">&nbsp;- in quantitative terms - through the adoption of standard psychometric questionnaires;</span><span id=""_COMPSCI408067"">&nbsp;</span></p><p id=""_COMPSCI408068""><span id=""_COMPSCI408069"">3. </span><span id=""_COMPSCI408070"">Apply </span><span id=""_COMPSCI408071"">basic </span><span id=""_COMPSCI408072"">statistical methodologies (</span><span id=""_COMPSCI408073"">e.g., </span><span id=""_COMPSCI408074"">k-Means and Naïve Bayes Classifier) to </span><span id=""_COMPSCI408075"">automatically </span><span id=""_COMPSCI408076"">map behavioural observations into social and psychological constructs.</span></p> ",COMPSCI4080,Glasgow_Scotland,Computational Social Intelligence (H) COMPSCI4080,15; AI,,HCI; 15,NC; MSF; 09; 15,04; AI,SEP,04; DM,
Computer Architecture (H) COMPSCI4007,"<h2>title</h2>Computer Architecture (H) COMPSCI4007<h2>summary</h2><p id=""_COMPSCI40070""><span id=""_COMPSCI40071"">The course explains in depth how a computer works, by developing a digital circuit that implements an instruction set architecture.  Topics include cache, virtual memory, support by the architecture for the operating system, and instruction level parallelism.</span></p><h2>content</h2><p id=""_COMPSCI400725""><span id=""_COMPSCI400726"">This course provides a working understanding of the fundamental principles of computer systems.  It answers the question ""How do computers work?"" at a substantive level, as well as giving a foundation needed for other areas in computer systems.  The course reviews the behaviour of digital circuits and introduces a functional hardware description language for specifying and simulating synchronous circuits.  Using the hardware description language, a complete and precise design of </span><span id=""_COMPSCI400727"">a simple</span><span id=""_COMPSCI400728"">&nbsp;but realistic computer architecture is developed.  Advanced topics include the memory system, pipelining, superscalar organisation, and interaction between the architecture and operating system, and the use of formal methods in hardware design.  Current trends are introduced, in particular parallelism and reconfigurable computing.</span></p><h2>ilo</h2><p id=""_COMPSCI400730""><span id=""_COMPSCI400731"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI400732""><span id=""_COMPSCI400733"">1. </span><span id=""_COMPSCI400734"">Demonstrate understanding of a processor </span><span id=""_COMPSCI400735"">datapath</span><span id=""_COMPSCI400736"">&nbsp;design, and be able to derive the control signal settings required to make the </span><span id=""_COMPSCI400737"">datapath</span><span id=""_COMPSCI400738"">&nbsp;perform an operation;</span></p><p id=""_COMPSCI400739""><span id=""_COMPSCI400740"">2. </span><span id=""_COMPSCI400741"">Implement the </span><span id=""_COMPSCI400742"">datapath</span><span id=""_COMPSCI400743"">&nbsp;and the control as digital circuits;</span></p><p id=""_COMPSCI400744""><span id=""_COMPSCI400745"">3. </span><span id=""_COMPSCI400746"">Use simulation to explore properties of a processor circuit;</span></p><p id=""_COMPSCI400747""><span id=""_COMPSCI400748"">4. </span><span id=""_COMPSCI400749"">Analyse the behaviour of a processor pipeline as the processor executes various sequences of instructions;</span></p><p id=""_COMPSCI400750""><span id=""_COMPSCI400751"">5. </span><span id=""_COMPSCI400752"">Predict</span><span id=""_COMPSCI400753"">&nbsp;the impact of the memory hierarchy on system performance;</span></p><p id=""_COMPSCI400754""><span id=""_COMPSCI400755"">6. </span><span id=""_COMPSCI400756"">Describe how the operating system utilizes the architecture's support </span><span id=""_COMPSCI400757"">in order to</span><span id=""_COMPSCI400758"">&nbsp;provide processes, protection, virtual memory, and input/output;</span></p><p id=""_COMPSCI400759""><span id=""_COMPSCI400760"">7. </span><span id=""_COMPSCI400761"">Discuss the role of parallelism in current and future architectures.</span></p> ",COMPSCI4007,Glasgow_Scotland,Computer Architecture (H) COMPSCI4007,AR,,AR,AR; SF; 10,AR,AR,AR,
Computer Vision Methods and Applications (H) COMPSCI4066,"<h2>title</h2>Computer Vision Methods and Applications (H) COMPSCI4066<h2>summary</h2><p id=""_COMPSCI40660""></p><p id=""_COMPSCI40661""><span id=""_COMPSCI40662"">The Computer Vision Methods and Applications (CVMA) course is intended to equip students with the necessary theoretical and practical understanding of image processing and computer vision techniques to enable them to meet the challenges of</span><span id=""_COMPSCI40663"">&nbsp;</span><span id=""_COMPSCI40664"">building advanced image-based applications. Examples of potential vision-based applications include: </span><span id=""_COMPSCI40665"">image understanding in </span><span id=""_COMPSCI40666"">mobile devices (cameras, phones, tablet computers etc.), robot vision systems, autonomous vehicle guidance and road monitoring, driver attention monitoring, image database query systems, creative media production</span><span id=""_COMPSCI40667"">&nbsp;tools</span><span id=""_COMPSCI40668"">, interactive gaming, augmented reality and visual biometrics</span><span id=""_COMPSCI40669"">, forensic image analysis, security and surveillance, </span><span id=""_COMPSCI406610"">and medical imaging. </span><span id=""_COMPSCI406611"">The course will focus on the application of recent advances in Computer Vision techniques that underpin a wide variety of systems and products based on methods such as:</span><span id=""_COMPSCI406612"">&nbsp;face detection,</span><span id=""_COMPSCI406613"">&nbsp;object recognition, tracking, segmentation and 3D imaging.</span></p><h2>content</h2><p id=""_COMPSCI406643""><span id=""_COMPSCI406644"">■&nbsp;</span><span id=""_COMPSCI406645"">To provide a theoretical and practical understanding of 2D and 3D visual perception based on current image analysis techniques and currently available vision software libraries.</span></p><p id=""_COMPSCI406646""><span id=""_COMPSCI406647"">■&nbsp;</span><span id=""_COMPSCI406648"">To equip the student with the ability to tackle the practical aspects of developing algorithms for vision-based applications as listed above</span><span id=""_COMPSCI406649"">&nbsp;(section 13)</span><span id=""_COMPSCI406650"">. Therefore, CVMA will provide the student with the basic tools to undertake Level 4 and Masters projects that require vision to be applied within in these related disciplines. </span></p><p id=""_COMPSCI406651""><span id=""_COMPSCI406652"">■&nbsp;</span><span id=""_COMPSCI406653"">To prepare the student for a career in Industry as a Computer Vision specialist in areas such as Research &amp; Development, Technical Marketing and Intellectual Property Management; or for an Academic career, e.g. PhD research or Research Assistantship.</span></p><h2>ilo</h2><p id=""_COMPSCI406655""><span id=""_COMPSCI406656"">By the end of the course students </span><span id=""_COMPSCI406657"">will </span><span id=""_COMPSCI406658"">be able to: </span></p><p id=""_COMPSCI406659""><span id=""_COMPSCI406660"">1. </span><span id=""_COMPSCI406661"">Analyse</span><span id=""_COMPSCI406662"">&nbsp;critically computer vision algorithms and applications based on knowledge of image representation, image formation and basic processing techniques;</span></p><p id=""_COMPSCI406663""><span id=""_COMPSCI406664"">2. </span><span id=""_COMPSCI406665"">Implement feature extraction and object recognition algorithms;</span></p><p id=""_COMPSCI406666""><span id=""_COMPSCI406667"">3. </span><span id=""_COMPSCI406668"">Critically evaluate the basic geometric concepts in 3D computer vision and employed in recovery of 3D </span><span id=""_COMPSCI406669"">surfaces from stereo-pair images, or motion fields from image sequences;</span></p><p id=""_COMPSCI406670""><span id=""_COMPSCI406671"">4. </span><span id=""_COMPSCI406672"">Demonstrate the ability to apply the rudiments of information theory and basic image compression </span><span id=""_COMPSCI406673"">&nbsp;                                   </span><span id=""_COMPSCI406674"">techniques to the design of image coding/decoding algorithms;</span></p><p id=""_COMPSCI406675""><span id=""_COMPSCI406676"">5. </span><span id=""_COMPSCI406677"">Demonstrate competence in the use of the </span><span id=""_COMPSCI406678"">programming languages for vision-based applications prototyping.  Demonstrate competence in the application of the key current image analysis libraries.</span></p> ",COMPSCI4066,Glasgow_Scotland,Computer Vision Methods and Applications (H) COMPSCI4066,GIT,,AI,GIT; SPD,GIT,GIT; SPD,GIT,
Distributed and Parallel Technologies (H) COMPSCI4082,"<h2>title</h2>Distributed and Parallel Technologies (H) COMPSCI4082<h2>summary</h2><p id=""_COMPSCI40820""><span id=""_COMPSCI40821"">This course aims to develop in students a better understanding of the computing science challenges posed by the dominant highly concurrent architectures. These include engineering scalable and reliable systems. Students will gain both a broad overview of emerging technologies for engineering reliable and scalable systems, together with practical experience using a small number of key technologies for designing, implementing and evaluating scalable parallel systems and reliable distributed systems.</span></p><h2>content</h2><p id=""_COMPSCI408231""><span id=""_COMPSCI408232"">The many</span><span id=""_COMPSCI408233"">&nbsp;</span><span id=""_COMPSCI408234"">core revolution means that almost all </span><span id=""_COMPSCI408235"">hardware platforms contain </span><span id=""_COMPSCI408236"">multiple cores</span><span id=""_COMPSCI408237"">, and that the architectures evolve rapidly as the number of cores increases. </span></p><p id=""_COMPSCI408238"">&nbsp;</p><p id=""_COMPSCI408239""><span id=""_COMPSCI408240"">Software on such platforms</span><span id=""_COMPSCI408241"">&nbsp;must be</span><span id=""_COMPSCI408242"">&nbsp;</span></p><p id=""_COMPSCI408243"">&nbsp;</p><p id=""_COMPSCI408244""><span id=""_COMPSCI408245"">Scalable:</span><span id=""_COMPSCI408246"">&nbsp;emergent computing platforms operate at unprecedented scale, with commodity servers already commonly comprising hundreds of hosts, tens of thousands of cores, and thousands of storage devices.  The trend towards large distributed systems is driven by Moore's law and is powering transformative developments in areas like sensor networks, the Internet of Things, and big data infrastructures and analytics. </span></p><p id=""_COMPSCI408247"">&nbsp;</p><p id=""_COMPSCI408248""><span id=""_COMPSCI408249"">Reliable:</span><span id=""_COMPSCI408250"">&nbsp;systems must tolerate and recover from hardware, software and network failures.  </span><span id=""_COMPSCI408251"">Moreover the semantics of highly concurrent and fault tolerant systems is complex, and specialised techniques are required to reasoning about these systems so as to be confident that they are reliable in the sense of being correct.  </span></p><p id=""_COMPSCI408252"">&nbsp;</p><p id=""_COMPSCI408253""><span id=""_COMPSCI408254"">This course aims to provide both a broad overview of emerging technologies for engineering reliable and scalable systems, together with practical experience using a small number of key technologies for designing, implementing and evaluating scalable parallel systems and reliable distributed systems.</span></p><h2>ilo</h2><p id=""_COMPSCI408256""><span id=""_COMPSCI408257"">By the end of the course students will be able to: </span></p><p id=""_COMPSCI408258""><span id=""_COMPSCI408259"">1. </span><span id=""_COMPSCI408260"">Articulate the key computing science challenges posed by many</span><span id=""_COMPSCI408261"">&nbsp;</span><span id=""_COMPSCI408262"">core architectures, the technologies available to address them</span><span id=""_COMPSCI408263"">, and </span><span id=""_COMPSCI408264"">the challenges of building reliable and scalable systems</span><span id=""_COMPSCI408265"">;</span></p><p id=""_COMPSCI408266""><span id=""_COMPSCI408267"">2. </span><span id=""_COMPSCI408268"">Design and implement simple parallel applications on shared and distributed memory architectures</span><span id=""_COMPSCI408269"">;</span></p><p id=""_COMPSCI408270""><span id=""_COMPSCI408271"">3. </span><span id=""_COMPSCI408272"">Evaluate the scaling properties of simple parallel applications</span><span id=""_COMPSCI408273"">;</span></p><p id=""_COMPSCI408274""><span id=""_COMPSCI408275"">4. </span><span id=""_COMPSCI408276"">Design and implement simple reliable distributed applications, selecting </span><span id=""_COMPSCI408277"">appropriately from various families of algorithm used in distributed systems, based on specific system requirements</span><span id=""_COMPSCI408278"">;</span></p><p id=""_COMPSCI408279""><span id=""_COMPSCI408280"">5. </span><span id=""_COMPSCI408281"">Evaluate the reliability properties of simple distributed applications</span><span id=""_COMPSCI408282"">.</span></p> ",COMPSCI4082,Glasgow_Scotland,Distributed and Parallel Technologies (H) COMPSCI4082,PDC,,PDC,PDC,PDC,PDC; AR,PDC,
Information Retrieval (H) COMPSCI4069,"<h2>title</h2>Information Retrieval (H) COMPSCI4069<h2>summary</h2><p id=""_COMPSCI40690""><span id=""_COMPSCI40691"">To present students with an in-depth examination of the theoretical and practical issues involved in providing tools to access large collections of documents, especially in the context of the World Wide Web.</span></p><p id=""_COMPSCI40692""><span id=""_COMPSCI40693"">To present students with the practical engineering issues raised by the design and implementation of an information retrieval system.</span></p><h2>content</h2><p id=""_COMPSCI406928""><span id=""_COMPSCI406929"">To present students with an in-depth examination of the theoretical and practical issues involved in providing tools to access large collections of documents, especially in the context of the World Wide Web.</span></p><p id=""_COMPSCI406930""><span id=""_COMPSCI406931"">To present students with the practical engineering issues raised by the design and implementation of an information retrieval system.</span></p><h2>ilo</h2><p id=""_COMPSCI406934""><span id=""_COMPSCI406935"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI406936""><span id=""_COMPSCI406937"">1. </span><span id=""_COMPSCI406938"">Implement a standard information retrieval (IR) system;</span></p><p id=""_COMPSCI406939""><span id=""_COMPSCI406940"">2. </span><span id=""_COMPSCI406941"">Discuss the theoretical basis behind the standard models of IR (e.g. Boolean, Vector-space, and Probabilistic models);</span></p><p id=""_COMPSCI406942""><span id=""_COMPSCI406943"">3. </span><span id=""_COMPSCI406944"">Discuss how an IR system should be evaluated in terms of the system's performance and the user's satisfaction with the system;</span></p><p id=""_COMPSCI406945""><span id=""_COMPSCI406946"">4. </span><span id=""_COMPSCI406947"">Describe the techniques in organising information;</span></p><p id=""_COMPSCI406948""><span id=""_COMPSCI406949"">5. </span><span id=""_COMPSCI406950"">Describe the techniques involved in retrieving information from the World Wide Web;</span></p><p id=""_COMPSCI406951""><span id=""_COMPSCI406952"">6. </span><span id=""_COMPSCI406953"">Describe the practical engineering issues raised by the implementation of a search engine for the Web</span><span id=""_COMPSCI406954"">.</span></p> ",COMPSCI4069,Glasgow_Scotland,Information Retrieval (H) COMPSCI4069,AI,,DM,DM; 10,DM,AI,AI; NC,
Modelling Reactive Systems (H) COMPSCI4031,"<h2>title</h2>Modelling Reactive Systems (H) COMPSCI4031<h2>summary</h2><p id=""_COMPSCI40310""><span id=""_COMPSCI40311"">Modelling concurrent, communicating systems using non-probabilistic and probabilistic techniques, verification us</span><span id=""_COMPSCI40312"">ing the SPIN and PRISM model checkers</span><span id=""_COMPSCI40313"">, </span><span id=""_COMPSCI40314"">and </span><span id=""_COMPSCI40315"">introduction to reactive </span><span id=""_COMPSCI40316"">synthesis.</span></p><h2>content</h2><p id=""_COMPSCI403126""><span id=""_COMPSCI403127"">Reactive systems are widely and increasingly used throughout society (e.g. telecommunications, flight control, railway signalling, medical devices).  An understanding of the fundamentals of these systems, at an abstract level, is essential for the developm</span><span id=""_COMPSCI403128"">ent of process control systems and should be a pre-requisite for anyone developing software for such applications.  This course provides in-depth study of key formal techniques used in designing and analysing concurrent, reactive systems; and to </span><span id=""_COMPSCI403129"">present th</span><span id=""_COMPSCI403130"">e practical issues raised by using </span><span id=""_COMPSCI403131"">a number of</span><span id=""_COMPSCI403132"">&nbsp;such formalisms and associated software tools, particularly within the context of developing communi</span><span id=""_COMPSCI403133"">cations protocols and other </span><span id=""_COMPSCI403134"">communications applications.</span><span id=""_COMPSCI403135"">&nbsp;</span></p><p id=""_COMPSCI403136""><span id=""_COMPSCI403137"">Students will learn to model systems using the Pro</span><span id=""_COMPSCI403138"">mela specification language and associated verification tool SPIN. In addition, probabilistic systems will be modelled as Discrete Time Markov Chains using the PRISM language and tool. </span></p><p id=""_COMPSCI403139""><span id=""_COMPSCI403140"">L</span><span id=""_COMPSCI403141"">astly, students will</span><span id=""_COMPSCI403142"">&nbsp;be made aware of </span><span id=""_COMPSCI403143"">fundamental</span><span id=""_COMPSCI403144"">&nbsp;concepts</span><span id=""_COMPSCI403145"">&nbsp;of</span><span id=""_COMPSCI403146"">&nbsp;</span><span id=""_COMPSCI403147"">reactive</span><span id=""_COMPSCI403148"">&nbsp;synthesis</span><span id=""_COMPSCI403149"">.</span></p><h2>ilo</h2><p id=""_COMPSCI403150""><span id=""_COMPSCI403151"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI403152"">&nbsp;</p><p id=""_COMPSCI403153""><span id=""_COMPSCI403154"">1: Clearly differentiate issues that arise in concurrent, reactive, and distributed systems;</span></p><p id=""_COMPSCI403155""><span id=""_COMPSCI403156"">2: Explain the various concepts of concurrency and communication that arise </span><span id=""_COMPSCI403157"">in such systems;</span></p><p id=""_COMPSCI403158""><span id=""_COMPSCI403159"">3: Demonstrate understanding of the concepts of signalling and control and associated modelling issues;</span></p><p id=""_COMPSCI403160""><span id=""_COMPSCI403161"">4: Develop message sequence charts for a reactive system;</span></p><p id=""_COMPSCI403162""><span id=""_COMPSCI403163"">5: Enumerate the differences between non-probabilistic and probabilistic form</span><span id=""_COMPSCI403164"">alisms;</span></p><p id=""_COMPSCI403165""><span id=""_COMPSCI403166"">6: Design and analyse a reactive system, including a communication protocol, using appropriate design techniques and mechanised analysis tools (SPIN and PRISM)</span><span id=""_COMPSCI403167"">;</span></p><p id=""_COMPSCI403168""><span id=""_COMPSCI403169"">7:</span><span id=""_COMPSCI403170"">&nbsp;Explain concepts </span><span id=""_COMPSCI403171"">of</span><span id=""_COMPSCI403172"">&nbsp;</span><span id=""_COMPSCI403173"">reactive </span><span id=""_COMPSCI403174"">synthesis</span><span id=""_COMPSCI403175"">.</span></p> ",COMPSCI4031,Glasgow_Scotland,Modelling Reactive Systems (H) COMPSCI4031,FPL; 10,,PDC; NC,NC; PDC; 10,PDC,SPD; PDC,SE; AR,
Operating Systems (H) COMPSCI4011,"<h2>title</h2>Operating Systems (H) COMPSCI4011<h2>summary</h2><p id=""_COMPSCI40110""><span id=""_COMPSCI40111"">To introduce the students to the styles of coding required with an OS; </span></p><p id=""_COMPSCI40112""><span id=""_COMPSCI40113"">To give a thorough presentation of the contents of a traditional OS, including the key abstractions;</span></p><p id=""_COMPSCI40114""><span id=""_COMPSCI40115"">To show the range of algorithms and techniques available for specific OS problems, and the implications of selection specific algorithms for application behaviour; </span></p><p id=""_COMPSCI40116""><span id=""_COMPSCI40117"">To develop an integrated understanding of what the computer is doing, from a non-naive view of hardware to the behaviour of multi-threaded application processes; present the alternatives and clarify the trade-offs that drive OS and hardware design.</span></p><h2>content</h2><p id=""_COMPSCI401155""><span id=""_COMPSCI401156"">To introduce the students to the styles of coding required with an OS; </span></p><p id=""_COMPSCI401157""><span id=""_COMPSCI401158"">To give a thorough presentation of the contents of a traditional OS, including the key abstractions;</span></p><p id=""_COMPSCI401159""><span id=""_COMPSCI401160"">To show the range of algorithms and techniques available for specific OS problems, and the implications of selection specific algorithms for application behaviour; </span></p><p id=""_COMPSCI401161""><span id=""_COMPSCI401162"">To develop an integrated understanding of what the computer is doing, from a non-naive view of hardware to the behaviour of multi-threaded application processes; present the alternatives and clarify the trade-offs that drive OS and hardware design.</span></p><h2>ilo</h2><p id=""_COMPSCI401164""><span id=""_COMPSCI401165"">By the end of this course, students will be able to: </span></p><p id=""_COMPSCI401166""><span id=""_COMPSCI401167"">1. </span><span id=""_COMPSCI401168"">Use current operating system terminology in correctly explaining the functions of an OS;</span></p><p id=""_COMPSCI401169""><span id=""_COMPSCI401170"">2. </span><span id=""_COMPSCI401171"">Relate operating system functions to computer hardware;</span></p><p id=""_COMPSCI401172""><span id=""_COMPSCI401173"">3. </span><span id=""_COMPSCI401174"">Describe the mechanisms of interrupts, context switching and address translation;</span></p><p id=""_COMPSCI401175""><span id=""_COMPSCI401176"">4. </span><span id=""_COMPSCI401177"">Describe the relation of operating system functions to language run-time systems;</span></p><p id=""_COMPSCI401178""><span id=""_COMPSCI401179"">5. </span><span id=""_COMPSCI401180"">Explain the significance of concurrency in operating system design;</span></p><p id=""_COMPSCI401181""><span id=""_COMPSCI401182"">6. </span><span id=""_COMPSCI401183"">Demonstrate an understanding of the semantics of operating system functions, including scheduling and memory management, by being able to describe their functioning;</span></p><p id=""_COMPSCI401184""><span id=""_COMPSCI401185"">7. </span><span id=""_COMPSCI401186"">Implement simple operating system components</span><span id=""_COMPSCI401187"">&nbsp;and basic algorithms (CPU scheduling, deadlock detection and avoidance algorithms);</span></p><p id=""_COMPSCI401188""><span id=""_COMPSCI401189"">8. </span><span id=""_COMPSCI401190"">Critique designs and implementations of OS components, </span><span id=""_COMPSCI401191"">eg</span><span id=""_COMPSCI401192"">&nbsp;the Unix file system;</span></p><p id=""_COMPSCI401193""><span id=""_COMPSCI401194"">9. </span><span id=""_COMPSCI401195"">Illustrate the influence of operating system functions on application behaviour;</span></p><p id=""_COMPSCI401196""><span id=""_COMPSCI401197"">10. </span><span id=""_COMPSCI401198"">Compare and contrast alternative approaches to hardware components such as the CPU and bus;</span></p><p id=""_COMPSCI401199""><span id=""_COMPSCI4011100"">11. </span><span id=""_COMPSCI4011101"">Engineer medium-sized (multi-file) software components for integration into larger C </span><span id=""_COMPSCI4011102"">and/or Java programs</span><span id=""_COMPSCI4011103"">.</span></p> ",COMPSCI4011,Glasgow_Scotland,Operating Systems (H) COMPSCI4011,OS,,OS,OS; 10,OS,OS,OS,
Programming Languages (H) COMPSCI4016,"<h2>title</h2>Programming Languages (H) COMPSCI4016<h2>summary</h2><p id=""_COMPSCI40160""><span id=""_COMPSCI40161"">This course aims to:</span></p><p id=""_COMPSCI40162""><span id=""_COMPSCI40163"">P</span><span id=""_COMPSCI40164"">rovide a conceptual framework that will enable students to understand familiar programming languages more deeply and learn new languages more efficiently;</span></p><p id=""_COMPSCI40165""><span id=""_COMPSCI40166"">S</span><span id=""_COMPSCI40167"">how how the syntax of a programming language can be formalized;</span></p><p id=""_COMPSCI40168""><span id=""_COMPSCI40169"">E</span><span id=""_COMPSCI401610"">xplain the functions of compilers and interpreters, how they interact, and how they work;</span></p><p id=""_COMPSCI401611""><span id=""_COMPSCI401612"">S</span><span id=""_COMPSCI401613"">how how to implement a compiler using compiler-generation tools.</span></p><h2>content</h2><p id=""_COMPSCI401644""><span id=""_COMPSCI401645"">This course aims to:</span></p><p id=""_COMPSCI401646""><span id=""_COMPSCI401647"">P</span><span id=""_COMPSCI401648"">rovide a conceptual framework that will enable students to understand familiar programming languages more deeply and learn new languages more efficiently;</span></p><p id=""_COMPSCI401649""><span id=""_COMPSCI401650"">S</span><span id=""_COMPSCI401651"">how how the syntax of a programming language can be formalized;</span></p><p id=""_COMPSCI401652""><span id=""_COMPSCI401653"">E</span><span id=""_COMPSCI401654"">xplain the functions of compilers and interpreters, how they interact, and how they work;</span></p><p id=""_COMPSCI401655""><span id=""_COMPSCI401656"">S</span><span id=""_COMPSCI401657"">how how to implement a compiler using compiler-generation tools.</span></p><h2>ilo</h2><p id=""_COMPSCI401659""><span id=""_COMPSCI401660"">By the end of the course students will be able to:</span></p><p id=""_COMPSCI401661""><span id=""_COMPSCI401662"">1. </span><span id=""_COMPSCI401663"">Describe the relationships between the imperative, object-oriented, and functional programming paradigms;</span></p><p id=""_COMPSCI401664""><span id=""_COMPSCI401665"">2. </span><span id=""_COMPSCI401666"">Explain fundamental programming language concepts such as values and types, variables and lifetime, bindings and scope, procedural abstraction, data abstraction, and generic abstraction;</span></p><p id=""_COMPSCI401667""><span id=""_COMPSCI401668"">3. </span><span id=""_COMPSCI401669"">Explain the distinction between syntax and semantics, and read and write syntactic specifications of programming languages;</span></p><p id=""_COMPSCI401670""><span id=""_COMPSCI401671"">4. </span><span id=""_COMPSCI401672"">Explain the functions of compilers and interpreters, and compiler-interpreter interactions such as multi-stage compilers, interpretive compilers, and just-in-time compilers;</span></p><p id=""_COMPSCI401673""><span id=""_COMPSCI401674"">5. </span><span id=""_COMPSCI401675"">Implement a compiler and interpreter for a very simple programming language using compiler-generation tools.</span></p> ",COMPSCI4016,Glasgow_Scotland,Programming Languages (H) COMPSCI4016,FPL,,FPL,FPL,SDF; FPL,FPL,FPL,
Recommender Systems (H) COMPSCI4075,"<h2>title</h2>Recommender Systems (H) COMPSCI4075<h2>summary</h2><p id=""_COMPSCI40750""><span id=""_COMPSCI40751"">This course introduces the concepts, applications, algorithms, programming, and design of recommender systems -- software systems that recommend products or information, often based on extensive personalization. Recommender systems are</span><span id=""_COMPSCI40752"">&nbsp;widely used by many users on a day-to-day basis: </span><span id=""_COMPSCI40753"">while </span><span id=""_COMPSCI40754"">recommender systems </span><span id=""_COMPSCI40755"">have been pioneered by </span><span id=""_COMPSCI40756"">e-commerce sites such</span><span id=""_COMPSCI40757"">&nbsp;as</span><span id=""_COMPSCI40758"">&nbsp;Amazon</span><span id=""_COMPSCI40759"">&nbsp;and Netflix, they are widely used ranging in areas from marketing (e.g. personalized product recommendations </span><span id=""_COMPSCI407510"">with</span><span id=""_COMPSCI407511"">&nbsp;your </span><span id=""_COMPSCI407512"">supermarket loyalty card</span><span id=""_COMPSCI407513"">), education, social media, and financial services. This course discusses various techniques for making recommendations, including non-personalized, content-based, and collaborative recommendation techniques, </span><span id=""_COMPSCI407514"">and their evaluation.</span></p><h2>content</h2><p id=""_COMPSCI407534""><span id=""_COMPSCI407535"">Recommender systems are widely deployed stochastic retrieval systems - a search system that learns what to suggest to a user based upon no explicit user input (i.e. zero query), but make suggestions using what is known about the user or the demogr</span><span id=""_COMPSCI407536"">aphics that the user belongs to</span><span id=""_COMPSCI407537"">.</span><span id=""_COMPSCI407538"">&nbsp;With the prevalence of recommender systems, from e-commerce sites to supermarket loyalty cards, it can be seen </span><span id=""_COMPSCI407539"">recommendation technologies have the potential to be more ubiquitous than search technologies.</span><span id=""_COMPSCI407540"">&nbsp;</span><span id=""_COMPSCI407541"">This course introduces the concepts, applications, algorithms, programming, and design of recommender systems -- software systems that recommend products or information, often based on extensive personalization. This course discusses various techniques for making recommendations that are widely used in industry, including non-personalized, content-based, and collaborative recommendation techniques, and their evaluation.</span></p><h2>ilo</h2><p id=""_COMPSCI407543""><span id=""_COMPSCI407544"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407545""><span id=""_COMPSCI407546"">1. </span><span id=""_COMPSCI407547"">Describe the techniques in making automatic recommendations and </span><span id=""_COMPSCI407548"">personalising</span><span id=""_COMPSCI407549"">&nbsp;them for individual users.</span></p><p id=""_COMPSCI407550""><span id=""_COMPSCI407551"">2. </span><span id=""_COMPSCI407552"">Describe different recommendation system </span><span id=""_COMPSCI407553"">scenarios,</span><span id=""_COMPSCI407554"">&nbsp;and models suitable for deployment therein</span><span id=""_COMPSCI407555"">.</span></p><p id=""_COMPSCI407556""><span id=""_COMPSCI407557"">3. </span><span id=""_COMPSCI407558"">Discuss how a recommender system should be evaluated in terms of the system's performance and the user's satisfaction with the system</span><span id=""_COMPSCI407559"">.</span></p><p id=""_COMPSCI407560""><span id=""_COMPSCI407561"">4. </span><span id=""_COMPSCI407562"">Describe the practical engineering issues raised by the implementation of a recommender system in a real deployment</span><span id=""_COMPSCI407563"">.</span></p><p id=""_COMPSCI407564""><span id=""_COMPSCI407565"">5. </span><span id=""_COMPSCI407566"">Implement </span><span id=""_COMPSCI407567"">and evaluate </span><span id=""_COMPSCI407568"">a standard recommender system.</span></p> ",COMPSCI4075,Glasgow_Scotland,Recommender Systems (H) COMPSCI4075,AI,,SPD; AI,AI; 10; 15,SE; HCI,AI,AI,
Startup Growth Engineering (H) COMPSCI4087,"<h2>title</h2>Startup Growth Engineering (H) COMPSCI4087<h2>summary</h2><p id=""_COMPSCI40870""><span id=""_COMPSCI40871"">Start-up Growth Engineering comprises the techniques and best practices applied by the world's most successful tech companies to exponentially grow from the start-up phase into large-scale organisations, with millions of users.  These techniques have been distilled from best practices employed across start-ups in the Silicon Valley and elsewhere.   Start-up Growth Engineering moves beyond traditional product development and marketing activities into an integrated, scientific approach to introducing a new product idea into a market and driving viral user growth.    </span></p><p id=""_COMPSCI40872"">&nbsp;</p><p id=""_COMPSCI40873""><span id=""_COMPSCI40874"">The Start-up Growth Engineering course combines theory with a large number of practical examples taken from well-known organisations.  It equips students with the skills to employ their software engineering and product development skills more effectively, in a real-world environment.</span></p><h2>content</h2><p id=""_COMPSCI408740""><span id=""_COMPSCI408741"">To familiarise students with the fundamental techniques used by tech companies to drive exponential user growth, including user retention techniques, the different types of compounding growth mechanisms, and optimization techniques.</span></p><p id=""_COMPSCI408742"">&nbsp;</p><p id=""_COMPSCI408743""><span id=""_COMPSCI408744"">To equip students with the analytical and strategy skills necessary to analyse real-world start-up growth trajectories and construct predictive and optimisation models to drive user growth.    </span></p><p id=""_COMPSCI408745"">&nbsp;</p><p id=""_COMPSCI408746""><span id=""_COMPSCI408747"">To enable students to apply these techniques in team situations and to gain an understanding of the typical Growth Engineering team structures and processes employed in Silicon Valley and other leading start-up incubation areas</span><span id=""_COMPSCI408748"">.</span></p><h2>ilo</h2><p id=""_COMPSCI408750""><span id=""_COMPSCI408751"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI408752""><span id=""_COMPSCI408753"">1. </span><span id=""_COMPSCI408754"">explain and apply the techniques used to create viral user growth in tech companies;</span></p><p id=""_COMPSCI408755""><span id=""_COMPSCI408756"">2. </span><span id=""_COMPSCI408757"">create a growth strategy for a start-up, designed to drive exponential growth.</span></p><p id=""_COMPSCI408758""><span id=""_COMPSCI408759"">3. </span><span id=""_COMPSCI408760"">explain the key metrics involved in driving start-up exponential growth, and how to optimise those metrics;</span></p><p id=""_COMPSCI408761""><span id=""_COMPSCI408762"">4. </span><span id=""_COMPSCI408763"">qualitatively and quantitatively predict the growth performance of a product or start-up based on current growth metrics</span></p><p id=""_COMPSCI408764""><span id=""_COMPSCI408765"">5. </span><span id=""_COMPSCI408766"">analyse and explain why some start-ups grow into very large-scale organisations, while others with similar products fail;</span></p><p id=""_COMPSCI408767""><span id=""_COMPSCI408768"">6. </span><span id=""_COMPSCI408769"">explain how growth teams are configured inside leading start-ups and the development models used by them.</span></p> ",COMPSCI4087,Glasgow_Scotland,Startup Growth Engineering (H) COMPSCI4087,SEP; 17,,17,SEP; 17,17,17,17; DM,
Web Science (H) COMPSCI4077,"<h2>title</h2>Web Science (H) COMPSCI4077<h2>summary</h2><p id=""_COMPSCI40770""><span id=""_COMPSCI40771"">Web Science is the study of the World Wide Web (WWW), its components, facets and characteristics and the impact it has on both society and technology. The World Wide Web changed the way in which we create information, communicate and interact. New models of social networks (LinkedIn, Facebook, etc.) create opportunities, which were not </span><span id=""_COMPSCI40772"">available</span><span id=""_COMPSCI40773"">&nbsp;before. Exploiting such data and networks for the benefit of individuals and organizations has become a key in our knowledge society.</span></p><h2>content</h2><p id=""_COMPSCI407717""><span id=""_COMPSCI407718"">The objective of </span><span id=""_COMPSCI407719"">this course</span><span id=""_COMPSCI407720"">&nbsp;is to </span><span id=""_COMPSCI407721"">introduce students to the field of web science and critically examine methodologies and techniques used in the field.</span></p><h2>ilo</h2><p id=""_COMPSCI407727""><span id=""_COMPSCI407728"">By the end of this course students will be able to:</span></p><p id=""_COMPSCI407729""><span id=""_COMPSCI407730"">1. </span><span id=""_COMPSCI407731"">Skills to analyse and implement technical solutions on social web applications</span></p><p id=""_COMPSCI407732""><span id=""_COMPSCI407733"">2. </span><span id=""_COMPSCI407734"">Describe the techniques employed in developing advertising models on the web</span></p><p id=""_COMPSCI407735""><span id=""_COMPSCI407736"">3. </span><span id=""_COMPSCI407737"">Describe the techniques needed to analyse social networks</span></p><p id=""_COMPSCI407738""><span id=""_COMPSCI407739"">4. </span><span id=""_COMPSCI407740"">Ability to understand and rationalise privacy threats and mitigation strategies in online communities</span></p><p id=""_COMPSCI407741""><span id=""_COMPSCI407742"">5. </span><span id=""_COMPSCI407743"">Describe</span><span id=""_COMPSCI407744"">&nbsp;methodologies to conduct large scale data analysis</span><span id=""_COMPSCI407745"">&nbsp;to analyse user behaviour on the web,</span><span id=""_COMPSCI407746"">&nbsp;to predict user demographics and purchase behaviours</span></p><p id=""_COMPSCI407747""><span id=""_COMPSCI407748"">6. </span><span id=""_COMPSCI407749"">Describe</span><span id=""_COMPSCI407750"">&nbsp;sentiment and emotion extraction techniques</span><span id=""_COMPSCI407751"">&nbsp;and employ them.</span></p> ",COMPSCI4077,Glasgow_Scotland,Web Science (H) COMPSCI4077,SPD; 15; AI,,SDF,NC; 15,SE,SEP,NC; DM,
Numerical Programming,"<h2>title</h2>Numerical Programming<h2>summary</h2>Using simple examples of algorithms, the essential problems, basic knowledge, concepts and techniques of numerical programming are taught and practiced in programming tasks.<h2>content</h2>Examples of simple numerical simulationsFloating point arithmetic and numeric calculationsAlgorithm stabilityCondition of numerical problemsPerformance and optimization (e.g. cache, pipelining, latency, throughput)Object Orientation and Numerical AlgorithmsInteractive visualizationTypical algorithms of numerical problemsBasic principles of iterative numerical algorithmsBasic principles of programming efficient and parallelizable algorithms<h2>ilo</h2>Skills in the implementation of simple numerical algorithms (especially with regard to efficiency), skills in the visualization of numerical results, knowledge of the special requirements of numerical programming and the related application of computer science methods. ",Inf-NumProg,CAU_Germany,Numerical Programming,FPL,,AL; MSF,AL; MSF; 09,MSF,MSF,MSF; AL,
Methods for Efficient Similarity Search in Large Data Sets,"<h2>title</h2>Methods for Efficient Similarity Search in Large Data Sets<h2>summary</h2>The lecture presents new techniques for similarity search, especially feature-based similarity search in databases with complexly structured objects. The treated substance is used in many (non-computer science) sciences in which data-driven exploration is becoming an increasingly important topic, such as archaeology, medicine, and other natural sciences and humanities. This data includes, in particular, multimedia objects and general Multi-attribute objects objects with spatial expansion (e.g. CAD data, geo-objects, bio-molecules, etc.) Time series and sequence data (e.g. audio sequences, video sequences, etc.)<h2>content</h2>Introduction to feature-based similarity searchFeature rooms and distance measurementsAlgorithmic paradigms for request processingIndex structures for feature rooms and metric spacesArea inquiriesNext-neighbours inquiriesReverse Next Neighbors RequestSkyline requests and Pareto optimalityEvaluation of methods for finding similarityFeature extraction of spatially extended objectsFeature extraction of time seriesNeighborhood search in network graphs<h2>ilo</h2>The students know algorithmic techniques for the efficiency and effectiveness of the presented techniques for neighborhood search and neighborhood inquiry in non-standard databases (data sets) and can apply them practically. In addition, they have understood index-based search and multi-stage request processing as well as feature extraction methods for spatial and temporal data. ",inf-EAeS,CAU_Germany,Methods for Efficient Similarity Search in Large Data Sets,AL; AI,,AL; DM,DM; AL; 09,AL; DM,AL; AI,DM,Annotation: Really don't know... AI? AL?; User: Lecia Barker; Timestamp: 6/25/2023 7:18:52 PM; Code(s): ; Trigger: Methods for Efficient Similarity Search in Large Data Sets
Automatic Graph Drawing,"<h2>title</h2>Automatic Graph Drawing<h2>summary</h2>Graphs are found in numerous areas of computer science and beyond. For example, software engineers make regular use of class diagrams, automata or flow charts. Hardware design makes use of net lists and circuit diagrams. The drawing of a graph is its visual representation. The manual creation of a well-readable drawing, such as the design of a UML diagram with a software engineering tool, can be a very time consuming activity.This class covers approaches for the efficient, automatic creation of well-readable diagrams. This is an application-driven form of algorithm engineering, where cognitive psychology plays an important role. Graph drawing methods are used increasingly for example in ""auto-layout"" features of development tools.The tool stretches from theoretical foundations to practical implementations. We here make use of the Eclipse-based open source tool KIELER (Kiel Integrated Environment for Layout) and the Eclipse Layout Kernel (ELK). Both of these projects are developed at the RTSYS research group, ELK is now an official Eclipse project.<h2>content</h2>Foundations of graph theoryAesthetics criteriaTooling, usage of ELK and KIELERDrawing treesForce-based drawingHierarchical graph drawingPlanarization-based graph drawingLabeling approaches<h2>ilo</h2>Properly classify different types of graphs and use correct terminology for graph aspects and propertiesExplain basic graph analyses and their computational complexitySelect and apply suitably algorithmic approaches for the automatic drawing of different types of diagramsExtend existing approaches for specific types of diagramsEvaluate graphs concerning common aesthetics criteriaAfter successful completion of this module students will be able to judge for a given type of graph whether it can be drawn automatically and which algorithmic approaches are suitable. They will also be able to adapt existing drawing algorithms or to develop new approaches. Finally, students should also be able to perform a thesis project (Bachelor or Master) on the subject of graph drawing and to contribute to ELK and KIELER. ",Inf-GraphDraw,CAU_Germany,Automatic Graph Drawing,GIT,,GIT,GIT; 09,GIT,AL,AL,
Text Mining,"<h2>title</h2>Text Mining<h2>summary</h2>The digital age and the success of the Internet in particular has led to a huge amount of publicly available documents and textual information. The task of text mining is to process this unstructured information and extract knowledge. To this end, we will present methods, algorithms, and models that support a diverse set of text mining applications, ranging from regular expressions and lexicon-based sentiment analysis, to more complex methods using machine learning, such as probabilistic topic models.<h2>content</h2>Foundation of linguistics Information extraction Named entities Opinion mining & sentiment analysis Preprocessing of textual data Representation of documents Word associations Topic Modeling Foundations of machine learning Document classification Clustering Sequence labeling Visualizing textual data Ethics & bias<h2>ilo</h2>Students are able to...understand basic concepts of text mining and their commercial applicationexplain, apply, and evaluate text mining methodsimplement text mining applications in Python ",inf-TM,CAU_Germany,Text Mining,AI,,AI; AL,AI; AL; 19; 14,DM; AI,AI,DM; 19,
Computational Intelligence,"<h2>title</h2>Computational Intelligence<h2>summary</h2>The term ""Computational Intelligence"" (CI) describes a branch of artificial intelligence. Essentially, it summarizes three biologically motivated areas of information processing: Based on algorithms of fuzzy logic and artificial neural networks as well as on the evolutionary algorithms, the mastery of complex systems is sought and combined with other, typically biologically-inspired, processes. Originally coined in the 1990s by the Institute of Electrical and Electronics Engineers (IEEE), the term is often used synonymously with soft computing nowadays. All included sub-areas have in common that they make mechanisms of natural (i.e. in particular biological, physical or social) problem-solving strategies usable for mathematical or engineering-technical issues. This is not aimed at a direct transfer or ""technical copy"", but at an understanding and imitation of the basic mechanisms. The procedures developed in this way are in contrast to exact mathematical procedures - one rather freely follows the motto: ""Permitted is what works"".<h2>content</h2>Introduction and organizationComplex systems: definition, environment and mastery of complexityEmergence and self-organizationFractalCellular AutomataEvolutionary algorithmsParticle swarm optimizationAnt algorithmsbee algorithmsNeural networksSummary<h2>ilo</h2>The aim of the event is to provide a first overview of the field of computational intelligence in theory and practice. Based on this, students should be taught a basic understanding and appropriate approaches, so that the following goals in particular are achieved:Students have a basic understanding of the complexity of technical systems and know how to master them.You know how seemingly complex relationships with mechanisms of computational intelligence can be easily described.Techniques from the field of Computational Intelligence / Soft Computing as well as their advantages and disadvantages in comparison are known. ",inf-CI,CAU_Germany,Computational Intelligence,AI,,AL; AI; 03,AL; AI,AI; AL,AI,AI; AL,
Internet of Things and Wireless Networks,"<h2>title</h2>Internet of Things and Wireless Networks <h2>summary</h2>This course will introduce and discuss the underlying concepts and mechanisms that drive wireless networks and the Internet of Things (IoT). The lectures provide you with the required knowledge, and the labs give you a hands-on experience in developing networking and applications in the Internet of Things and exploring their real-world challenges.<h2>content</h2>We begin the course with an introduction to basic concepts of IoT Systems and Applications and the challenges they pose. We continue with the main course content and focus on:Wireless networkinglow-power wireless communication (NFC, BLE and 802.15.4)IoT networking (RPL, TSCH, and Thread)web-technologies for IoT such as COAPOperating Systems for IoTSecurity in IoTSelected IoT ApplicationsOur lectures provide students with the required fundamentals, and exercise and projects give students a hands-on experience in developing IoT systems & applications and exploring their real-world challenges. This course offers learning experiences that involve hands-on experimentation and analysis as they reinforce student understanding of concepts and their application to real-world problems. Overall, this course provides the students the ability to understand fundamental issues in the design of methods for IoT systems and applications.<h2>ilo</h2>Knowledge and understanding: Show knowledge of basic concepts and challenges of wireless networking and the Internet of Things, low-power wireless communication, NFC, BLE and 802.15.4), IoT networking (RPL, TSCH, and Thread), Operating Systems for IoT, Security in IoT, and IoT Applications. Describe applications of the Internet of Things and the mechanisms these use to provide their services. Discuss and analyze the challenges and requirements that the different approaches have. Compare and summarize the strength and weaknesses associated with the individual mechanisms.Skills and abilities: Develop and evaluate small-scale wireless networks and IoT systems & applications using fundamental mechanisms introduced in the lectures. Demonstration of these software developments in advanced settings including unreliable wireless links and resource constraints (e.g., battery driven).Judgment and approach: Describe and analyze existing and new methods for IoT systems and application design. In particular, the system's ability for low-power wireless networking and operation under strong resource constraints.Lehrinhalte:Aim: What is the Internet of Things and its applications? How can we build reliable and resource efficient IoT systems and applications? How do its devices in the Internet of Things communicate? How do wireless networks work? These are a few questions that this course addresses. The goal of the courses is to understand the design of the Internet of Things and discuss the underlying principles and mechanisms. Our lectures provide you with the required fundamentals, and our labs give you a hands-on experience in developing IoT systems and applications and exploring their real-world challenges. ",inf-IoT,CAU_Germany,Internet of Things and Wireless Networks,SPD,,NC; SF,NC; 10,NC; SPD,NC; SPD,NC; SEC,
Combinatorics on Words,"<h2>title</h2>Combinatorics on Words<h2>summary</h2>This course is an extended introduction into the theory of combinatorics on words (aka strings or sequences). Connections to applications of string algorithms will be drawn in providing the combinatorial background to the course Algorithms on Sequences.<h2>content</h2>We consider advanced properties of periods in finite and infinite words, word equations, circular words, subword complexity, fixed point words and avoidability questions.<h2>ilo</h2>A successful student of this course will have an in-depth knowledge combinatorial properties of sequential structures. ",Inf-CombWords,CAU_Germany,Combinatorics on Words,AI,,AL; MSF,AL,AL,AL,AL,
Implementation of ERP systems,"<h2>title</h2>Implementation of ERP systems<h2>summary</h2>The core task of ERP systems is the volume and value-related planning, recording and settlement of all essential business transactions of a company. ERP systems are therefore one of the central components of the IT landscape of larger companies today. Accordingly, new introductions or changes of these systems in larger companies are often highly complex and thus complex and expensive large-scale IT projects.The high value of such software for companies can also be seen from the fact that the group with the currently largest market capitalization within the German stock index DAX® is neither a car manufacturer nor a classic industrial group, but a provider of corresponding business software. In this module, using the example of its ERP system (a) the knowledge about the support of operational processes by standard software is further deepened, (b) shows with which project management procedures and methods corresponding large-scale IT projects are carried out in practice, and (c) shows how an entire ecosystem can be formed around such a software product.<h2>content</h2>Overview of standard operational software using the example of the product portfolio of SAP SE from a business point of view (ERP, analytics, business networks) and from a technical point of view (database, application, user interface, data integration, artificial intelligence)Mapping of common, operational processes in ERP standard software (stainable data, quantity and value flows)Procedures for the introduction and conversion of standard operational software using the example of large introductions of SAP® ERP software (classic, SAP® Activate/Focus Build, global rollout strategies) and organization of corresponding projects (ecosystem, project management processes)Strategies for the further development of standard operational software in the company (governance structures and processes)Trends (current situation in companies, technological innovations)<h2>ilo</h2>The students;have an in-depth understanding of the range of applications of standard operational softwarehave an idea of the objectives, tasks and challenges of the introduction or Conversion of standard operational softwareknow the usual procedures for large-scale IT projects ",inf-EERP,CAU_Germany,Implementation of ERP systems,SDF; 17; OS,,,17; SEP,SE; 17,,SE; 17,Annotation: I don't know what an ERP system is and am struggling to infer a definition from the context; User: Jack Parkinson; Timestamp: 7/2/2023 11:48:18 PM; Code(s): ; Trigger: ERP systems; Annotation: ERP systems; User: Sara Hooshangi; Timestamp: 7/2/2023 9:04:21 PM; Code(s): ; Trigger: ERP systems ; Annotation: low confidence; User: Lecia Barker; Timestamp: 6/25/2023 7:21:23 PM; Code(s): ; Trigger: ERP systems
Fundamentals of Game Design Lab,<h2>title</h2>Fundamentals of Game Design Lab<h2>summary</h2>This course is the lab component of CGDD-2012. Students will learn to develop computer based video games using a modern game engine and a programming language. Students are required to develop a computer based prototype of an original game.<h2>ilo</h2>1. Develop a basic prototype of video games2. Demonstrate advanced skills in programming utilizing a high level game engine ,CGDD2012L,Kennesaw_USA,Fundamentals of Game Design Lab,GIT; SPD; 21,,GIT; HCI; 21,GIT; SPD; 21,21,GIT; SPD; 21,GIT; SPD; 21,"Annotation: this should probably be removed, unless it is optional to take the lab with the class; User: Lecia Barker; Timestamp: 6/25/2023 7:22:31 PM; Code(s): ; Trigger: lab"
Electronic Commerce,"<h2>title</h2>Electronic Commerce<h2>summary</h2>This course will examine the aspects of electronic commerce. Topics include internet development, EDS, security, network connectivity and privacy. Basic business practices using electronic commerce will also be covered.<h2>ilo</h2>1. Analyze the needs of a business in relation to what requirements are needed to support the functions of the company for an e-commerce business plan.2. Describe the business models of e-commerce, including the process of e-commerce payment systems, e-commerce marketing concepts and e-commerce site preparation.3. Design and build a working e-commerce web-site prototype.4. Describe the basic parts of security for an e-commerce site, including how encryption works.5. Discuss and debate the pros and cons of the supply chain management model, and how new digital media support e-commerce.6. Understand the e-commerce concepts of auctions, portals and on-line communities, and describe the ethical, social and political issues of e-commerce. ",IT4123,Kennesaw_USA,Electronic Commerce,17; SPD; SEP,,17,SDF; SPD; 17,SE,17,SPD; 17,"Annotation: not sure if SPD is right, but the web is a specialized platform. ?; User: Lecia Barker; Timestamp: 6/25/2023 7:23:51 PM; Code(s): ; Trigger: e-commerce"
Advanced Web Development,"<h2>title</h2>Advanced Web Development<h2>summary</h2>This course covers more advanced topics on web site design and development including server pages, programming, database integration, and web server systems and security administration.<h2>ilo</h2>1. Demonstrate use of advanced JavaScript features, including anonymous functions and closures2. Demonstrate use of advanced CSS features, including CSS 3 and responsive web pages3. Use Ajax to update pages with server data without reloading4. Use the features of HTML 55. Demonstrate effective use of the jQuery framework. ",IT4203,Kennesaw_USA,Advanced Web Development,SPD,,SDF,SDF; 10; SPD,SE,SDF,SPD,Annotation: Not sure if the web is a specialized platform.; User: Lecia Barker; Timestamp: 6/25/2023 7:24:32 PM; Code(s): ; Trigger: web development
Cryptography,"<h2>title</h2>Cryptography<h2>summary</h2>The course covers both mathematical and practical foundations of cryptography. Topics include basic number theory for cryptography, conversion of text, and implementation using a programming language. The course includes historical cryptography, symmetric cryptography, asymmetric cryptography, hash functions, and well-known attack strategies with countermeasures. Exercises cover programming of simple cryptography in a programming language. <h2>ilo</h2>1. Explain the concepts, components, methodology, and architecture of cryptography;2. Discuss different foundations of cryptosystems;3. Compare and contrast symmetric, asymmetric cryptographies and their pros/cons;4. Explain vulnerability analysis and different layers of attacks;5. Implement text conversion for a cryptographic foundation;6. Implement a basic cryptography ",CS3626,Kennesaw_USA,Cryptography,SEC,,SEC; MSF,SEC; 10,SEC; MSF,AL; SEC,AL; SEC,
Artificial Intelligence,"<h2>title</h2>Artificial Intelligence<h2>summary</h2>The primary objective of this course is to provide a introduction to the basic principles and applications of Artificial Intelligence. It covers the basic areas of artificial intelligence including problem solving, knowledge representation, reasoning, decision making, planning, perception and action, and learning -- and their applications. Students will design and implement key components of intelligent agents of modern complexity and evaluate their performance. Students are expected to develop familiarity with current research problems, research methods, and the research literature in AI. <h2>ilo</h2>1. Demonstrate understanding knowledge of AI knowledge representation2. Demonstrate understanding of advanced search and reasoning algorithms3. Design an AI system with Lisp or Prolog for problem solving ",CS3642,Kennesaw_USA,Artificial Intelligence,AI,,AI,AI; 10,AI,AI,AI,
Big Data Analytics,"<h2>title</h2>Big Data Analytics<h2>summary</h2>This course covers algorithms and tools that are needed to build MapReduce applications with Hadoop or Spark for processing gigabyte, terabyte, or petabyte-sized datasets on clusters of commodity hardware. A wide range of data algorithms will be discussed in this course. <h2>ilo</h2>1. Explain MapReduce framework for big data analytics2. Use Hadoop and Spark for big data analytics3. Design and implement a wide range of data algorithms ",CS4265,Kennesaw_USA,Big Data Analytics,AL,,AI,AL; MSF; 09,DM; AI,DM,DM,
Machine Learning,"<h2>title</h2>Machine Learning<h2>summary</h2>This course provides a broad introduction to machine learning and statistical pattern recognition including supervised, unsupervised, and ensemble learning. Topics include K-NN, Naïve Bayes Classifier, parametric and non-parametric methods, support vector machines, kernel machines, neural networks, clustering, dimensionality reduction, and model evaluation. The learning theory including bias/variance tradeoffs and large margins will be introduced. This course will also discuss recent applications of machine learning such as data mining, autonomous navigation, speech recognition, and text and web data processing. <h2>ilo</h2>1. Explain how supervised learning methods work2. Explain how unsupervised learning methods work3. Explain how ensemble methods work4. Apply proper machine learning techniques to solve challenging problems ",CS4267,Kennesaw_USA,Machine Learning,AI,,AI,AI; 09,AI,AI,AI,
Data Mining,"<h2>title</h2>Data Mining<h2>summary</h2>This course covers fundamental data mining concepts and techniques for discovering interesting patterns from data in various applications. Topics include data preprocessing, data warehousing and OLAP, mining frequent patterns, classification, clustering, and tend analysis. <h2>ilo</h2>1. Explain fundamental data mining concepts and techniques2. Implement typical data mining algorithms3. Apply data mining techniques to solve real life problem4. Design and construct data warehouse ",CS4412,Kennesaw_USA,Data Mining,AI,,AI; AL,DM; AI; 09; 19,AI,AI; DM,DM,
Computer Networks,"<h2>title</h2>Computer Networks<h2>summary</h2>This course covers computer networking and includes software application-related, protocol-related and security-related issues involved in the Internet. Topics include basic network structures, mechanisms for application-to-application communications, protocol layering, Internet addressing, unicast and multicast routing, connection establishment and termination, data flow and congestion control, and error handling. A specific protocol suite will be examined in detail. More advanced topics that build on the student's understanding of network protocols are also introduced, such as network security, mobile networks and the future Internet. <h2>ilo</h2>1. Demonstrate an understanding of a protocol suite and the core functionality defined in the application, transport, network, and link layers,2. Demonstrate an understanding of how network-based software applications interface with  and across  the network.3. Demonstrate an understanding of network addressing and related protocols and issues4. Demonstrate an understanding of network routing and theory, and related protocols5. Demonstrate an understanding of network security and related protocols and mechanism, focusing at the application, transport and network layers6. Acquire knowledge and expertise when introduced to emerging technologies relating to the mobile and wireless networks, and the Internet. ",CS4622,Kennesaw_USA,Computer Networks,NC,,NC,NC; 10,NC,NC; SF,NC,
User Interface Engineering,"<h2>title</h2>User Interface Engineering<h2>summary</h2>A comprehensive study of techniques in design and implementation of user interfaces engineering. Topics include the foundation of human-computer interaction and interface related to software lifecycle, building a graphic user interface engineering, interaction devices and technologies, human-computer dialogue, cognitive models, usability, the design and development process, user interface management systems (UIMS), interface style and techniques, user learning, and diversity in interaction styles. Major research and the building of a working graphic user interface are included. <h2>ilo</h2>1. Describe basic user interface engineering definitions, concepts, and principles.2. Apply user interface concepts and principles to analyze and evaluate a variety of approaches to user interface design.3. Acquire an understanding of needs analysis of user interactions/interfaces, legal, ethical, and social issues.4. Design, develop, implement, and present a new user interface for an application applying concepts and principles of user interface. ",CS4712,Kennesaw_USA,User Interface Engineering,HCI; SE,,SDF; HCI,HCI; GIT; 15,HCI,HCI,HCI,
Machine Vision,"<h2>title</h2>Machine Vision<h2>summary</h2>This course introduces concepts and techniques in machine vision. Students successfully completing this course will be able to apply a variety of image processing techniques for the design and analysis of efficient algorithms for real-world applications, such as optical character recognition, face detection and recognition, motion estimation, human tracking, and gesture recognition. Topics include basic image enhancement, corner and edge detection, image morphology, linear and non-linear filters, image transformations, camera models, two-dimensional and three-dimensional image geometry, clustering and segmentation (and classification), object recognition and Bag-of-Words models, image texture, shape analysis, and tracking. <h2>ilo</h2>1. Demonstrate a basic understanding of the design concepts in machine vision and image processing,2. Demonstrate understanding of a variety of efficient algorithms for machine vision such as basic image processing, face detection and recognition, motion estimation, human tracking, and gesture recognition,3. Be able to apply machine vision techniques to solve real-world problems using OpenCV or Matlab or other languages,4. Be able to utilize a state-of-the-art commercial machine vision package, and compare the computational complexity of different algorithms and analyze the time and space efficiency of the algorithms ",CS4732,Kennesaw_USA,Machine Vision,GIT,,AI,AI; GIT; 10,GIT,GIT,AI; GIT,
Introduction to Computing Principles,"<h2>title</h2>Introduction to Computing Principles<h2>summary</h2>This course is an introductory computing principles course. Instruction centers on an overview of the history, scope, and impact of computing as well as critical, algorithmic and computational thinking on problem decomposition and fundamental programming concepts. <h2>ilo</h2>1. Synthesize how software has influenced innovations in other fields and helped people organizations and society to solve problems2. Use computational thinking to ask questions and find different ways to solve problems3. Design a solution to a program as an algorithm and convert the algorithm into a procedural program4. Objective 4 -Describe the differences between computing disciplines and identify possible job opportunities in the computing field ",CSE1300,Kennesaw_USA,Introduction to Computing Principles,SEP; SDF,,SEP,SEP,SDF,FPL; SDF,SEP,
Overview of Mobile Systems,"<h2>title</h2>Overview of Mobile Systems<h2>summary</h2>This course explores the use and issues of mobile applications in business including information security issues, connecting to cloud computing services, and mobile interface and programming. A significant design or development project will be created in the course. <h2>ilo</h2>1. Review basic elements of a mobile ecosystem2. Explain major technical features of mobile systems including connectivity hardware and software3. Compare major mobile app development approaches platforms and tools4. Discuss relevant mobile app development issues including user experience and security5. Develop native mobile apps ",CSE3203,Kennesaw_USA,Overview of Mobile Systems,SPD,,SDF,SPD; NC; 10,NC,SPD,OS; SPD,
CSE Computing Internship,"<h2>title</h2>CSE Computing Internship<h2>summary</h2>This course helps students gain practical experience through real-world projects and professional work. Students will demonstrate an ability to apply computing principles and technologies relevant to their major in a specific real-world project jointly supervised by an industry mentor and a faculty advisor. Students will work in a project team in an enterprise environment demonstrating ethical behavior as a computing professional, an understanding of social, professional and ethical issues related to computing, and an ability to integrate the knowledge acquired in preceding courses. Communication skills and leadership are also evaluated as well as professional computing skills and knowledge. 150+ hours per semester required at an internship site. The course can not be repeated for credit. <h2>ilo</h2>1. Demonstrate an ability to apply computing principles and technologies relevant to their major in a specific real-world project.2. Demonstrate an ability to work effectively in teams in a working environment.3. Demonstrate ethical behavior as a computing professional and an understanding of social, professional and ethical issues related to computing.4. Demonstrate both written and oral communication skills appropriate to the major to convey the tasks and accomplishments related to the internship assignment.5. Display the skills and knowledge to be employable in positions that utilize computing principles and technologies.6. Evaluate the skills and knowledge learned in the classroom in relation to the skills and knowledge required to complete the internship. ",CSE4983,Kennesaw_USA,CSE Computing Internship,SEP,,,SEP,SDF; SEP,SE; SDF,SEP,Annotation: Internship; User: Sara Hooshangi; Timestamp: 7/2/2023 9:08:38 PM; Code(s): ; Trigger: Internship
Database Systems,"<h2>title</h2>Database Systems<h2>summary</h2>The topics in this course span from a review of the traditional file processing systems to database management systems. Topics include files systems and file processing logic, planning, and major phases of database development: analysis, design and implementation. Labs use an SQL based database product such as Oracle. <h2>ilo</h2>1. Describe basic database terminology2. Analyze an Enterprise using E R diagrams and develop the conceptual model through normalization3. Describe basic parts of the relational database model the object-oriented model and file organizations4. Create modify and query databases using the SQL language5. Describe the client-server model for databases and how relational databases can be used on the internet6. Create an application using a database ",CYBR3153,Kennesaw_USA,Database Systems,DM,,DM,DM; 10,DM,DM,DM,
Software Acquisition and Project Management,"<h2>title</h2>Software Acquisition and Project Management<h2>summary</h2>The course provides a high level introduction to two areas that are crucial to the IT profession, namely project management and software acquisition. It introduces students to the phases both in the project management and software acquisition and implementation process. Since requirements are crucial to both activities, the course will provide students with an in-depth introduction to requirements engineering. The course will also introduce students to a widely used project management information system. <h2>ilo</h2>1. Discuss the elements of the basic Software Development Life Cycle and implement an analysis and design of a project using current project management tools2. Compare and contrast the advantages and disadvantages of building vs buying a software system3. Identify the elements and challenges of requirements engineering and project management4. Identify the project phases and challenges of acquiring, integrating and implementing a software package5. Evaluate a Request for Proposal for a software package ",CYBR3223,Kennesaw_USA,Software Acquisition and Project Management,SEP,,SE; SDF; 17,SPD; 17,SE; 17,SE,SE; 17,
Technology and Criminal Justice,"<h2>title</h2>Technology and Criminal Justice<h2>summary</h2>This course involves an in-depth study of technology as it relates to crime and the criminal justice system. Topics discussed include technology associated with criminal investigations, law enforcement practices, offender monitoring and supervision, and homeland security. Legal issues and laws pertaining to the use of technology for investigative purposes, privacy issues, and fourth amendment issues are examined. Various technologies used by police, courts, and corrections are also addressed. <h2>ilo</h2>1. Identify specific technologies used by police, courts, corrections, and the privatecriminal justice sector in their daily operations.2. Describe how technology is used in the criminal justice system to prevent andcontrol crime.3. Examine empirical research which examines the effectiveness of technology inpreventing and controlling crime.4. Appraise the value of technologies used to prevent and control crime.5. Restate the effectiveness of technology in preventing and controlling crime. ",CYBR3305,Kennesaw_USA,Technology and Criminal Justice,SEP,,15; 16,SEP; 16,16,SEP,15; SEP,
Network Configuration & Administration,"<h2>title</h2>Network Configuration & Administration<h2>summary</h2>This course continues the study of networks. Topics include design and implementation of networks including synchronization, scheduling, exception and deadlock resolution, client server and web based collaborative systems. Network security will also be covered. Cost estimates and speed are examined from a management perspective. <h2>ilo</h2>1. Demonstrate how to manage network systems2. Apply the various management strategies to managing networks3. Describe concepts of network configuration management4. Demonstrate knowledge of SNMP, SMI, MIB, RMONI, RMON5. Demonstrate skills in configuring specialized network security software ",CYBR4333,Kennesaw_USA,Network Configuration & Administration,NC,,NC,NC; 10,NC,NC,NC; SEC,
Ethical Hacking for Effective Defense,"<h2>title</h2>Ethical Hacking for Effective Defense<h2>summary</h2>This course explores the identification and validation of network and system vulnerabilities by taking an adversarial approach to network, system, and data access. Topics include network attacks and defenses, Operating System and application vulnerabilities, social engineering attacks, and malware. Ethical, legal implications of network attacks are also discussed. <h2>ilo</h2>1. Explain what an ethical hacker can and cannot do legally2. Describe security threats and vulnerabilities3. Use hacking tools to locate and fix security leaks4. Identify operating systems vulnerabilities5. Explain cryptosystems and describe attacks on cryptosystems6. Analyze network security vulnerabilities and technical controls ",CYBR4843,Kennesaw_USA,Ethical Hacking for Effective Defense,SEC; SEP,,NC; SEC,SEC; 16,SEC; SEP,SEC; SEP,SEC,
Computer Forensics,"<h2>title</h2>Computer Forensics<h2>summary</h2>This course is an exploration of the tools and techniques used to conduct digital investigations. It will include digital evidence collection, recovery, and analysis. Topics are Legal issues relating to digital evidence, recovery of deleted files and discovery of hidden information, reconstruction of user activity from e-mail, temporary Internet files and cached data, assessment of the integrity of system memory and process architecture to reveal malicious code. <h2>ilo</h2>1. Define and explain the role of digital forensics in the incident response and investigatory process2. Identify the requirements for proper evidence collection, handling and storage3. Identify and explain basic techniques to properly collect and analyze evidentiary data using appropriate tools and techniques in common scenarios4. Organize and present evidentiary data and investigatory findings for use in corporate or legal proceedings ",CYBR4853,Kennesaw_USA,Computer Forensics,SEP,,SEC,SEC; 16,SEC; 16,SEC,15; SEP; AR,
Internet of Things: Applications and Security,"<h2>title</h2>Internet of Things: Applications and Security<h2>summary</h2>This course introduces core knowledge and skills required to develop, design and secure IoT solutions. Students will analyze requirements, develop human-device interaction and learn about broader trends and characteristics in IoT. In addition, students will evaluate the security design of IoT-connected products. <h2>ilo</h2>1. Define the meaning of internet of things in various IoT application domains  smart cities, smart environment, eHealth, etc.2. Illustrate the impact of IoT on existing business models and business use cases3. Explain the IoT in conjunction with big data, applications, and mobility4. Illustrate IoT security challenges and the impact of IoT on consumer privacy5. Define the components required for the internet of things6. Design and develop a smart device ",CYBR4893,Kennesaw_USA,Internet of Things: Applications and Security,SEC; SPD,,NC,NC; SPD; 10,SPD; SEC,SPD,SEC; NC,
Foundations of Health Information Technology,"<h2>title</h2>Foundations of Health Information Technology<h2>summary</h2>This course introduces students to the field of health information technology (HIT). Students will become familiar with the content, use, and structure of the health care data and medical records, health information management, the fundamentals of healthcare workflow and process analysis and redesign as a necessary component of complete practice automation, and health information systems. Students will also become familiar with the health care delivery systems in the U.S. and IT organizations and resources. <h2>ilo</h2>1. Describe the healthcare delivery systems and different healthcare settings in the U.S. and the reimbursement methodologies utilized in healthcare organizations2. Describe the factors that had led to a need for health information technology and Electronic Health Record systems3. Provide examples of different types of health information technology used in the healthcare organizations4. Explain the importance of health data management and performance improvement activities in the healthcare environment5. Identify the effect the ethical and legal issues on health information technology6. Explain HIPAA and HITECH regulations and analyze ways to maintain the privacy and security of protected health information7. Recognize the future of health information technology in order to be an organizational resource in this topic area ",IT3503,Kennesaw_USA,Foundations of Health Information Technology,SEP; 02,,01; SDF,HCI; 02,SDF; 02,01; 02,03; DM,
Advanced Database,"<h2>title</h2>Advanced Database<h2>summary</h2>This course will study how databases are used with programming applications. Topics include advanced PL/SQL (or similar database programming language), database transaction, database security, database maintenance, and distributed and web databases. <h2>ilo</h2>1. Understand and describe current and emerging database models and technologies2. Develop functions and procedures for data manipulation and database access auditing3. Describe database monitoring and performance tuning4. Describe database security and administration issues, including backup and recovery5. Explain the concepts of data warehousing and data mining ",IT4153,Kennesaw_USA,Advanced Database,DM,,DM,DM,DM,DM,DM,
Network Configuration & Administration,"<h2>title</h2>Network Configuration & Administration<h2>summary</h2>This course continues the study of networks. Topics include design and implementation of networks including synchronization, scheduling, exception and deadlock resolution, client server and web based collaborative systems. Network security will also be covered. Cost estimates and speed are examined from a management perspective. <h2>ilo</h2>1. Demonstrate how to manage network systems2. Apply the various management strategies to managing networks3. Describe concepts of network configuration management4. Demonstrate knowledge of SNMP, SMI, MIB, RMONI, RMON5. Demonstrate skills in configuring specialized network security software ",IT4333,Kennesaw_USA,Network Configuration & Administration,NC,,NC,NC,NC,NC,NC,
Linux/Unix Administration,"<h2>title</h2>Linux/Unix Administration<h2>summary</h2>This course introduces Linux/Unix operating systems. Topics include system administration, file systems and access permissions, regular expression, common tools and utilities, and network service configurations. Lessons will be enhanced using hands-on exercises. <h2>ilo</h2>1. Describe concepts and structure of the Linux/Unix operating system2. Use common commands and utilities for general file system operations3. Write shell scripts for common shell environment4. Perform system administration tasks to manage files, software, storage, users, processes and services5. Configure TCP/IP networking and common network/internet services and clients such as SSH, FTP, Web6. Install critical software on Linux, such as Apache, MySQL, and Python  LAMP ",IT4423,Kennesaw_USA,Linux/Unix Administration,SF,,OS,OS; SF,SE,SF; SDF,OS,
Electronic Health Record Systems & Applications,"<h2>title</h2>Electronic Health Record Systems & Applications<h2>summary</h2>This course provides an overview of the importance of key technical aspects of electronic health records, the overall architecture, features and functions of major EHR systems. Hands-on exercises with EHR systems allow students to learn by doing. <h2>ilo</h2>1. Explain the terminology, concept and functionality of EHR systems2. Identify a set of widely adopted standards for EHR systems3. Describe how EHRs change the healthcare delivery workflows and how to manage the change4. Demonstrate a working knowledge of principles and practices of EHR systems in different healthcare settings5. Analyze challenges and emerging trends of EHR systems6. Recognize the future of health information technology in order to be an organizational resource in this topic area ",IT4513,Kennesaw_USA,Electronic Health Record Systems & Applications,2,,1,HCI; SPD,2,01; 02,DM; 03,
Introduction to Blockchain Technologies,"<h2>title</h2>Introduction to Blockchain Technologies<h2>summary</h2>This course covers the foundation of IT application and innovation. Topics include but not limited to blockchain and cryptocurrencies, Bitcoin, Ethereum, smart contracts, decentralized applications, machine learning and its applications in the enterprise, security and privacy concerns, operational risks as part of the IT support transformation. <h2>ilo</h2>1. Describe the core and novel sources of blockchain technologies, how does it work. 2. Compare critical technology strategies and foundational technologies in blockchain 3. Identify the differences between the most prominent blockchain structure.4. Describe technologies underlying cryptocurrencies and blockchains.5. Implement a blockchain, and how to write a “smart contract” in Python/Ethereum. ",IT4603,Kennesaw_USA,Introduction to Blockchain Technologies,AL; PDC; 17,,SEC,NC; SEC,AI; AL,AL; SEC,AL; SEC,"Annotation: Blockchain; User: Sara Hooshangi; Timestamp: 7/2/2023 9:17:43 PM; Code(s): ; Trigger: Blockchain; Annotation: low confidence -- coded as AL, business (because of currencies), and PDC; User: Lecia Barker; Timestamp: 6/25/2023 7:43:38 PM; Code(s): ; Trigger: blockchain"
Computer Forensics,"<h2>title</h2>Computer Forensics<h2>summary</h2>This course studies techniques and tools in computing investigation, digital evidence collection, recovery, and analysis. Topics include: Legal issues relating to digital evidence, recover deleted files and discover hidden information, reconstruct user activity from e-mail, temporary Internet files and cached data, assess the integrity of system memory and process architecture to reveal malicious code. <h2>ilo</h2>1. Define and explain the role of digital forensics in the incident response and investigatory process2. Identify the requirements for proper evidence collection, handling and storage3. Identify and explain basic techniques to properly collect and analyze evidentiary data using appropriate tools and techniques in common scenarios4. Organize and present evidentiary data and investigatory findings for use in corporate or legal proceedings ",IT4853,Kennesaw_USA,Computer Forensics,SEP,,SEC,SEC,SEC; 16,SEC,15; SEP; DM,
Infrastructure Defense,"<h2>title</h2>Infrastructure Defense<h2>summary</h2>This course provides an overview of the infrastructure assessment and penetration testing process and the processes and techniques for improving the defensibility of that infrastructure. <h2>ilo</h2>1. Apply problem solving skills, core IT concepts, best practices and standards to information technologies2. Identify and evaluate organizational requirements and current and emerging technologies3. Communicate effectively, both in writing and in speaking4. Demonstrate an ability to participate effectively in the planning and execution of team projects ",IT4883,Kennesaw_USA,Infrastructure Defense,SEC,,SEC,SEC,NC; SEC,SEC; SF,SE,
Internet of Things: Applications and Security,"<h2>title</h2>Internet of Things: Applications and Security<h2>summary</h2>This course introduces core knowledge and skills required to develop and design innovative IoT solutions. Students will analyze the challenges, apply appropriate patterns for user-interaction and learn about trends and characteristics in IoT. In addition, students will evaluate the security design of a suite of IoT-connected products. <h2>ilo</h2>1. Define the meaning of internet of things in various IoT application domains  smart cities, smart environment, eHealth, etc.2. Illustrate the impact of IoT on existing business models and business use cases3. Explain the IoT in conjunction with big data, applications, and mobility4. Illustrate IoT security challenges and the impact of IoT on consumer privacy5. Define the components required for the internet of things6. Design and develop a smart device ",IT4893,Kennesaw_USA,Internet of Things: Applications and Security,SEC; SPD,,SDF; SEC,NC; SPD,SPD; SEC,SPD; SEC,SEC,Annotation: The title of the module includes IoT and security but the LOs focus only on IoT. Security is not mentioned at all.; User: Ruth Lennon; Timestamp: 7/5/2023 11:36:18 PM; Code(s): ; Trigger: 
Cloud Software Development,"<h2>title</h2>Cloud Software Development<h2>summary</h2>This course discusses the fundamental concepts and tools of cloud-based application development. Students will learn how to develop apps on top of the cloud with an understanding of various contemporary cloud providers (e.g., Amazon Web Services, Google Cloud, or Microsoft Azure). Students will do hands-on projects focused on building cloud-run applications using their platform of choice. <h2>ilo</h2>1. Describe an apply principles of cloud-based application development2. Describe service models in cloud computing3. Describe and apply the principles of Cloud Web Services and its related technologies4. Design and develop applications in the cloud ",SWE4633,Kennesaw_USA,Cloud Software Development,SPD,,SDF,NC,NC,SPD,SE; PDC,
User Interaction Engineering,"<h2>title</h2>User Interaction Engineering<h2>summary</h2>This course covers the basic theories and principles applied to the design of human-computer interfaces. It introduces students to the basic concepts used in designing interactions. It will cover the basic theory and methods that exist in the field. Case studies are used throughout the readings to exemplify the methods presented and to lend a context to the issues discussed. This course will focus on the semiotic engineering approach to human-computer interaction, in which the interaction is analyzed in terms of communication between the designers of the artifact and the user. <h2>ilo</h2>1. Know and use User Interaction Engineering principles and guidelines2. Gather the user and task characteristics to form an interaction dialogue which is evaluated by the user to be satisfactory3. Design and build an interface system that meets the goals of the user interaction dialogue4. Perform a user interaction evaluation ",SWE4783,Kennesaw_USA,User Interaction Engineering,HCI; SE,,HCI; SDF,HCI; GIT,HCI,HCI,HCI,
Independent Study,<h2>title</h2>Independent Study<h2>summary</h2>Independent study/project under the direction of a member of the graduate faculty. Course description will vary. <h2>ilo</h2>1. Design and implement a complete serious educational game2. Evaluate or conduct research on a serious educational game3. Build a working knowledge of principles and practices in computer game design and implementation4. Develop skills in problem solving system integration and interface design5. Communicate  written and verbally  about a complex technical topic simply and coherently ,SWE4803,Kennesaw_USA,Independent Study,22; GIT; SPD,,,,SEP; 22,,GIT; SPD; 21,"Annotation: Not quite game design enough for game design, I don't think!; User: Jack Parkinson; Timestamp: 7/3/2023 12:15:29 AM; Code(s): ; Trigger: ; Annotation: Independent Study; User: Sara Hooshangi; Timestamp: 7/2/2023 9:18:57 PM; Code(s): ; Trigger: Independent Study"
Introduction to Software Engineering,<h2>title</h2>Introduction to Software Engineering<h2>content</h2>An introduction to agile development methods appropriate for medium-sized teams and rapidly-moving projects. Basic software development infrastructure; requirements elicitation and tracking; estimation and prioritization; teamwork skills; basic UML; design patterns and refactoring; security. ,CSC301H5,UofT_Canada,Introduction to Software Engineering,SE,,SE,SE,SDF,SE,SE,
Principles of Programming Languages,"<h2>title</h2>Principles of Programming Languages<h2>content</h2>Major topics in the development of modern programming languages. Syntax specification, type systems, type inference, exception handling, information hiding, structural recursion, run-time storage management, and programming paradigms. Two non-procedural programming paradigms: functional programming (illustrated by languages such as Lisp, Scheme, ML or Haskell) and logic programming (illustrated by languages such as Prolog, XSB or Coral). ",CSC324H5,UofT_Canada,Principles of Programming Languages,FPL,,FPL,FPL,FPL,FPL,FPL,
Numerical Methods,"<h2>title</h2>Numerical Methods<h2>content</h2>Computational methods for solving numerical problems in science, engineering and business. Linear and non-linear equations, approximation, optimization, interpolation, integration and differentiation. The aim is to give students a basic understanding of floating-point arithmetic and the implementation of algorithms used to solve numerical problems, as well as a familiarity with current numerical computing environments.Course concepts are crucial to a wide range of practical applications such as computational finance and portfolio management, graphics and special effects, data mining and machine learning, as well as robotics, bioinformatics, medical imaging and others. ",CSC338H5,UofT_Canada,Numerical Methods,AL,,MSF,AL; 09,MSF,MSF,AL; MSF,
Algorithmic Intelligence in Robotics,"<h2>title</h2>Algorithmic Intelligence in Robotics<h2>content</h2>Robots of the future will need to operate autonomously in unstructured and unseen environments. It is imperative that these systems are built on intelligent and adaptive algorithms. This course will introduce fundamental algorithmic approaches for building an intelligent robot system that can autonomously operate in unstructured environments such as homes and warehouses. This course introduces the broad philosophy of “Sense-Plan-Act”, and covers algorithms in each of these areas -- how should the robot perceive the world, how to make long term decisions and how to perform closed-loop control of articulated robots. ",CSC375H5,UofT_Canada,Algorithmic Intelligence in Robotics,SPD; AI,,AL; AI,AL; AI,AI; SPD,AI; SPD,AL; AI,
Fundamentals of Robotics,"<h2>title</h2>Fundamentals of Robotics<h2>content</h2>An introduction to robotics covering basic methodologies, tools, and concepts to build a foundation for advanced topics in robotics. The course covers robot manipulators; kinematics; motion planning; and control. Topics covered in lecture will be implemented and explored in a practical environment using robots from different application domains. ",CSC376H5,UofT_Canada,Fundamentals of Robotics,SPD,,AI,AI; SPD,SPD,SPD,AR; 10,
Introduction to Artificial Intelligence,"<h2>title</h2>Introduction to Artificial Intelligence<h2>content</h2>Theories and algorithms that capture (or approximate) some of the core elements of computational intelligence. Topics include: search, logical representations and reasoning, classical automated planning, representing and reasoning with uncertainty, learning, decision making (planning) under uncertainty. Assignments provide practical experience, in both theory and programming, of the core topics. ",CSC384H5,UofT_Canada,Introduction to Artificial Intelligence,AI,,AI,AI,AI,AI,AI,
Computers architecture,"<h2>title</h2>Computers architecture<h2>summary</h2>In this subject, the knowledge of computer architecture introduced in the Fundamentals and Structure of Computers of the Degree in Computer Engineering is deepened.The course delves into advanced concepts of computer structure: computer performance and processor pipeline. In addition, an introduction is made to the differentiating elements of multiprocessors, and their different architectures.The course has a strong practical component. The first part of the lab (Practice 1) is done using CPU architecture simulators (such as the WINDLX simulator in the Windows environment). The second part of the laboratory (Practice 2) deals with basic parallel programming issues.<h2>content</h2>The course consists of four modules that cover the proposed objectives.MODULESShort descriptionModule 1:computer performanceThe different figures of merit used to evaluate the performance of computers are presented, as well as the problems that their interpretation has. Amdahl's law and its implications are presented.Module 2:Introduction to segmentationThe main technique used today by all microprocessors to reduce program execution times is presented and analyzed. This technique is instruction execution pipeline and is based on taking advantage of instruction-level parallelism by executing more than one machine language instruction per clock cycle, while reducing processor cycle time.Module 3:pipelined processors Module 4:multiprocessorsThe fourth block studies multiprocessor systems based on scalar microprocessors. Study: multiprocessor systems, memory coherence, interconnection networks for multiprocessors, synchronization models and parallel programming.Detailed content by module and annex:DIDACTIC MODULESSubscriptModule 1:computer performance1.1 Need to evaluate Performance.1.2 Figures of merit.1.3 Performance Evaluation Programs.1.4 Amdahl's Law.Module 2:Introduction to segmentation2.1 Improvements in microprocessor performance.2.2 Parallelism at the instruction level.2.3 Joint evolution of technology and architecture.Module 3:pipelined processors3.1 Segmented processors. Linear segmented processor.3.2 Example of sequential architecture.3.3 Linear segmented processor. Calculation instructions and memory access.3.4 Linear Segmented Processor Data Risk.3.5 Linear Segmented Processor. Sequence break instructions.3.6 Reduction of lost cycles due to data risks.3.7 Reduction of lost cycles due to control risks.3.8 Cycles lost due to structural risks3.9 Segmented Architecture with Multicycle Operations.3.10 Advanced Topics.Module 4:multiprocessors4.1 Multiprocessor systems4.2 Consistency of memory4.3 Interconnection networks for multiprocessors4.4 Synchronization and communication4.5 Parallel programming models4.5.1 Shared variables model4.5.2 Message passing model ",5.578,UOC_Spain,Computers architecture,AR,,AR,AR,AR,AR,AR,
Automata and grammars,"<h2>title</h2>Automata and grammars<h2>summary</h2>A very important part of the information available today is available in textual format: web pages, configuration files, scripts, computer programs or even natural language text. For a computer to be able to use this information, it needs to be able to interpret it according to the rules of the language in which it is written.In this subject, basic techniques are presented to describe the structure of a language, regular expressions and context-free grammars. These notations are used, for example, to describe programming languages ​​or describe text patterns for searching.In addition, the mechanisms used by computers to recognize if a sentence is correctly formed according to the structure of a language are presented. Specifically, finite automata and stacked automata are presented.In summary, this subject provides the basic tools to know how to handle textual information with a computer.<h2>content</h2>The subject is structured in three modules:1. Alphabets, words and languages1. Basic elements: alphabets, words and languages2. Operations with words3. Operations on languages4. Definition of languagesThis module describes the elements that make up a language and the operations to manipulate them.2. Finite automata and regular languages1. Deterministic finite automata and regular languages2. Indeterministic finite automata3. Operations with finite automata4. Minimization of finite automata5. Regular Expressions6. The motto of the bombThe simplest class of languages, regular languages, is introduced. A formalism is provided to describe these languages ​​(regular expressions) and another to recognize the words that are part of them (stack automata).3. Non-contextual grammars and stack automata1. Introductory concepts2. Derivation tree and ambiguity3. Grammar review4. Simplification of a grammar5. Normal forms6. Automata with battery7. Properties of decontextualized languagesA class of more complex languages, called context-independent, is introduced. The structure of this language is described by grammars and its words are recognized by stack automata. ",5.579,UOC_Spain,Automata and grammars,AL,,DM; 19,FPL,AI; AL,,AL,Annotation: applied AL because the ACM doc includes formal automata as a CS core topic under AL/Computational Models; User: Lecia Barker; Timestamp: 6/25/2023 8:17:58 PM; Code(s): AL; Trigger: automata
Machine learning,"<h2>title</h2>Machine learning<h2>summary</h2>The main motivation of this course is to make machine learning known and how it is situated within Artificial Intelligence as a discipline and to understand what agents and multi-agent systems are.In Artificial Intelligence an overview of Artificial Intelligence was given and some of the so-called classical methods and techniques were presented, such as problem solving, search and knowledge-based systems, approximate reasoning techniques were also seen more advanced. .In this course, you will go much deeper into the problem of machine learning (machine learning), covering the topics of unsupervised (clustering) and supervised (classification) learning. In particular, emphasis will be placed on the most advanced algorithms, such as support vector machines, classifier sets or neural networks.<h2>content</h2>Didactic module 1. Learning1. Introduction1.1. Genetic algorithms for the adjustment of fuzzy systems1.2. A classification of learning techniques.1.3. bias and variance2.- Feature extraction2.1. Training sets and featured spaces.2.2. Taxonomy of feature extraction algorithms23. Feature Selection2.4. Feature Extraction2.4.1. Principal component analysis2.4.2. Linear Discriminant Analysis (ADL)3. Unsupervised learning3.1. Categorization algorithms: introduction3.2. Partitioning and fuzzy partitioning of objects3.3. Object hierarchies4. Supervised learning4.1. Methods based on categorization methods4.2. support vector machines4.3. Logical descriptions of concepts.4.4. decision trees4.5. Combination of methods4.6. neural networks5. Knowledge representation and learning5.1. inductive logic programmingDidactic module 2. Agents and multi-agent systems1. Intelligent agents1.1. characteristics of an agent1.2. Deliberative agents versus reactive agents1.3. Agent Types2. Multi-agent systems2.1. Advantages of multi-agent systems2.2. Communication techniques23. Foundation for Intelligent Physical Agents2.4. ontologies2.5. Cooperation between agents ",5.583,UOC_Spain,Machine learning,AI,,AI,AI,AI; AL,AI,AI,
Data mining,"<h2>title</h2>Data mining<h2>summary</h2>Data is the new oil. Therefore, Data Mining is a subject to apply the previous knowledge acquired to Statistics and Databases and present some new ones more specific to the field of knowledge extraction. A set of methods from Artificial Intelligence are presented, which form the essential core of the discipline known as Data Mining. The basic concepts of the mentioned subjects are very useful in this matter and will allow a better evaluation of some of the techniques that will be studied.<h2>content</h2>The didactic material of the subject is divided into six modules and a prologue that present a notable interrelationship between them. The sixth is a case study that can be used to see how the methods explained in the other modules are applied in a concrete and real case.Below you can see the modules that have to be worked on to achieve the objectives of the course.Module 1: The Data Mining process.Discovery of knowledge from data.The phases of the knowledge extraction process.Data mining tools.Module 2: Data preprocessing and feature management.Transformation of values.Dimensionality reduction.missing values.Feature display.Selection of characteristics.Feature engineering.Module 3: Unsupervised modelsPre-eliminate concepts.Grouping and segmentation.Density-based models.affinity propagation.Module 4: Supervised modelsProximity-based models.Decision trees.Regression models.Module 5: Evaluation of models.Evaluation of supervised classification models.Evaluation of supervised regression models.Evaluation of unsupervised models.Module 6: Case Study.Presentation of the caseStep 1: Establish an analytical objectiveStep 2: Verify the dataStep 3: data preprocessingStep 4: exploratory analysisStep 5: ClassificationStep 6: Reproducibility ",5.584,UOC_Spain,Data mining,AI,,AI,AI; 19,DM; AI,AI; DM,DM,
Software developement project,"<h2>title</h2>Software developement project<h2>summary</h2>The Software Development Project course has as its main objective the development of a specific software project and is based on the practical application of the knowledge and skills obtained so far in the Degree, such as Project Management, Fundamentals of Programming, Engineering of Software, Use of Databases, and specifically the technical skills that were obtained within Software Engineering of Components and Distributed Systems.Despite the fact that the subject is based on carrying out a specific software project, the subject also covers both new theoretical aspects and others that complement the knowledge acquired up to now, such as agile software development methodologies.The effective development of the project will be achieved through a specific agile methodology (Scrum) that iteratively covers in the form of sprints all the stages of the software life cycle, that is, the specification, design, implementation, testing, deployment and delivery of the project. product to the ""supposed"" customer. In particular, in the implementation stage, Java will be used to develop the distributed software based on a microserver architecture. In addition, other technologies will support the project, such as configuration, design, testing, continuous delivery, and containerized deployment tools. All these technologies have been seen and practiced in the previous subject of Software Engineering of Distributed Components and Systems and therefore it is assumed that the students know them.Finally, the complexity of the project will require the specific development of skills related to collaborative work in small groups of students. The UOC will offer students a collaborative space where they can carry out communication between group members, share documentation and, in general, manage the project, with the support and supervision of the subject advisors.<h2>content</h2>Activity 1: ""Agile product development and conceptualization methodologies""Book ""Essential Scrum: A practical guide to the most popular agile process by Kenneth S. Rubin. Chapter 1. Introduction.Book ""Essential Scrum: A Practical Guide to the Most Popular Agile Process"" by Kenneth S. Rubin. Chapters 2-13.Book ""The agile samurai"" by Jonathan Rasmusson. Chapters 3-5.Book ""The agile samurai"" by Jonathan Rasmusson. Chapters 1-2, 6 and 15.Book ""Agile Estimating and Planning"" by Mike Cohn (supplementary material).Book ""Scrum - a pocket guide (3rd ed.)"" by Gunther Verheyen (supplementary material).Activity: First Continuous Assessment Test (PEC1).Activity 2: ""Product Planning""Book ""Essential Scrum: A Practical Guide to the Most Popular Agile Process"" by Kenneth S. Rubin. Chapters 15-16.Book ""Essential Scrum: A Practical Guide to the Most Popular Agile Process by Kenneth S. Rubin. Chapters 19-23.Article ""The new user story backlog is a map"" by Jeff Patton. https://www.jpattonassociates.com/the-new-backlog/Book ""User Stories Applied: For Agile Software Development"" by Kent Beck (supplementary material).Book ""User Story Mapping"" by Jeff Patton (supplementary material).Book ""Essential Scrum: A Practical Guide to the Most Popular Agile Process"" by Kenneth S. Rubin. Chapters 17 Envisioning (Product Planning) (Supplementary Material).Book ""Clean Code: A Handbook of Agile Software Craftsmanship"" by Robert Martin (supplementary material).Book ""Refactoring: Improving the Design of Existing Code"" by Martin Fowler (Supplementary Material)Activity: First part of the Practice (PRAC1). ",5.588,UOC_Spain,Software developement project,SEP; SDF,,SE; SDF,FPL,SDF; 17,SDF; SE,SE; 17,
Advanced computers architecture,"<h2>title</h2>Advanced computers architecture<h2>summary</h2>In this subject, knowledge of the advanced architectures of current computers is deepened. On the one hand, previous knowledge in Fundamentals and Structure of Computers and Computer Architecture will be expanded. On the other hand, different models of current processor architectures will be presented. Among them, high performance architectures, multicores or GPU architectures will be studied.However, not only the purely architectural aspects of these systems will be discussed, but the different programming paradigms associated with these architectures will also be presented.<h2>content</h2>The subject is made up of five modules that cover the objectives and competences previously exposed: Module 1: Introduction to parallel architectures.Module 2: Multiprocessors vs MulticomputersModule 3: Multi-Thread Architectures (Multi-core)Module 4: Performance in multithreaded architecturesModule 5: Computer Graphics (GPU)-Based Architectures ",5.592,UOC_Spain,Advanced computers architecture,AR,,AR,AR,AR; PDC,AR,AR,
Requirements engineering,"<h2>title</h2>Requirements engineering<h2>summary</h2>Requirements engineering is the discipline that helps us to identify, manage and maintain the set of software requirements that we want to develop. Requirements engineering takes place in the same context as software engineering (software development), so it can be seen as part of software engineering. Even so, it must be taken into account that requirements engineering requires knowledge and skills from other disciplines such as psychology, marketing or design.The purpose of this course is for future software engineers to deepen their study of the problems, techniques, and tools related to obtaining, managing, documenting, and validating/verifying the requirements of a software system. When presenting the contents of this course, we have set ourselves two main objectives:1) The discipline of requirements engineering is presented from a practical point of view, giving great importance to the techniques and tools that students will be able to apply in their professional lives.2) The broadest possible vision of requirements engineering is also given, looking at aspects as diverse as product management or the implementation of automated acceptance tests.This subject assumes that the student has basic notions of requirements engineering (in the case of UOC students, it will be assumed that they have taken the Software Engineering subject). Therefore, this course deepens and extends some concepts that have already been studied before, at the same time that it introduces new techniques and tools of requirements engineering.<h2>content</h2>The didactic material of the subject consists of five didactic modules:Module 1: Introduction to Requirements EngineeringIt introduces requirements engineering and presents the practical case that will be developed throughout the rest of the modules.Introduction to requirements engineering.Presentation of the practical caseTypes of requirementsThe requirements engineering process.Use Case RequirementsModule 2: Obtaining requirementsIt reviews the basic requirements elicitation techniques and introduces new techniques.Requirements elicitation techniquesrequirements discoverylegacy solutionsObjectives and requirementscase studyModule 3: Requirements ManagementDescribes new techniques for requirements management, especially from the point of view of managing software as a product.Factors to consider for requirements managementRequirements estimationPrioritization and selection of requirementsManagement of changes in requirements.case studyModule 4: Documentation of requirementsIt shows various styles of requirements documentation and how the different styles have advantages and disadvantages that make them ideal for different situations.Requirements Documentation - OverviewRequirements Documentation StylesDocumentation of requirements through use casesDocumentation of the conceptual model using UML and OCLcase studyModule 5: Validation and verification of requirementsDescribes the process for validating and verifying the correctness of the selected requirements. First, it describes how to verify that the requirements you choose are correct (validation), and then how you can ensure that the software you develop meets these requirements (verification).Requirements validationRequirements verificationTest Driven Developmentcase study ",5.593,UOC_Spain,Requirements engineering,SE,,SE,SE,SE,SE,SE; 17,
Foundations of information systems,"<h2>title</h2>Foundations of information systems<h2>summary</h2>The continuous innovations in information and communication technologies are transforming the corporate business world into new models, new processes and new business needs. This environment has favored the investments of the companies to be more competitive in the current market, allocating a budget to the acquisition, implementation or updating of information systems.In this topic we present the basic concepts of information systems, the types of information systems, the relevance of information systems for companies, what the first information systems were like, how they have evolved and what the systems of the system have to contribute. future. In companiesWe will know the main information system: Enterprise Resource Planning, today also known as basic or traditional.We will see how the incorporation of new functionalities in the evolution of ERP systems gives rise to new collaborative information systems: Customer Relationship Management (CRM), Supplier Chain Management (SCM) or Business Intelligence (BI).And a transversal theme to any company information system, its implementation. We will cover the life cycle of an implementation project, the characteristics of its different phases, the problems and what guidelines to follow to obtain a successful implementation.<h2>content</h2>The concept of information system is gradually introduced in the different didactic modules: beginning with its definition, presenting the different types of information systems that exist, showing the most important information systems for companies, and ending with a module on how to these systems are implemented. in companies it is managed.The content of the subject is divided into the following didactic modules:Module 0. Introduction to information systems in organizationsthe information systemInformation system managementThe typologies of information systems.The implementation of the information systeminformation securityModule 1. Business Information SystemBusiness information system conceptHistorical evolution of the ERP systemERP system architecturefunctional modulesERP system life cycleERP system providersModule 2. Business Cooperation SystemsEnterprise Project Management (EPM)Supply Chain Management (SCM)Customer relationship management (CRM)Electronic commerce (e-business)Business Intelligence (BI)Knowledge Management (KM)document managementModule 3. Implementation of Business Information SystemsCharacteristics of business information systems.Deployment Lifecycle PhasesPhase 1. Adoption of the system: The decision to acquire an ERPPhase 2. Selection of the standard solutionPhase 3. Implementation of the solutionPhase 4. CommissioningChange managementProject managementModule 4. Practical Case: Rural Tourism (Example)Presentation of the practical caseGeneral solution approachProposed solution ",5.596,UOC_Spain,Foundations of information systems,17,,10; 17,DM,DM; SF,17,DM; SE; 17,
Planning and strategic use of IS,"<h2>title</h2>Planning and strategic use of IS<h2>summary</h2>The mission of this course is to introduce students of Computer Engineering and other careers to the basics to understand the strategic uses of technology in organizations and the management and strategic planning of information systems. In increasingly complex environments, information and technology management represents a key aspect for the success and proper functioning of any type of organization, whether private companies or public administrations.This is a relatively new discipline, both in academic theory and research, and in professional practice. The concept of CIO (the chief executive officer responsible for company information and technology) appeared in the early 1980s and the Association for Information Systems (AIS) was established in 1994.Information systems management involves the design, effective delivery, use, and impact of information technology within organizations and on society. In the words of Keen (1987), the main focus of this course is the improvement of management design and practice (""management""), in its broadest sense; After all, ""IT management is all about management"" (Austin & Nolan, 2010).The above definitions describe the hybrid nature of this topic. Technology is not an artifact outside of its use in companies, organizations and human beings. Information systems are not only design, programming or architecture, but above all their effective implementation. And its management is not just about tactics and techniques (improving the organization and processes of the IT department), but about strategy (the relationship with the business strategy and obtaining competitive advantages). For this reason, when we say ""strategic management"", we want to emphasize the more proactive and transformative role that information and technologies have for the company and the need to align information and technology systems with the strategy of the company as a whole. In addition, the volume and relevance of IT spending is increasingly on the agenda of CEOs and the steering committee of companies and organizations.This course is designed to provide students of the Bachelor's in Computer Engineering and other programs with an introductory overview of the issues currently facing business and technology and the relationship between the two and, in particular, the role of the chief executive officer responsible for systems. and technologies:What are the main strategic decisions in information systems and how should they be considered and adopted?How should ICT be directed so that they are correctly aligned with the global business strategy?How can you ensure more productive relationships between IT departments and other departments and business units?What are the main contributions of information systems to support, transform and create new products, processes and even businesses?How information and knowledge management is transforming the way of doing business and the role of IT?How can IT planning provide a framework and roadmap for meeting the company's mission and vision? How can it be implanted?How can the IT organization be transformed with a strategic sense?Additionally, currently there is talk of ""digital transformation"", the process by which organizations have to redesign their products and services, their work processes and their relationship with customers, suppliers, partners and staff due to the irruption of the internet, mobility, cloud and big data. The director of organization and information technology (CIO, or Chief Information Officer) assumes a new role as leader, or at least, prominent partner in this transformation and there is also a greater approach of users and business managers to technologies of the information.<h2>content</h2>The learning units are the following:Module 1: Strategic Decisions in Information Systems and Technologies.Module 2: Information Technologies and Business Strategy.Module 3: Information Technologies and Business Processes.Module 4: Information and Knowledge Management.Module 5: Strategic Planning of Information Systems and Technologies.Module 6: Transformation of the information systems management function.We draw attention to the fact that some of these materials may be common to the subject of Strategic Management of Information Systems at the Master's level. At grade level, these competencies are worked on in a different way and with different levels of depth. The teaching guides that will accompany each module or other complementary materials will provide specific instructions on how to carry out an adequate follow-up of the subject. ",5.6,UOC_Spain,Planning and strategic use of IS,17,,10; 17,DM,DM; SF,17,17; DM; SE,
Data structures design,"<h2>title</h2>Data structures design<h2>summary</h2>In this subject the different strategies of data representation in a computer and the criteria to evaluate them are studied. Depending on the type of treatment that has to be done with this information (size, access criteria, etc.), it will be possible to select the strategy that offers an optimal balance between memory consumption and manipulation time.This course is fundamental within the field of programming, since the proper use of data structures is critical in any application that handles large volumes of information or that has very strict efficiency requirements.Previous courses in the field of programming have already introduced some basic data structures, such as lists, stacks, queues, or trees. This subject presents the concept of abstract data type (ATD) as a general model to describe a data structure and study its efficiency. Finally, the core of the course consists of learning to use each data structure properly and knowing how to select the most appropriate data structure for each situation.<h2>content</h2>The subject is structured in eight modules (module 8 of the subjects is not studied):1. Abstract data typescontainerscontract designDeveloping a Sample CollectionGeneric or parametric typesLibrary of thematic collectionsPresentation of the rest of the modulesStudy of the concept of TAD and aspects related to its definition and implementation in classes through a hierarchy.2. Algorithmic complexityIntroduction to algorithmic complexityAsymptotic notation for algorithmic complexityAlgorithmic complexity of abstract data typesDescription of the methods used to compare the cost of different programs in terms of execution times or memory consumption.3. Sequential containersbatteriestailschained representationslizaVector representations: resizingSequential Containers in the Java Collections FrameworkStudy of collections of objects with sequential access (stacks, queues, lists).4. treesGeneral and binary trees. Definitions and related conceptsrecursiongeneral treesbinary treesexcursionsAn example file systemPresentation of data structures used to represent hierarchical relationships and introduction of the concept of recursion.5. Priority queuesThe priority queue conceptpriority queue operationPriority queue implementationsPriority queues in JDK librariesHeap Sort: The Heapsort AlgorithmUsage example: Huffman algorithmStudy of the design and implementation of collections where the order of access to the elements depends on their priority.6. The TAD tablePresentation of the TAD TableScatter implementation of the TAD TableThe Joint TADApplication example: a symbol table for a modular languageTables and sets in the Java Collections FrameworkStudy of the concept of dispersion, presentation of the TAD table and the strategies for its implementation.7. Look for treessearch treesImplementation of ordered collections with binary search treesMultipath trees and B-treesSearch Trees in the Java Collections FrameworkDeepening of the tree concept and its applications to represent ordered collections.8. Graphics(This module is not studied)The concept of graph.The abstract data type GraphJava interfaces for directed and undirected graphsGraph ImplementationExample of use: TAD AcademyReview of the concept of graphs and description of strategies to implement different types of graphs (directed or undirected, labeled or unlabeled,...).9. Collection LibrariesDesign of new TADs using a library of collectionsCollection Library DesignLibraries of existing collectionsAnalysis of the design of new TADs from other existing ones. Study of the considerations that affect the design of collection libraries and presentation of some existing libraries (Java Collections Framework, Java Data Structure Library, ...). ",5.613,UOC_Spain,Data structures design,DM,,FPL,DM,DM,DM; SDF,AL,
Introduction to mathematics for engineering,"<h2>title</h2>Introduction to mathematics for engineering<h2>summary</h2>Mastering the contents and mathematical methodology is essential to take any scientific degree. Therefore, it is necessary to understand its basic techniques and concepts (many times already covered in secondary and high school) before addressing the subjects of the career that you want to take.In this course, the basic techniques and concepts of linear algebra and calculus will be provided, to guarantee adequate preparation to pass many of the subjects of the degree.<h2>content</h2>MODULE 1: ALGEBRA BLOCKTopic 1: Numbers (0.5 credits)Topic 2: Equations (0.5 credits)Topic 3: Systems of equations (0.5 credits)Topic 4: Polynomials (0.5 credits)Topic 5: Matrices (0.5 credits) MODULE 2: ANALYSIS BLOCKTopic 6: Polynomial functions (0.5 credits)Topic 7: Trigonometric functions (0.5 credits)Topic 8: Exponential and logarithmic functions (0.5 credits)Topic 9: Continuity of functions (0.5 credits)Topic 10: Derivation of functions (0.75 credits)Topic 11: Integration of functions (0.75 credits) ",5.614,UOC_Spain,Introduction to mathematics for engineering,MSF,,MSF,MSF; 09,MSF,MSF,MSF,
Business practice,"<h2>title</h2>Business practice<h2>summary</h2>The objective of the Practices is for the student to learn to work on a day-to-day basis in a company and apply certain skills acquired in the Computer Engineering degree, both transversal and specific. The internships in companies will be organized from the UOC, with a trainee professor, and from the company with a tutor who will guide and monitor the student.The internships will be carried out mainly online within the framework of the UOC's virtual campus. In some cases, depending on the circumstances of residence and availability of the student, they may have a face-to-face component.The tools to develop the practices will be mainly those provided by the studies, being able to receive from the company some other specific tool to develop the work. The study load for the student will be 12 ETCS, equivalent to about 300 hours of work in the company.<h2>content</h2>The content of the internships will be marked by the type of company and the projects that are being carried out at the time the student does the internship. ",5.672,UOC_Spain,Business practice,17; SEP,,17,SEC; 17,17; SEP,17,17; SE,
Intermediate Software Design and Engineering,"<h2>title</h2>Intermediate Software Design and Engineering<h2>content</h2>Explores the principles of software design in detail, with an emphasis on software engineering aspects. Includes exposure of software lifecycle activities including design, coding, testing, debugging, and maintenance, highlighting how design affects these activities. Peer reviews, designing for software reuse, CASE tools, and writing software to specifications are also covered. ",CS3704,VirginiaTech_USA,Intermediate Software Design and Engineering,SE; SDF,,SDF,SE,SDF; SE,SDF; SE,SDF,
Introduction to GUI Programming and Graphics,"<h2>title</h2>Introduction to GUI Programming and Graphics<h2>content</h2>Design and implementation of object-oriented graphical user interfaces (GUI) and two-dimensional computer graphics systems. Implementation methodologies including callbacks, handlers, event listeners, design patterns, layout managers, and architectural models. Mathematical foundations of computer graphics applied to fundamental algorithms for clipping, scan conversion, affine and convex linear transformations, projections, viewing, structuring, and modeling. ",CS3744,VirginiaTech_USA,Introduction to GUI Programming and Graphics,GIT; MSF,,GIT,GIT; HCI,GIT; HCI,GIT,GIT,Annotation: ; User: Lecia Barker; Timestamp: 6/25/2023 8:41:28 PM; Code(s): ; Trigger: ; Annotation: I added MSF because it talks about the mathematical foundations of graphics programming.; User: Lecia Barker; Timestamp: 6/25/2023 8:40:56 PM; Code(s): GIT MSF; Trigger: GUI programming
Data and Algorithm Analysis,<h2>title</h2>Data and Algorithm Analysis<h2>content</h2>Data structures and algorithms from an analytical perspective. Theoretical analysis of algorithm efficiency. Comparing algorithms with respect to space and run-time requirements. Analytical methods for describing theoretical and practical bounds on performance. Constraints affecting problem solvability. ,CS4104,VirginiaTech_USA,Data and Algorithm Analysis,AL,,AL,AL,AL; DM,SDF; AL,AL; DM,
Introduction to Formal Languages and Automata Theory,"<h2>title</h2>Introduction to Formal Languages and Automata Theory<h2>content</h2>The course presents a study of formal languages and the correspondence between language classes and the automata that recognize them. Formal definitions of grammars and acceptors, deterministic and nondeterministic systems, grammar ambiguity, finite state and push-down automata, and normal forms will be discussed. ",CS4114,VirginiaTech_USA,Introduction to Formal Languages and Automata Theory,FPL,,AL,FPL,AL,AL,FPL,
Quantum Computation and Information Processing,"<h2>title</h2>Quantum Computation and Information Processing<h2>content</h2>Quantum states and quantum phenomena. Quantum communication concepts such as superdense coding, teleportation, and complexity. Classical and quantum circuits and gate sets for computation. Quantum algorithms and comparison to classical algorithms. Quantum computational complexity theory and complexity classes. Quantum information concepts such as density operators, measurements, and quantum channels. Error correction, the stabilizer formalism, and fault-tolerance. The adiabatic theorem and adiabatic quantum computation. Entanglement and entanglement measures. ",CS4134,VirginiaTech_USA,Quantum Computation and Information Processing,AL,,AL; NC; 07,AR; SPD,AL; 09,AR,AR,Annotation: Quantum Computation; User: Sara Hooshangi; Timestamp: 7/2/2023 9:23:49 PM; Code(s): ; Trigger: Quantum Computation
Competitive Problem Solving II,"<h2>title</h2>Competitive Problem Solving II<h2>content</h2>Deeper treatment of advanced algorithms, data structures, and implementation techniques, taught in a setting that combines collaborative practice with competitive exercise. Students practice to solve problems using a computer, which are judged by automated evaluation software for correctness and efficiency. Practice with advanced searching and graph algorithms, advanced dynamic programming, linear programming techniques, computational geometry, and numerical algorithms. Problems are drawn from multiple areas in computer science. Macro- and micro optimization techniques to improve efficiency are emphasized. ",CS4144,VirginiaTech_USA,Competitive Problem Solving II,AL,,AL,AL,AL,SDF; AL,AL,
Parallel Computation,"<h2>title</h2>Parallel Computation<h2>content</h2>Survey of parallel computer architectures, models of parallel computation, and interconnection networks. Parallel algorithm development and analysis. Programming paradigms and languages for parallel computation. Example applications. Performance measurement and evaluation. ",CS4234,VirginiaTech_USA,Parallel Computation,PDC,,PDC,PDC,PDC,PDC,PDC,
Principles of Computer Security,"<h2>title</h2>Principles of Computer Security<h2>content</h2>Survey of computer security problems and fundamental computer security design principles and models for software systems. Cryptographic models and methods. Modern cyber security techniques for robust computer operating systems, software, web applications, large-scale networks and data protection. Privacy models and techniques. Contemporary computer and network security examples. ",CS4264,VirginiaTech_USA,Principles of Computer Security,SEC,,SEC,SEC,SEC,SEC,OS; NC,
Introduction to Data Base Management Systems,"<h2>title</h2>Introduction to Data Base Management Systems<h2>content</h2>Emphasis on introduction of the basic data base models, corresponding logical and physical data structures, comparisons of models, logical data design, and data base usage. Terminology, historical evolution, relationships, implementation, data base personnel, future trends, applications, performance considerations, data integrity. Senior standing required. ",CS4604,VirginiaTech_USA,Introduction to Data Base Management Systems,DM,,DM,DM,DM; SF,DM,DM,
Computer Network Architecture & Programming,"<h2>title</h2>Computer Network Architecture & Programming<h2>content</h2>Introduction to computer network architecture, and methods for programming network services and applications (e.g. DNS, Email and MIME, http, SNMP, multimedia). Wired, wireless, and satellite network architectures. OSI protocol model, with an emphasis on upper layers. Congestion control, quality of service, routing. Internet protocol suite (e.g. IP, TCP, ARP, RARP). Server design (e.g. connectionless, concurrent). Network programming abstractions (e.g. XDR, remote procedure calls, sockets, DCOM). Case studies (e.g. TELNET). ",CS4254,VirginiaTech_USA,Computer Network Architecture & Programming,NC,,NC; AR,AR,NC,NC,NC,
Introduction to Data Base Management Systems,"<h2>title</h2>Introduction to Data Base Management Systems<h2>content</h2>Emphasis on introduction of the basic data base models, corresponding logical and physical data structures, comparisons of models, logical data design, and data base usage. Terminology, historical evolution, relationships, implementation, data base personnel, future trends, applications, performance considerations, data integrity. Senior standing required. ",CS4604,VirginiaTech_USA,Introduction to Data Base Management Systems,DM,,DM,DM,DM,DM,DM,
Software Engineering Capstone,"<h2>title</h2>Software Engineering Capstone<h2>content</h2>Senior project course integrating software engineering knowledge and skills acquired in previous courses. Team-based approach to problem formulation, requirements engineering, architecture, design, implementation, integration, documentation and delivery of a software system that solves a real-world problem. ",CS4704,VirginiaTech_USA,Software Engineering Capstone,SE,,SE,SE,SE,SE,SE,Annotation: Is this really an elective?; User: Lecia Barker; Timestamp: 6/25/2023 8:43:45 PM; Code(s): ; Trigger: capstone
Human-Computer Interaction Capstone,"<h2>title</h2>Human-Computer Interaction Capstone<h2>content</h2>Advanced, project-based course in Human-Computer Interaction. Team-based, end-to-end, integrative interface design project drawn from area of expertise in the department, e.g., virtual reality, augmented reality, embodied cognition, visualization, semiotic engineering, game design, personal information management, mobile computing, design tools, educational technology, and digital democracy. Pre-requisite: Senior Standing required. A grade of C or better is required in CS pre-requisite 3724 and 3744 ",CS4784,VirginiaTech_USA,Human-Computer Interaction Capstone,HCI,,HCI,HCI,SE; HCI,HCI,HCI,Annotation: is this really an elective?; User: Lecia Barker; Timestamp: 6/25/2023 8:44:06 PM; Code(s): ; Trigger: capstone
Computational Biology & Bioinformatics Capstone,"<h2>title</h2>Computational Biology & Bioinformatics Capstone<h2>content</h2>Advanced topics in computational biology and bioinformatics (CBB). Team-based approach to solving open-ended problems in CBB. Projects drawn from areas of expertise in the department, e.g., algorithms for CBB, computational models for biological systems, analysis of structure-function relationships in biomolecules, genomic data analysis and data mining, computational genomics, systems biology. Design, implementation, documentation and presentation of solutions. ",CS4884,VirginiaTech_USA,Computational Biology & Bioinformatics Capstone,AL; 03,,3,AL; 03,SE; 01,AL; 03,DM; AL; 03,"Annotation: Not sure that AL is the right technical topic; seems like topics could fit into multiple categories, but I don't know what they are.; User: Lecia Barker; Timestamp: 6/25/2023 8:45:41 PM; Code(s): ; Trigger: bio-informatics / computational biology"